
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNATION COMMA DECREASE DIFFERENT DIVISION DOUBLE ELSE EQUALS FALSE FOR FUNCTION GREATER GREATEREQUAL IF INCREASE INT LEFTBRACKET LEFTKEY LEFTPAR LESSER LESSEREQUAL MULTIPLICATION NAME NEWLINE OR PRINT PRIVATE PUBLIC READ RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR SEMICOLON STRING SUBSTRACTION SUM TRUE VARDECLARATION VOID WHILE\n    start : decvariable NEWLINE start\n    \n    start : empty\n    \n    decvariable : VARDECLARATION ASIGNATION INT\n    dataTypeAsignation : NAMEdataTypeAsignation : INTdataTypeAsignation : STRINGempty : '
    
_lr_action_items = {'VARDECLARATION':([0,5,],[4,4,]),'$end':([0,1,3,5,7,],[-7,0,-2,-7,-1,]),'NEWLINE':([2,8,],[5,-3,]),'ASIGNATION':([4,],[6,]),'INT':([6,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,5,],[1,7,]),'decvariable':([0,5,],[2,2,]),'empty':([0,5,],[3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> decvariable NEWLINE start','start',3,'p_start','SimpleParser.py',22),
  ('start -> empty','start',1,'p_start1','SimpleParser.py',29),
  ('decvariable -> VARDECLARATION ASIGNATION INT','decvariable',3,'p_decVariable1','SimpleParser.py',34),
  ('dataTypeAsignation -> NAME','dataTypeAsignation',1,'p_dataType1','SimpleParser.py',40),
  ('dataTypeAsignation -> INT','dataTypeAsignation',1,'p_dataType2','SimpleParser.py',44),
  ('dataTypeAsignation -> STRING','dataTypeAsignation',1,'p_dataType3','SimpleParser.py',48),
  ('empty -> <empty>','empty',0,'p_empty','SimpleParser.py',61),
]
