
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNATION COMMA DECREASE DIFFERENT DIVISION DOUBLE ELSE EQUALS FALSE FOR FUNCTION GREATER GREATEREQUAL IF INCREASE INT LEFTBRACKET LEFTKEY LEFTPAR LESSER LESSEREQUAL MULTIPLICATION NAME NEWLINE OR PRINT PRIVATE PUBLIC READ RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR SEMICOLON STRING SUBSTRACTION SUM TRUE VARDECLARATION VOID WHILENiark : methodDefinition NEWLINE NiarkNiark : instruction NEWLINE NiarkNiark : methodDefinitionNiark : instructionmethodDefinition : domain methodType NAME LEFTPAR parameters RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEYmethodDefinition : domain methodType NAME LEFTPAR RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEYinstructions : instruction NEWLINE instructionsinstructions : emptyinstruction : simpleinstruction : complexsimple : asignationsimple : declarationsimple : readsimple : printsimple : functionCallsimple : returnsimple : incdecasignation : NAME ASIGNATION dataTypeAsignationasignation : NAME LEFTBRACKET dataLocalizatorType RIGHTBRACKET ASIGNATION dataTypeAsignationdeclaration : VARDECLARATIONdeclaration : VARDECLARATION ASIGNATION dataTypeAsignationdeclaration : VARDECLARATION LEFTBRACKET dataLocalizatorType RIGHTBRACKETdataTypeAsignation : variabledataTypeAsignation : variableTypedataTypeAsignation : arithmeticread : READ LEFTPAR NAME RIGHTPARprint : PRINT LEFTPAR sendingVariables RIGHTPARfunctionCall : NAME LEFTPAR sendingVariables RIGHTPARfunctionCall : NAME LEFTPAR empty RIGHTPARreturn : RETURN sendingVariablecomplex : ifConditioncomplex : forConditioncomplex : whileConditionifCondition : IF LEFTPAR conditionals RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEYifCondition : IF LEFTPAR conditionals RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY ELSE LEFTKEY NEWLINE instructions RIGHTKEYforCondition : FOR LEFTPAR declaration SEMICOLON conditionals SEMICOLON incdec RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEYwhileCondition : WHILE LEFTPAR conditionals RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEYconditionals : conditionconditionals : condition conditionalOp conditionalsconditionals : LEFTPAR conditionals RIGHTPAR conditionalOp conditionalsconditionals : LEFTPAR conditionals RIGHTPARcondition : sendingVariable conditionOp sendingVariableincdec : preIncdecincdec : postIncdecpreIncdec : INCREASE variablepreIncdec : DECREASE variablepostIncdec : variable INCREASEpostIncdec : variable DECREASEconditionalOp : ANDconditionalOp : ORconditionOp : EQUALSconditionOp : DIFFERENTconditionOp : LESSERconditionOp : GREATERconditionOp : LESSEREQUALconditionOp : GREATEREQUALdomain : PUBLICdomain : PRIVATEmethodType : VOIDmethodType : FUNCTIONparameters : NAME COMMA parametersparameters : NAMEsendingVariables : sendingVariable COMMA sendingVariablessendingVariables : sendingVariablesendingVariable : variableTypesendingVariable : arithmeticsendingVariable : variablesendingVariable : functionCallvariable : NAMEvariable : vectorVariablevectorVariable : NAME LEFTBRACKET dataLocalizatorType RIGHTBRACKETdataLocalizatorType : INTdataLocalizatorType : variabledataLocalizatorType : arithmeticvariableType : numberTypevariableType : stringTypevariableType : booleanTypenumberType : INTnumberType : DOUBLEstringType : STRINGbooleanType : FALSEbooleanType : TRUEarithmetic : moreArithmetic arithmeticOp arithmeticDataTypearithmetic : LEFTPAR arithmetic RIGHTPARarithmetic : moreArithmetic arithmeticOp LEFTPAR arithmetic RIGHTPARarithmetic : arithmeticOp arithmeticDataTypemoreArithmetic : arithmeticDataTypemoreArithmetic : arithmeticarithmeticDataType : numberTypearithmeticDataType : variablearithmeticDataType : functionCallarithmeticOp : SUMarithmeticOp : SUBSTRACTIONarithmeticOp : MULTIPLICATIONarithmeticOp : DIVISIONempty : '
    
_lr_action_items = {'PUBLIC':([0,33,34,],[8,8,8,]),'PRIVATE':([0,33,34,],[9,9,9,]),'NAME':([0,23,29,31,33,34,35,36,37,38,39,40,41,42,43,44,54,56,63,64,65,66,67,69,96,100,101,107,111,116,123,124,125,126,127,128,129,130,131,132,133,138,148,153,154,155,156,159,166,169,179,180,],[5,57,71,71,5,5,77,-59,-60,78,78,57,78,78,94,57,57,57,-92,-93,-94,-95,57,57,57,78,57,135,57,57,57,-49,-50,57,-51,-52,-53,-54,-55,-56,57,78,135,57,5,71,5,5,5,5,5,5,]),'VARDECLARATION':([0,33,34,68,154,156,159,166,169,179,180,],[20,20,20,20,20,20,20,20,20,20,20,]),'READ':([0,33,34,154,156,159,166,169,179,180,],[21,21,21,21,21,21,21,21,21,21,]),'PRINT':([0,33,34,154,156,159,166,169,179,180,],[22,22,22,22,22,22,22,22,22,22,]),'RETURN':([0,33,34,154,156,159,166,169,179,180,],[23,23,23,23,23,23,23,23,23,23,]),'IF':([0,33,34,154,156,159,166,169,179,180,],[26,26,26,26,26,26,26,26,26,26,]),'FOR':([0,33,34,154,156,159,166,169,179,180,],[27,27,27,27,27,27,27,27,27,27,]),'WHILE':([0,33,34,154,156,159,166,169,179,180,],[28,28,28,28,28,28,28,28,28,28,]),'INCREASE':([0,5,30,32,33,34,71,108,141,154,155,156,159,166,169,179,180,],[29,-69,72,-70,29,29,-69,-71,-71,29,29,29,29,29,29,29,29,]),'DECREASE':([0,5,30,32,33,34,71,108,141,154,155,156,159,166,169,179,180,],[31,-69,73,-70,31,31,-69,-71,-71,31,31,31,31,31,31,31,31,]),'$end':([1,2,3,6,7,10,11,12,13,14,15,16,17,18,19,20,24,25,32,45,46,47,48,49,50,51,52,57,58,59,60,61,62,70,71,72,73,74,75,76,78,79,80,81,82,83,88,92,97,98,109,110,112,113,114,115,117,141,151,152,168,171,173,177,183,184,],[0,-3,-4,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-32,-33,-20,-43,-44,-70,-30,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-45,-69,-47,-48,-46,-1,-2,-69,-18,-23,-24,-25,-91,-89,-21,-86,-90,-28,-29,-22,-26,-27,-83,-84,-71,-19,-85,-34,-37,-6,-5,-36,-35,]),'NEWLINE':([2,3,6,7,10,11,12,13,14,15,16,17,18,19,20,24,25,32,45,46,47,48,49,50,51,52,57,58,59,60,61,62,70,71,72,73,74,78,79,80,81,82,83,88,92,97,98,109,110,112,113,114,115,117,141,143,147,150,151,152,158,162,168,171,173,176,177,178,183,184,],[33,34,-9,-10,-11,-12,-13,-14,-15,-16,-17,-31,-32,-33,-20,-43,-44,-70,-30,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-45,-69,-47,-48,-46,-69,-18,-23,-24,-25,-91,-89,-21,-86,-90,-28,-29,-22,-26,-27,-83,-84,-71,154,156,159,-19,-85,166,169,-34,-37,-6,179,-5,180,-36,-35,]),'VOID':([4,8,9,],[36,-57,-58,]),'FUNCTION':([4,8,9,],[37,-57,-58,]),'ASIGNATION':([5,20,108,],[38,41,138,]),'LEFTBRACKET':([5,20,57,71,78,],[39,42,100,100,100,]),'LEFTPAR':([5,21,22,23,26,27,28,38,39,40,41,42,44,56,57,63,64,65,66,67,69,77,78,96,100,101,111,116,123,124,125,126,127,128,129,130,131,132,133,138,153,],[40,43,44,56,67,68,69,56,56,56,56,56,56,56,40,-92,-93,-94,-95,101,101,107,40,116,56,101,56,56,101,-49,-50,56,-51,-52,-53,-54,-55,-56,101,56,101,]),'SEMICOLON':([20,32,46,47,48,49,50,51,52,57,58,59,60,61,62,78,80,81,82,83,88,92,97,98,103,105,109,110,112,115,117,141,142,144,145,146,152,160,],[-20,-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-69,-23,-24,-25,-91,-89,-21,-86,-90,-38,133,-28,-29,-22,-83,-84,-71,-41,-39,-42,155,-85,-40,]),'INT':([23,38,39,40,41,42,44,54,56,63,64,65,66,67,69,96,100,101,111,116,123,124,125,126,127,128,129,130,131,132,133,138,153,],[58,58,85,58,58,85,58,58,58,-92,-93,-94,-95,58,58,58,85,58,58,58,58,-49,-50,58,-51,-52,-53,-54,-55,-56,58,58,58,]),'DOUBLE':([23,38,39,40,41,42,44,54,56,63,64,65,66,67,69,96,100,101,111,116,123,124,125,126,127,128,129,130,131,132,133,138,153,],[59,59,59,59,59,59,59,59,59,-92,-93,-94,-95,59,59,59,59,59,59,59,59,-49,-50,59,-51,-52,-53,-54,-55,-56,59,59,59,]),'STRING':([23,38,40,41,44,67,69,101,111,123,124,125,126,127,128,129,130,131,132,133,138,153,],[60,60,60,60,60,60,60,60,60,60,-49,-50,60,-51,-52,-53,-54,-55,-56,60,60,60,]),'FALSE':([23,38,40,41,44,67,69,101,111,123,124,125,126,127,128,129,130,131,132,133,138,153,],[61,61,61,61,61,61,61,61,61,61,-49,-50,61,-51,-52,-53,-54,-55,-56,61,61,61,]),'TRUE':([23,38,40,41,44,67,69,101,111,123,124,125,126,127,128,129,130,131,132,133,138,153,],[62,62,62,62,62,62,62,62,62,62,-49,-50,62,-51,-52,-53,-54,-55,-56,62,62,62,]),'SUM':([23,32,38,39,40,41,42,44,47,48,49,50,53,55,56,57,58,59,67,69,78,80,82,83,85,86,87,88,97,98,99,100,101,109,110,111,115,116,117,120,121,123,124,125,126,127,128,129,130,131,132,133,138,140,141,152,153,],[63,-70,63,63,63,63,63,63,-88,-90,-91,-89,63,-87,63,-69,-78,-79,63,63,-69,-90,-88,-91,-78,-90,-88,-89,-86,-90,-88,63,63,-28,-29,63,-83,63,-84,-88,-89,63,-49,-50,63,-51,-52,-53,-54,-55,-56,63,63,-88,-71,-85,63,]),'SUBSTRACTION':([23,32,38,39,40,41,42,44,47,48,49,50,53,55,56,57,58,59,67,69,78,80,82,83,85,86,87,88,97,98,99,100,101,109,110,111,115,116,117,120,121,123,124,125,126,127,128,129,130,131,132,133,138,140,141,152,153,],[64,-70,64,64,64,64,64,64,-88,-90,-91,-89,64,-87,64,-69,-78,-79,64,64,-69,-90,-88,-91,-78,-90,-88,-89,-86,-90,-88,64,64,-28,-29,64,-83,64,-84,-88,-89,64,-49,-50,64,-51,-52,-53,-54,-55,-56,64,64,-88,-71,-85,64,]),'MULTIPLICATION':([23,32,38,39,40,41,42,44,47,48,49,50,53,55,56,57,58,59,67,69,78,80,82,83,85,86,87,88,97,98,99,100,101,109,110,111,115,116,117,120,121,123,124,125,126,127,128,129,130,131,132,133,138,140,141,152,153,],[65,-70,65,65,65,65,65,65,-88,-90,-91,-89,65,-87,65,-69,-78,-79,65,65,-69,-90,-88,-91,-78,-90,-88,-89,-86,-90,-88,65,65,-28,-29,65,-83,65,-84,-88,-89,65,-49,-50,65,-51,-52,-53,-54,-55,-56,65,65,-88,-71,-85,65,]),'DIVISION':([23,32,38,39,40,41,42,44,47,48,49,50,53,55,56,57,58,59,67,69,78,80,82,83,85,86,87,88,97,98,99,100,101,109,110,111,115,116,117,120,121,123,124,125,126,127,128,129,130,131,132,133,138,140,141,152,153,],[66,-70,66,66,66,66,66,66,-88,-90,-91,-89,66,-87,66,-69,-78,-79,66,66,-69,-90,-88,-91,-78,-90,-88,-89,-86,-90,-88,66,66,-28,-29,66,-83,66,-84,-88,-89,66,-49,-50,66,-51,-52,-53,-54,-55,-56,66,66,-88,-71,-85,66,]),'RIGHTPAR':([24,25,32,40,46,47,48,49,50,51,52,57,58,59,60,61,62,70,71,72,73,74,83,88,89,90,91,94,95,97,98,99,102,103,106,107,109,110,115,117,119,120,135,136,139,140,141,142,144,145,152,157,160,164,],[-43,-44,-70,-96,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-45,-69,-47,-48,-46,-91,-89,109,110,-64,113,114,-86,-90,117,122,-38,134,137,-28,-29,-83,-84,142,117,-62,149,-63,152,-71,-41,-39,-42,-85,-61,-40,170,]),'RIGHTBRACKET':([32,57,58,59,78,83,84,85,86,87,88,93,97,98,109,110,115,117,118,141,152,],[-70,-69,-78,-79,-69,-91,108,-72,-73,-74,-89,112,-86,-90,-28,-29,-83,-84,141,-71,-85,]),'COMMA':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,91,97,98,109,110,115,117,135,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,111,-86,-90,-28,-29,-83,-84,148,-71,-85,]),'EQUALS':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,104,109,110,115,117,120,121,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,127,-28,-29,-83,-84,-66,-75,-71,-85,]),'DIFFERENT':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,104,109,110,115,117,120,121,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,128,-28,-29,-83,-84,-66,-75,-71,-85,]),'LESSER':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,104,109,110,115,117,120,121,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,129,-28,-29,-83,-84,-66,-75,-71,-85,]),'GREATER':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,104,109,110,115,117,120,121,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,130,-28,-29,-83,-84,-66,-75,-71,-85,]),'LESSEREQUAL':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,104,109,110,115,117,120,121,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,131,-28,-29,-83,-84,-66,-75,-71,-85,]),'GREATEREQUAL':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,104,109,110,115,117,120,121,141,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,132,-28,-29,-83,-84,-66,-75,-71,-85,]),'AND':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,103,109,110,115,117,141,142,145,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,124,-28,-29,-83,-84,-71,124,-42,-85,]),'OR':([32,46,47,48,49,50,51,52,57,58,59,60,61,62,83,88,97,98,103,109,110,115,117,141,142,145,152,],[-70,-65,-66,-67,-68,-75,-76,-77,-69,-78,-79,-80,-81,-82,-91,-89,-86,-90,125,-28,-29,-83,-84,-71,125,-42,-85,]),'LEFTKEY':([122,134,137,149,170,174,],[143,147,150,158,176,178,]),'RIGHTKEY':([154,156,159,161,163,165,166,167,169,172,175,179,180,181,182,],[-96,-96,-96,168,-8,171,-96,173,-96,177,-7,-96,-96,183,184,]),'ELSE':([168,],[174,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Niark':([0,33,34,],[1,75,76,]),'methodDefinition':([0,33,34,],[2,2,2,]),'instruction':([0,33,34,154,156,159,166,169,179,180,],[3,3,3,162,162,162,162,162,162,162,]),'domain':([0,33,34,],[4,4,4,]),'simple':([0,33,34,154,156,159,166,169,179,180,],[6,6,6,6,6,6,6,6,6,6,]),'complex':([0,33,34,154,156,159,166,169,179,180,],[7,7,7,7,7,7,7,7,7,7,]),'asignation':([0,33,34,154,156,159,166,169,179,180,],[10,10,10,10,10,10,10,10,10,10,]),'declaration':([0,33,34,68,154,156,159,166,169,179,180,],[11,11,11,105,11,11,11,11,11,11,11,]),'read':([0,33,34,154,156,159,166,169,179,180,],[12,12,12,12,12,12,12,12,12,12,]),'print':([0,33,34,154,156,159,166,169,179,180,],[13,13,13,13,13,13,13,13,13,13,]),'functionCall':([0,23,33,34,38,39,40,41,42,44,54,56,67,69,96,100,101,111,116,123,126,133,138,153,154,156,159,166,169,179,180,],[14,49,14,14,83,83,49,83,83,49,83,83,49,49,83,83,49,49,83,49,49,49,83,49,14,14,14,14,14,14,14,]),'return':([0,33,34,154,156,159,166,169,179,180,],[15,15,15,15,15,15,15,15,15,15,]),'incdec':([0,33,34,154,155,156,159,166,169,179,180,],[16,16,16,16,164,16,16,16,16,16,16,]),'ifCondition':([0,33,34,154,156,159,166,169,179,180,],[17,17,17,17,17,17,17,17,17,17,]),'forCondition':([0,33,34,154,156,159,166,169,179,180,],[18,18,18,18,18,18,18,18,18,18,]),'whileCondition':([0,33,34,154,156,159,166,169,179,180,],[19,19,19,19,19,19,19,19,19,19,]),'preIncdec':([0,33,34,154,155,156,159,166,169,179,180,],[24,24,24,24,24,24,24,24,24,24,24,]),'postIncdec':([0,33,34,154,155,156,159,166,169,179,180,],[25,25,25,25,25,25,25,25,25,25,25,]),'variable':([0,23,29,31,33,34,38,39,40,41,42,44,54,56,67,69,96,100,101,111,116,123,126,133,138,153,154,155,156,159,166,169,179,180,],[30,48,70,74,30,30,80,86,48,80,86,48,98,98,48,48,98,86,48,48,98,48,48,48,80,48,30,30,30,30,30,30,30,30,]),'vectorVariable':([0,23,29,31,33,34,38,39,40,41,42,44,54,56,67,69,96,100,101,111,116,123,126,133,138,153,154,155,156,159,166,169,179,180,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'methodType':([4,],[35,]),'sendingVariable':([23,40,44,67,69,101,111,123,126,133,153,],[45,91,91,104,104,104,91,104,145,104,104,]),'variableType':([23,38,40,41,44,67,69,101,111,123,126,133,138,153,],[46,81,46,81,46,46,46,46,46,46,46,46,81,46,]),'arithmetic':([23,38,39,40,41,42,44,56,67,69,100,101,111,116,123,126,133,138,153,],[47,82,87,47,82,87,47,99,47,47,87,120,47,140,47,47,47,82,47,]),'numberType':([23,38,39,40,41,42,44,54,56,67,69,96,100,101,111,116,123,126,133,138,153,],[50,50,88,50,50,88,50,88,88,50,50,88,88,121,50,88,50,50,50,50,50,]),'stringType':([23,38,40,41,44,67,69,101,111,123,126,133,138,153,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'booleanType':([23,38,40,41,44,67,69,101,111,123,126,133,138,153,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'moreArithmetic':([23,38,39,40,41,42,44,56,67,69,100,101,111,116,123,126,133,138,153,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'arithmeticOp':([23,38,39,40,41,42,44,53,56,67,69,100,101,111,116,123,126,133,138,153,],[54,54,54,54,54,54,54,96,54,54,54,54,54,54,54,54,54,54,54,54,]),'arithmeticDataType':([23,38,39,40,41,42,44,54,56,67,69,96,100,101,111,116,123,126,133,138,153,],[55,55,55,55,55,55,55,97,55,55,55,115,55,55,55,55,55,55,55,55,55,]),'dataTypeAsignation':([38,41,138,],[79,92,151,]),'dataLocalizatorType':([39,42,100,],[84,93,118,]),'sendingVariables':([40,44,111,],[89,95,139,]),'empty':([40,154,156,159,166,169,179,180,],[90,163,163,163,163,163,163,163,]),'conditionals':([67,69,101,123,133,153,],[102,106,119,144,146,160,]),'condition':([67,69,101,123,133,153,],[103,103,103,103,103,103,]),'conditionalOp':([103,142,],[123,153,]),'conditionOp':([104,],[126,]),'parameters':([107,148,],[136,157,]),'instructions':([154,156,159,166,169,179,180,],[161,165,167,172,175,181,182,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Niark","S'",1,None,None,None),
  ('Niark -> methodDefinition NEWLINE Niark','Niark',3,'p_Start1','parser.py',20),
  ('Niark -> instruction NEWLINE Niark','Niark',3,'p_Start2','parser.py',24),
  ('Niark -> methodDefinition','Niark',1,'p_Start3','parser.py',28),
  ('Niark -> instruction','Niark',1,'p_Start4','parser.py',32),
  ('methodDefinition -> domain methodType NAME LEFTPAR parameters RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY','methodDefinition',10,'p_methodDefinition1','parser.py',39),
  ('methodDefinition -> domain methodType NAME LEFTPAR RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY','methodDefinition',9,'p_methodDefinition2','parser.py',43),
  ('instructions -> instruction NEWLINE instructions','instructions',3,'p_instructions1','parser.py',50),
  ('instructions -> empty','instructions',1,'p_instructions2','parser.py',56),
  ('instruction -> simple','instruction',1,'p_Instruction1','parser.py',63),
  ('instruction -> complex','instruction',1,'p_Instruction2','parser.py',67),
  ('simple -> asignation','simple',1,'p_simple1','parser.py',74),
  ('simple -> declaration','simple',1,'p_simple2','parser.py',78),
  ('simple -> read','simple',1,'p_simple3','parser.py',82),
  ('simple -> print','simple',1,'p_simple4','parser.py',86),
  ('simple -> functionCall','simple',1,'p_simple5','parser.py',90),
  ('simple -> return','simple',1,'p_simple6','parser.py',94),
  ('simple -> incdec','simple',1,'p_simple7','parser.py',98),
  ('asignation -> NAME ASIGNATION dataTypeAsignation','asignation',3,'p_asignation1','parser.py',109),
  ('asignation -> NAME LEFTBRACKET dataLocalizatorType RIGHTBRACKET ASIGNATION dataTypeAsignation','asignation',6,'p_asignation2','parser.py',113),
  ('declaration -> VARDECLARATION','declaration',1,'p_delaration1','parser.py',120),
  ('declaration -> VARDECLARATION ASIGNATION dataTypeAsignation','declaration',3,'p_delaration2','parser.py',124),
  ('declaration -> VARDECLARATION LEFTBRACKET dataLocalizatorType RIGHTBRACKET','declaration',4,'p_delaration3','parser.py',128),
  ('dataTypeAsignation -> variable','dataTypeAsignation',1,'p_dataType1','parser.py',135),
  ('dataTypeAsignation -> variableType','dataTypeAsignation',1,'p_dataType2','parser.py',139),
  ('dataTypeAsignation -> arithmetic','dataTypeAsignation',1,'p_dataType3','parser.py',143),
  ('read -> READ LEFTPAR NAME RIGHTPAR','read',4,'p_read1','parser.py',150),
  ('print -> PRINT LEFTPAR sendingVariables RIGHTPAR','print',4,'p_print','parser.py',156),
  ('functionCall -> NAME LEFTPAR sendingVariables RIGHTPAR','functionCall',4,'p_functioncall1','parser.py',162),
  ('functionCall -> NAME LEFTPAR empty RIGHTPAR','functionCall',4,'p_functioncall2','parser.py',166),
  ('return -> RETURN sendingVariable','return',2,'p_return1','parser.py',172),
  ('complex -> ifCondition','complex',1,'p_complex1','parser.py',179),
  ('complex -> forCondition','complex',1,'p_complex2','parser.py',183),
  ('complex -> whileCondition','complex',1,'p_complex3','parser.py',187),
  ('ifCondition -> IF LEFTPAR conditionals RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY','ifCondition',8,'p_ifCondition1','parser.py',194),
  ('ifCondition -> IF LEFTPAR conditionals RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY ELSE LEFTKEY NEWLINE instructions RIGHTKEY','ifCondition',13,'p_ifCondition2','parser.py',199),
  ('forCondition -> FOR LEFTPAR declaration SEMICOLON conditionals SEMICOLON incdec RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY','forCondition',12,'p_forCondition','parser.py',206),
  ('whileCondition -> WHILE LEFTPAR conditionals RIGHTPAR LEFTKEY NEWLINE instructions RIGHTKEY','whileCondition',8,'p_whileCondition','parser.py',213),
  ('conditionals -> condition','conditionals',1,'p_conditionals1','parser.py',219),
  ('conditionals -> condition conditionalOp conditionals','conditionals',3,'p_conditionals2','parser.py',223),
  ('conditionals -> LEFTPAR conditionals RIGHTPAR conditionalOp conditionals','conditionals',5,'p_conditionals3','parser.py',226),
  ('conditionals -> LEFTPAR conditionals RIGHTPAR','conditionals',3,'p_conditionals4','parser.py',229),
  ('condition -> sendingVariable conditionOp sendingVariable','condition',3,'p_condition1','parser.py',235),
  ('incdec -> preIncdec','incdec',1,'p_incdec1','parser.py',241),
  ('incdec -> postIncdec','incdec',1,'p_incdec2','parser.py',245),
  ('preIncdec -> INCREASE variable','preIncdec',2,'p_preIncdec1','parser.py',252),
  ('preIncdec -> DECREASE variable','preIncdec',2,'p_preIncdec2','parser.py',256),
  ('postIncdec -> variable INCREASE','postIncdec',2,'p_postIncdec1','parser.py',263),
  ('postIncdec -> variable DECREASE','postIncdec',2,'p_postIncdec2','parser.py',267),
  ('conditionalOp -> AND','conditionalOp',1,'p_conditionalOp1','parser.py',275),
  ('conditionalOp -> OR','conditionalOp',1,'p_conditionalOp2','parser.py',279),
  ('conditionOp -> EQUALS','conditionOp',1,'p_conditionOp1','parser.py',286),
  ('conditionOp -> DIFFERENT','conditionOp',1,'p_conditionOp2','parser.py',290),
  ('conditionOp -> LESSER','conditionOp',1,'p_conditionOp3','parser.py',294),
  ('conditionOp -> GREATER','conditionOp',1,'p_conditionOp4','parser.py',298),
  ('conditionOp -> LESSEREQUAL','conditionOp',1,'p_conditionOp5','parser.py',302),
  ('conditionOp -> GREATEREQUAL','conditionOp',1,'p_conditionOp6','parser.py',306),
  ('domain -> PUBLIC','domain',1,'p_domain1','parser.py',313),
  ('domain -> PRIVATE','domain',1,'p_domain2','parser.py',317),
  ('methodType -> VOID','methodType',1,'p_methodType1','parser.py',324),
  ('methodType -> FUNCTION','methodType',1,'p_methodType2','parser.py',328),
  ('parameters -> NAME COMMA parameters','parameters',3,'p_parameters1','parser.py',335),
  ('parameters -> NAME','parameters',1,'p_parameters2','parser.py',338),
  ('sendingVariables -> sendingVariable COMMA sendingVariables','sendingVariables',3,'p_sendingVariables1','parser.py',345),
  ('sendingVariables -> sendingVariable','sendingVariables',1,'p_sendingVariables2','parser.py',348),
  ('sendingVariable -> variableType','sendingVariable',1,'p_sendingVariable1','parser.py',355),
  ('sendingVariable -> arithmetic','sendingVariable',1,'p_sendingVariable2','parser.py',359),
  ('sendingVariable -> variable','sendingVariable',1,'p_sendingVariable3','parser.py',363),
  ('sendingVariable -> functionCall','sendingVariable',1,'p_sendingVariable4','parser.py',367),
  ('variable -> NAME','variable',1,'p_variable1','parser.py',375),
  ('variable -> vectorVariable','variable',1,'p_variable2','parser.py',379),
  ('vectorVariable -> NAME LEFTBRACKET dataLocalizatorType RIGHTBRACKET','vectorVariable',4,'p_vectorVariable1','parser.py',387),
  ('dataLocalizatorType -> INT','dataLocalizatorType',1,'p_dataLocalizatorType1','parser.py',394),
  ('dataLocalizatorType -> variable','dataLocalizatorType',1,'p_dataLocalizatorType2','parser.py',398),
  ('dataLocalizatorType -> arithmetic','dataLocalizatorType',1,'p_dataLocalizatorType3','parser.py',402),
  ('variableType -> numberType','variableType',1,'p_variableType1','parser.py',408),
  ('variableType -> stringType','variableType',1,'p_variableType2','parser.py',412),
  ('variableType -> booleanType','variableType',1,'p_variableType3','parser.py',416),
  ('numberType -> INT','numberType',1,'p_numberType1','parser.py',423),
  ('numberType -> DOUBLE','numberType',1,'p_numberType2','parser.py',427),
  ('stringType -> STRING','stringType',1,'p_stringType','parser.py',432),
  ('booleanType -> FALSE','booleanType',1,'p_booleanType1','parser.py',437),
  ('booleanType -> TRUE','booleanType',1,'p_booleanType2','parser.py',441),
  ('arithmetic -> moreArithmetic arithmeticOp arithmeticDataType','arithmetic',3,'p_arithmetic1','parser.py',448),
  ('arithmetic -> LEFTPAR arithmetic RIGHTPAR','arithmetic',3,'p_arithmetic2','parser.py',452),
  ('arithmetic -> moreArithmetic arithmeticOp LEFTPAR arithmetic RIGHTPAR','arithmetic',5,'p_arithmetic3','parser.py',455),
  ('arithmetic -> arithmeticOp arithmeticDataType','arithmetic',2,'p_arithmetic4','parser.py',458),
  ('moreArithmetic -> arithmeticDataType','moreArithmetic',1,'p_moreArithmetic1','parser.py',461),
  ('moreArithmetic -> arithmetic','moreArithmetic',1,'p_moreArithmetic2','parser.py',465),
  ('arithmeticDataType -> numberType','arithmeticDataType',1,'p_arithmeticDataType1','parser.py',472),
  ('arithmeticDataType -> variable','arithmeticDataType',1,'p_arithmeticDataType2','parser.py',476),
  ('arithmeticDataType -> functionCall','arithmeticDataType',1,'p_arithmeticDataType3','parser.py',480),
  ('arithmeticOp -> SUM','arithmeticOp',1,'p_arithmeticOp1','parser.py',487),
  ('arithmeticOp -> SUBSTRACTION','arithmeticOp',1,'p_arithmeticOp2','parser.py',491),
  ('arithmeticOp -> MULTIPLICATION','arithmeticOp',1,'p_arithmeticOp3','parser.py',495),
  ('arithmeticOp -> DIVISION','arithmeticOp',1,'p_arithmeticOp4','parser.py',499),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',511),
]
