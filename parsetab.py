
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNACION BREAK CASE COMA COMENTARIO CORCHETEDER CORCHETEIZQ DECREMENTAR DECVARIABLE DIFERENTE DIV DOUBLE ELSE FALSE FOR FUNCTION IF IGUAL IMPORT INCREMENTAR INT LLAVEDER LLAVEIZQ MAYOR MAYORIGUAL MENOR MENORIGUAL MULT NEWLINE NOMBRE OR PARDER PARIZQ PRINT PRIVATE PUBLIC PUNTOYCOMA READ RESTA RETURN STRING SUMA SWITCH TABULACION TRUE VOID WHILE\n    Niark : definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE\n          | vacio\n    \n    indentacion : TABULACION indentacion\n                | vacio\n    definicion_funcion : dominio tipo_return NOMBRE PARIZQ parametro PARDER\n    dominio : PRIVATE\n            | PUBLIC\n    \n    tipo_return : VOID\n                | FUNCTION\n    \n    parametro : vacio\n              | NOMBRE parametro_extra\n\n    \n    parametro_extra : COMA NOMBRE parametro_extra\n                    | vacio\n    \n    llamado_funcion : NOMBRE PARIZQ parametro_llamado PARDER\n    \n    parametro_llamado : vacio\n                      | tipo_variable parametro_llamado_extra\n\n    \n    parametro_llamado_extra : COMA parametro_llamado\n                            | vacio\n    \n    instruccion : condicion_if comentario NEWLINE\n                | condicion_else comentario NEWLINE\n                | ciclo_for comentario NEWLINE\n                | ciclo_while comentario NEWLINE\n                | imprimir comentario NEWLINE\n                | leer comentario NEWLINE\n                | incdec comentario NEWLINE\n                | dec_variable comentario NEWLINE\n                | dec_vector comentario NEWLINE\n                | asigna comentario NEWLINE\n                | asignacion_vector comentario NEWLINE\n                | llamado_funcion comentario NEWLINE\n                | retorno comentario NEWLINE\n                | comentario NEWLINE\n    \n    comentario : COMENTARIO\n               | vacio\n    \n    instrucciones : indentacion instruccion concat_instruccion\n                  | vacio\n    \n    concat_instruccion : indentacion instruccion concat_instruccion\n                       | vacio\n    \n    condicion_if : IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER\n    \n    condicion_else : ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER\n                   | ELSE condicion_if\n    \n    ciclo_for : FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE\n    \n    incdec : pre_incdec\n           | post_incdec\n    \n    pre_incdec : INCREMENTAR NOMBRE\n               | DECREMENTAR NOMBRE\n\n    \n    post_incdec : NOMBRE INCREMENTAR\n                | NOMBRE DECREMENTAR\n    ciclo_while : WHILE PARIZQ condicion PARDER LLAVEIZQimprimir : PRINT PARIZQ tipo_variable PARDERleer : READ PARIZQ NOMBRE PARDER\n    dec_variable : DECVARIABLE ASIGNACION op_aritmetica\n                 | DECVARIABLE ASIGNACION tipo_variable\n    \n    dec_vector : DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER\n               | DECVARIABLE CORCHETEIZQ INT CORCHETEDER\n               | DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica\n               | DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica\n               | DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable\n               | DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable\n    \n    asigna : NOMBRE ASIGNACION op_aritmetica\n           | NOMBRE ASIGNACION tipo_variable\n    \n    asignacion_vector : NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica\n                      | NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica\n                      | NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable\n                      | NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable\n    \n    retorno : RETURN tipo_variable\n            | RETURN op_aritmetica\n    \n    operador_condicional : DIFERENTE\n                         | IGUAL\n                         | MAYOR\n                         | MAYORIGUAL\n                         | MENOR\n                         | MENORIGUAL\n    \n    condicion : tipo_variable operador_condicional tipo_variable condicion_extra\n    \n    condicion_extra : operador_logico tipo_variable operador_condicional tipo_variable condicion_extra\n                    | vacio\n    \n    tipo_variable : NOMBRE\n                   | DOUBLE\n                   | INT\n                   | STRING\n                   | FALSE\n                   | TRUE\n                   | llamado_funcion\n    op_aritmetica : op_aritmetica_extra operador_aritmetico tipo_variable\n                     | op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER\n                     | PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER\n    op_aritmetica_extra : tipo_variable\n                        | op_aritmetica\n                        | vacio\n    \n    operador_aritmetico : SUMA\n                        | RESTA\n                        | MULT\n                        | DIV\n    \n    operador_logico : AND\n                    | OR\n    vacio : '
    
_lr_action_items = {'$end':([0,1,3,146,],[-96,0,-2,-1,]),'PRIVATE':([0,54,],[5,5,]),'PUBLIC':([0,54,],[6,6,]),'LLAVEIZQ':([2,35,103,148,160,215,],[7,73,-5,173,179,216,]),'NEWLINE':([3,7,11,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,42,43,45,46,49,50,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,84,85,86,87,88,89,90,91,92,93,94,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,123,124,130,131,146,147,156,158,159,161,162,165,169,173,179,185,191,193,194,195,196,197,198,199,200,202,207,210,216,217,219,220,],[-2,11,-96,-96,-4,-96,54,-96,-96,59,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-43,-44,-33,-34,-3,-4,-96,-96,-35,-4,106,-32,107,108,109,110,111,112,113,114,115,116,117,118,121,-41,-47,-48,-66,-67,-77,-78,-79,-80,-81,-82,-83,-45,-46,146,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-52,-53,-60,-61,-1,-37,175,-54,-55,-50,-51,-14,-84,185,-49,-96,-40,-56,-58,-57,-59,-62,-64,-63,-65,-86,-39,-85,217,-96,220,-42,]),'VOID':([4,5,6,],[9,-6,-7,]),'FUNCTION':([4,5,6,],[10,-6,-7,]),'NOMBRE':([8,9,10,11,14,15,16,17,19,44,47,48,49,50,55,57,59,72,76,77,78,79,80,81,82,83,96,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,137,138,139,140,141,149,150,151,152,153,154,155,167,170,171,177,178,180,181,185,187,189,190,192,201,208,209,217,],[12,-8,-9,-96,41,-4,-96,51,-96,88,98,99,-3,-4,41,-4,-32,88,88,125,88,88,129,88,132,88,88,145,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,88,-90,-91,-92,-93,88,-68,-69,-70,-71,-72,-73,88,88,88,88,88,88,88,-96,88,-94,-95,88,88,88,213,-96,]),'TABULACION':([11,16,19,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[16,16,16,-32,16,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,16,16,16,]),'LLAVEDER':([11,13,15,19,56,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,147,175,185,203,217,218,],[-96,18,-36,-96,-35,-38,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-37,191,-96,207,-96,219,]),'IF':([11,14,15,16,19,35,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,34,-4,-96,-96,34,-3,-4,34,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'ELSE':([11,14,15,16,19,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,35,-4,-96,-96,-3,-4,35,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'FOR':([11,14,15,16,19,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,36,-4,-96,-96,-3,-4,36,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'WHILE':([11,14,15,16,19,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,38,-4,-96,-96,-3,-4,38,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'PRINT':([11,14,15,16,19,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,39,-4,-96,-96,-3,-4,39,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'READ':([11,14,15,16,19,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,40,-4,-96,-96,-3,-4,40,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'DECVARIABLE':([11,14,15,16,19,49,50,55,57,59,75,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,37,-4,-96,-96,-3,-4,37,-4,-32,122,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'RETURN':([11,14,15,16,19,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,217,],[-96,44,-4,-96,-96,-3,-4,44,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,-96,]),'COMENTARIO':([11,14,15,16,19,20,22,23,24,25,26,27,28,29,30,31,32,33,42,43,49,50,55,57,59,74,84,85,86,87,88,89,90,91,92,93,94,98,99,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,123,124,130,131,158,159,161,162,165,169,179,185,191,193,194,195,196,197,198,199,200,202,207,210,217,220,],[-96,45,-4,-96,-96,45,45,45,45,45,45,45,45,45,45,45,45,45,-43,-44,-3,-4,45,-4,-32,-41,-47,-48,-66,-67,-77,-78,-79,-80,-81,-82,-83,-45,-46,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-52,-53,-60,-61,-54,-55,-50,-51,-14,-84,-49,-96,-40,-56,-58,-57,-59,-62,-64,-63,-65,-86,-39,-85,-96,-42,]),'INCREMENTAR':([11,14,15,16,19,41,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,209,213,217,],[-96,47,-4,-96,-96,84,-3,-4,47,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,47,84,-96,]),'DECREMENTAR':([11,14,15,16,19,41,49,50,55,57,59,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,185,209,213,217,],[-96,48,-4,-96,-96,85,-3,-4,48,-4,-32,-96,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-96,-96,48,85,-96,]),'PARIZQ':([12,34,36,38,39,40,41,44,76,81,88,96,137,138,139,140,141,170,171,177,178,180,181,201,],[17,72,75,78,79,80,83,96,96,96,83,96,170,-90,-91,-92,-93,96,170,96,96,96,96,170,]),'PARDER':([17,42,43,51,52,53,83,84,85,88,89,90,91,92,93,94,98,99,100,102,119,127,128,129,134,135,136,145,165,166,167,168,172,174,182,184,186,188,206,211,212,214,],[-96,-43,-44,-96,103,-10,-96,-47,-48,-77,-78,-79,-80,-81,-82,-83,-45,-46,-11,-13,148,160,161,162,165,-15,-96,-96,-14,-16,-96,-18,-12,-96,-17,202,-74,-76,210,-96,215,-75,]),'ASIGNACION':([37,41,122,158,159,163,164,],[76,81,157,177,178,180,181,]),'CORCHETEIZQ':([37,41,],[77,82,]),'DOUBLE':([44,72,76,78,79,81,83,96,137,138,139,140,141,149,150,151,152,153,154,155,167,170,171,177,178,180,181,187,189,190,192,201,208,],[89,89,89,89,89,89,89,89,89,-90,-91,-92,-93,89,-68,-69,-70,-71,-72,-73,89,89,89,89,89,89,89,89,-94,-95,89,89,89,]),'INT':([44,72,76,77,78,79,81,82,83,96,137,138,139,140,141,149,150,151,152,153,154,155,157,167,170,171,177,178,180,181,187,189,190,192,201,208,],[90,90,90,126,90,90,90,133,90,90,90,-90,-91,-92,-93,90,-68,-69,-70,-71,-72,-73,176,90,90,90,90,90,90,90,90,-94,-95,90,90,90,]),'STRING':([44,72,76,78,79,81,83,96,137,138,139,140,141,149,150,151,152,153,154,155,167,170,171,177,178,180,181,187,189,190,192,201,208,],[91,91,91,91,91,91,91,91,91,-90,-91,-92,-93,91,-68,-69,-70,-71,-72,-73,91,91,91,91,91,91,91,91,-94,-95,91,91,91,]),'FALSE':([44,72,76,78,79,81,83,96,137,138,139,140,141,149,150,151,152,153,154,155,167,170,171,177,178,180,181,187,189,190,192,201,208,],[92,92,92,92,92,92,92,92,92,-90,-91,-92,-93,92,-68,-69,-70,-71,-72,-73,92,92,92,92,92,92,92,92,-94,-95,92,92,92,]),'TRUE':([44,72,76,78,79,81,83,96,137,138,139,140,141,149,150,151,152,153,154,155,167,170,171,177,178,180,181,187,189,190,192,201,208,],[93,93,93,93,93,93,93,93,93,-90,-91,-92,-93,93,-68,-69,-70,-71,-72,-73,93,93,93,93,93,93,93,93,-94,-95,93,93,93,]),'SUMA':([44,76,81,86,87,88,89,90,91,92,93,94,95,96,97,123,124,130,131,142,143,144,165,169,170,177,178,180,181,183,184,193,194,195,196,197,198,199,200,202,206,210,],[-96,-96,-96,-87,-88,-77,-78,-79,-80,-81,-82,-83,138,-96,-89,-88,-87,-88,-87,138,-87,-88,-14,-84,-96,-96,-96,-96,-96,138,-84,-88,-87,-88,-87,-88,-87,-88,-87,-86,-84,-85,]),'RESTA':([44,76,81,86,87,88,89,90,91,92,93,94,95,96,97,123,124,130,131,142,143,144,165,169,170,177,178,180,181,183,184,193,194,195,196,197,198,199,200,202,206,210,],[-96,-96,-96,-87,-88,-77,-78,-79,-80,-81,-82,-83,139,-96,-89,-88,-87,-88,-87,139,-87,-88,-14,-84,-96,-96,-96,-96,-96,139,-84,-88,-87,-88,-87,-88,-87,-88,-87,-86,-84,-85,]),'MULT':([44,76,81,86,87,88,89,90,91,92,93,94,95,96,97,123,124,130,131,142,143,144,165,169,170,177,178,180,181,183,184,193,194,195,196,197,198,199,200,202,206,210,],[-96,-96,-96,-87,-88,-77,-78,-79,-80,-81,-82,-83,140,-96,-89,-88,-87,-88,-87,140,-87,-88,-14,-84,-96,-96,-96,-96,-96,140,-84,-88,-87,-88,-87,-88,-87,-88,-87,-86,-84,-85,]),'DIV':([44,76,81,86,87,88,89,90,91,92,93,94,95,96,97,123,124,130,131,142,143,144,165,169,170,177,178,180,181,183,184,193,194,195,196,197,198,199,200,202,206,210,],[-96,-96,-96,-87,-88,-77,-78,-79,-80,-81,-82,-83,141,-96,-89,-88,-87,-88,-87,141,-87,-88,-14,-84,-96,-96,-96,-96,-96,141,-84,-88,-87,-88,-87,-88,-87,-88,-87,-86,-84,-85,]),'COMA':([51,88,89,90,91,92,93,94,136,145,165,],[101,-77,-78,-79,-80,-81,-82,-83,167,101,-14,]),'DIFERENTE':([88,89,90,91,92,93,94,120,165,204,],[-77,-78,-79,-80,-81,-82,-83,150,-14,150,]),'IGUAL':([88,89,90,91,92,93,94,120,165,204,],[-77,-78,-79,-80,-81,-82,-83,151,-14,151,]),'MAYOR':([88,89,90,91,92,93,94,120,165,204,],[-77,-78,-79,-80,-81,-82,-83,152,-14,152,]),'MAYORIGUAL':([88,89,90,91,92,93,94,120,165,204,],[-77,-78,-79,-80,-81,-82,-83,153,-14,153,]),'MENOR':([88,89,90,91,92,93,94,120,165,204,],[-77,-78,-79,-80,-81,-82,-83,154,-14,154,]),'MENORIGUAL':([88,89,90,91,92,93,94,120,165,204,],[-77,-78,-79,-80,-81,-82,-83,155,-14,155,]),'AND':([88,89,90,91,92,93,94,165,174,211,],[-77,-78,-79,-80,-81,-82,-83,-14,189,189,]),'OR':([88,89,90,91,92,93,94,165,174,211,],[-77,-78,-79,-80,-81,-82,-83,-14,190,190,]),'PUNTOYCOMA':([88,89,90,91,92,93,94,165,174,176,186,188,205,211,214,],[-77,-78,-79,-80,-81,-82,-83,-14,-96,192,-74,-76,209,-96,-75,]),'CORCHETEDER':([125,126,132,133,],[158,159,163,164,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Niark':([0,54,],[1,104,]),'definicion_funcion':([0,54,],[2,2,]),'vacio':([0,11,14,16,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,44,51,54,55,76,81,83,96,105,121,136,145,167,170,174,177,178,180,181,185,211,217,],[3,15,46,50,53,57,46,46,46,46,46,46,46,46,46,46,46,46,46,97,102,3,46,97,97,135,97,57,15,168,102,135,97,188,97,97,97,97,15,188,15,]),'dominio':([0,54,],[4,4,]),'tipo_return':([4,],[8,]),'instrucciones':([11,121,185,217,],[13,156,203,218,]),'indentacion':([11,16,19,105,121,185,217,],[14,49,55,55,14,14,14,]),'instruccion':([14,55,],[19,105,]),'condicion_if':([14,35,55,],[20,74,20,]),'comentario':([14,20,22,23,24,25,26,27,28,29,30,31,32,33,55,],[21,58,60,61,62,63,64,65,66,67,68,69,70,71,21,]),'condicion_else':([14,55,],[22,22,]),'ciclo_for':([14,55,],[23,23,]),'ciclo_while':([14,55,],[24,24,]),'imprimir':([14,55,],[25,25,]),'leer':([14,55,],[26,26,]),'incdec':([14,55,209,],[27,27,212,]),'dec_variable':([14,55,],[28,28,]),'dec_vector':([14,55,],[29,29,]),'asigna':([14,55,],[30,30,]),'asignacion_vector':([14,55,],[31,31,]),'llamado_funcion':([14,44,55,72,76,78,79,81,83,96,137,149,167,170,171,177,178,180,181,187,192,201,208,],[32,94,32,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'retorno':([14,55,],[33,33,]),'pre_incdec':([14,55,209,],[42,42,42,]),'post_incdec':([14,55,209,],[43,43,43,]),'parametro':([17,],[52,]),'concat_instruccion':([19,105,],[56,147,]),'tipo_variable':([44,72,76,78,79,81,83,96,137,149,167,170,171,177,178,180,181,187,192,201,208,],[86,120,124,120,128,131,136,143,169,174,136,143,184,194,196,198,200,204,120,206,211,]),'op_aritmetica':([44,76,81,96,170,177,178,180,181,],[87,123,130,144,144,193,195,197,199,]),'op_aritmetica_extra':([44,76,81,96,170,177,178,180,181,],[95,95,95,142,183,95,95,95,95,]),'parametro_extra':([51,145,],[100,172,]),'condicion':([72,78,192,],[119,127,205,]),'parametro_llamado':([83,167,],[134,182,]),'operador_aritmetico':([95,142,183,],[137,171,201,]),'operador_condicional':([120,204,],[149,208,]),'parametro_llamado_extra':([136,],[166,]),'condicion_extra':([174,211,],[186,214,]),'operador_logico':([174,211,],[187,187,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Niark","S'",1,None,None,None),
  ('Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE','Niark',8,'p_Niark','parser.py',7),
  ('Niark -> vacio','Niark',1,'p_Niark','parser.py',8),
  ('indentacion -> TABULACION indentacion','indentacion',2,'p_INDENTACION','parser.py',13),
  ('indentacion -> vacio','indentacion',1,'p_INDENTACION','parser.py',14),
  ('definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER','definicion_funcion',6,'p_DEFINICION_FUNCION','parser.py',19),
  ('dominio -> PRIVATE','dominio',1,'p_DOMINIO_FUNC','parser.py',24),
  ('dominio -> PUBLIC','dominio',1,'p_DOMINIO_FUNC','parser.py',25),
  ('tipo_return -> VOID','tipo_return',1,'p_RETURN_FUNC','parser.py',30),
  ('tipo_return -> FUNCTION','tipo_return',1,'p_RETURN_FUNC','parser.py',31),
  ('parametro -> vacio','parametro',1,'p_PARAMETRO','parser.py',36),
  ('parametro -> NOMBRE parametro_extra','parametro',2,'p_PARAMETRO','parser.py',37),
  ('parametro_extra -> COMA NOMBRE parametro_extra','parametro_extra',3,'p_PARAMETRO_EXTRA','parser.py',43),
  ('parametro_extra -> vacio','parametro_extra',1,'p_PARAMETRO_EXTRA','parser.py',44),
  ('llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER','llamado_funcion',4,'p_LLAMADO_FUNCION','parser.py',50),
  ('parametro_llamado -> vacio','parametro_llamado',1,'p_PARAMETRO_LLAMADO','parser.py',55),
  ('parametro_llamado -> tipo_variable parametro_llamado_extra','parametro_llamado',2,'p_PARAMETRO_LLAMADO','parser.py',56),
  ('parametro_llamado_extra -> COMA parametro_llamado','parametro_llamado_extra',2,'p_PARAMETRO_LLAMADO_EXTRA','parser.py',62),
  ('parametro_llamado_extra -> vacio','parametro_llamado_extra',1,'p_PARAMETRO_LLAMADO_EXTRA','parser.py',63),
  ('instruccion -> condicion_if comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',68),
  ('instruccion -> condicion_else comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',69),
  ('instruccion -> ciclo_for comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',70),
  ('instruccion -> ciclo_while comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',71),
  ('instruccion -> imprimir comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',72),
  ('instruccion -> leer comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',73),
  ('instruccion -> incdec comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',74),
  ('instruccion -> dec_variable comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',75),
  ('instruccion -> dec_vector comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',76),
  ('instruccion -> asigna comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',77),
  ('instruccion -> asignacion_vector comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',78),
  ('instruccion -> llamado_funcion comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',79),
  ('instruccion -> retorno comentario NEWLINE','instruccion',3,'p_INSTRUCCION','parser.py',80),
  ('instruccion -> comentario NEWLINE','instruccion',2,'p_INSTRUCCION','parser.py',81),
  ('comentario -> COMENTARIO','comentario',1,'p_COMENTARIO','parser.py',86),
  ('comentario -> vacio','comentario',1,'p_COMENTARIO','parser.py',87),
  ('instrucciones -> indentacion instruccion concat_instruccion','instrucciones',3,'p_INSTRUCCIONES','parser.py',92),
  ('instrucciones -> vacio','instrucciones',1,'p_INSTRUCCIONES','parser.py',93),
  ('concat_instruccion -> indentacion instruccion concat_instruccion','concat_instruccion',3,'p_CONCAT_INSTRUCCION','parser.py',98),
  ('concat_instruccion -> vacio','concat_instruccion',1,'p_CONCAT_INSTRUCCION','parser.py',99),
  ('condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER','condicion_if',8,'p_CONDICION_IF','parser.py',104),
  ('condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER','condicion_else',6,'p_CONDICION_ELSE','parser.py',109),
  ('condicion_else -> ELSE condicion_if','condicion_else',2,'p_CONDICION_ELSE','parser.py',110),
  ('ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE','ciclo_for',15,'p_CICLO_FOR','parser.py',115),
  ('incdec -> pre_incdec','incdec',1,'p_INCDEC','parser.py',120),
  ('incdec -> post_incdec','incdec',1,'p_INCDEC','parser.py',121),
  ('pre_incdec -> INCREMENTAR NOMBRE','pre_incdec',2,'p_PRE_INCDEC','parser.py',126),
  ('pre_incdec -> DECREMENTAR NOMBRE','pre_incdec',2,'p_PRE_INCDEC','parser.py',127),
  ('post_incdec -> NOMBRE INCREMENTAR','post_incdec',2,'p_POST_INCDEC','parser.py',133),
  ('post_incdec -> NOMBRE DECREMENTAR','post_incdec',2,'p_POST_INCDEC','parser.py',134),
  ('ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ','ciclo_while',5,'p_CICLO_WHILE','parser.py',139),
  ('imprimir -> PRINT PARIZQ tipo_variable PARDER','imprimir',4,'p_IMPRIMIR','parser.py',142),
  ('leer -> READ PARIZQ NOMBRE PARDER','leer',4,'p_LEER','parser.py',146),
  ('dec_variable -> DECVARIABLE ASIGNACION op_aritmetica','dec_variable',3,'p_DEC_VARIABLE','parser.py',152),
  ('dec_variable -> DECVARIABLE ASIGNACION tipo_variable','dec_variable',3,'p_DEC_VARIABLE','parser.py',153),
  ('dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER','dec_vector',4,'p_DEC_VECTOR','parser.py',159),
  ('dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER','dec_vector',4,'p_DEC_VECTOR','parser.py',160),
  ('dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica','dec_vector',6,'p_DEC_VECTOR','parser.py',161),
  ('dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica','dec_vector',6,'p_DEC_VECTOR','parser.py',162),
  ('dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable','dec_vector',6,'p_DEC_VECTOR','parser.py',163),
  ('dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable','dec_vector',6,'p_DEC_VECTOR','parser.py',164),
  ('asigna -> NOMBRE ASIGNACION op_aritmetica','asigna',3,'p_ASIGNA','parser.py',169),
  ('asigna -> NOMBRE ASIGNACION tipo_variable','asigna',3,'p_ASIGNA','parser.py',170),
  ('asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica','asignacion_vector',6,'p_ASIGNACIONVECTOR','parser.py',176),
  ('asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica','asignacion_vector',6,'p_ASIGNACIONVECTOR','parser.py',177),
  ('asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable','asignacion_vector',6,'p_ASIGNACIONVECTOR','parser.py',178),
  ('asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable','asignacion_vector',6,'p_ASIGNACIONVECTOR','parser.py',179),
  ('retorno -> RETURN tipo_variable','retorno',2,'p_RETORNAR','parser.py',184),
  ('retorno -> RETURN op_aritmetica','retorno',2,'p_RETORNAR','parser.py',185),
  ('operador_condicional -> DIFERENTE','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',192),
  ('operador_condicional -> IGUAL','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',193),
  ('operador_condicional -> MAYOR','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',194),
  ('operador_condicional -> MAYORIGUAL','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',195),
  ('operador_condicional -> MENOR','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',196),
  ('operador_condicional -> MENORIGUAL','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',197),
  ('condicion -> tipo_variable operador_condicional tipo_variable condicion_extra','condicion',4,'p_CONDICION','parser.py',202),
  ('condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra','condicion_extra',5,'p_CONDICION_EXTRA','parser.py',207),
  ('condicion_extra -> vacio','condicion_extra',1,'p_CONDICION_EXTRA','parser.py',208),
  ('tipo_variable -> NOMBRE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',213),
  ('tipo_variable -> DOUBLE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',214),
  ('tipo_variable -> INT','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',215),
  ('tipo_variable -> STRING','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',216),
  ('tipo_variable -> FALSE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',217),
  ('tipo_variable -> TRUE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',218),
  ('tipo_variable -> llamado_funcion','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',219),
  ('op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable','op_aritmetica',3,'p_OP_ARITMETICA','parser.py',223),
  ('op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER','op_aritmetica',7,'p_OP_ARITMETICA','parser.py',224),
  ('op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER','op_aritmetica',5,'p_OP_ARITMETICA','parser.py',225),
  ('op_aritmetica_extra -> tipo_variable','op_aritmetica_extra',1,'p_OP_ARITMETICA_EXTRA','parser.py',229),
  ('op_aritmetica_extra -> op_aritmetica','op_aritmetica_extra',1,'p_OP_ARITMETICA_EXTRA','parser.py',230),
  ('op_aritmetica_extra -> vacio','op_aritmetica_extra',1,'p_OP_ARITMETICA_EXTRA','parser.py',231),
  ('operador_aritmetico -> SUMA','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',236),
  ('operador_aritmetico -> RESTA','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',237),
  ('operador_aritmetico -> MULT','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',238),
  ('operador_aritmetico -> DIV','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',239),
  ('operador_logico -> AND','operador_logico',1,'p_OPERADOR_LOGICO','parser.py',244),
  ('operador_logico -> OR','operador_logico',1,'p_OPERADOR_LOGICO','parser.py',245),
  ('vacio -> <empty>','vacio',0,'p_vacio','parser.py',249),
]
