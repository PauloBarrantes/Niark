
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNACION BREAK CASE COMA COMENTARIO CORCHETEDER CORCHETEIZQ DECREMENTAR DECVARIABLE DIFERENTE DIV DOUBLE ELSE FALSE FOR FUNCTION IF IGUAL IMPORT INCREMENTAR INT MAYOR MAYORIGUAL MENOR MENORIGUAL MULT NEWLINE NOMBRE OR PARDER PARIZQ PRINT PRIVATE PUBLIC PUNTOYCOMA READ RESTA RETURN STRING SUMA SWITCH TABULACION TRUE VOID WHILE\n    inicial : funcion inicial instrucciones NEWLINE\n            | vacio\n    \n    indentacion : vacio\n                | TABULACION indentacion\n    \n    funcion : definicion_funcion instrucciones\n            | vacio\n    \n    definicion_funcion : dominio return NOMBRE PARIZQ parametro PARDER\n    \n    dominio : PRIVATE\n            | PUBLIC\n    \n    return : VOID\n           | FUNCTION\n    \n    parametro : vacio\n              | NOMBRE parametro_extra\n\n    \n    parametro_extra : COMA NOMBRE parametro_extra\n                    | vacio\n    \n    llamado_funcion : indentacion NOMBRE PARIZQ parametro_llamado PARDER\n    \n    parametro_llamado : vacio\n                      | tipo_variable parametro_llamado_extra\n\n    \n    parametro_llamado_extra : COMA NOMBRE parametro_llamado_extra\n                            | vacio\n    \n    instrucciones : if NEWLINE\n                  | for NEWLINE\n                  | while NEWLINE\n                  | print NEWLINE\n                  | read NEWLINE\n                  | incdec NEWLINE\n                  | dec_variable NEWLINE\n                  | dec_vector NEWLINE\n                  | asignacion NEWLINE\n                  | llamado_funcion NEWLINE\n                  | retorno NEWLINE\n                  | vacio\n    \n    if : indentacion IF PARIZQ condicion PARDER\n    else : indentacion ELSE NEWLINE\n    for : indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER\n    \n    incdec : indentacion pre_incdec\n           | indentacion post_incdec\n    \n    pre_incdec : INCREMENTAR NOMBRE\n               | DECREMENTAR NOMBRE\n\n    \n    post_incdec : NOMBRE INCREMENTAR\n                | NOMBRE DECREMENTAR\n    while : indentacion WHILE PARIZQ condicion PARDERprint : indentacion PRINT PARIZQ tipo_variable PARDERread : indentacion READ PARIZQ STRING PARDERdec_variable : indentacion DECVARIABLE ASIGNACION op_aritmetica\n    dec_vector : indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica\n               | indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica\n    asignacion : indentacion NOMBRE ASIGNACION op_aritmetica\n    asignacion_vector : indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica\n                      | indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica\n    \n    retorno : RETURN tipo_variable\n            | RETURN op_aritmetica\n    \n    operador_condicional : DIFERENTE\n                       | IGUAL\n                       | MAYOR\n                       | MAYORIGUAL\n                       | MENOR\n                       | MENORIGUAL\n    \n    condicion : tipo_variable operador_condicional tipo_variable condicion_extra\n    \n    condicion_extra : operador_logico tipo_variable operador_condicional tipo_variable condicion_extra\n                    | vacio\n    \n    tipo_variable : NOMBRE\n                   | DOUBLE\n                   | INT\n                   | STRING\n                   | FALSE\n                   | TRUE\n                   | llamado_funcion\n    \n    op_aritmetica : tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra\n                  | vacio\n\n    \n    op_aritmetica_extra : operador_aritmetico tipo_variable op_aritmetica_extra\n                        | operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER\n                        | vacio\n\n    \n    operador_aritmetico : SUMA\n                        | RESTA\n                        | MULT\n                        | DIV\n    \n    operador_logico : AND\n                    | OR\n    vacio : '
    
_lr_action_items = {'$end':([0,1,3,65,],[-80,0,-2,-1,]),'PRIVATE':([0,2,3,4,9,21,29,30,31,32,33,34,35,36,37,38,39,128,],[6,6,-6,-80,-5,-32,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-7,]),'PUBLIC':([0,2,3,4,9,21,29,30,31,32,33,34,35,36,37,38,39,128,],[7,7,-6,-80,-5,-32,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-7,]),'RETURN':([0,2,3,4,8,9,21,29,30,31,32,33,34,35,36,37,38,39,65,128,],[-80,-80,-2,23,23,-5,-32,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-1,-7,]),'TABULACION':([0,2,3,4,8,9,21,23,24,29,30,31,32,33,34,35,36,37,38,39,65,66,68,70,71,73,74,79,80,81,82,83,105,106,107,108,109,110,111,122,128,131,132,135,138,140,141,142,152,153,],[-80,-80,-2,24,24,-5,-32,24,24,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-1,24,24,24,24,24,24,24,-74,-75,-76,-77,24,-53,-54,-55,-56,-57,-58,24,-7,24,24,24,24,-78,-79,24,24,24,]),'NEWLINE':([0,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,28,29,30,31,32,33,34,35,36,37,38,39,46,47,51,52,53,54,55,56,57,58,59,60,65,68,73,75,76,77,78,89,96,100,104,115,116,117,118,123,124,128,131,132,134,143,144,146,154,160,],[-80,-80,-2,-80,-80,-5,29,30,31,32,33,34,35,36,37,38,39,-32,-80,65,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-36,-37,-51,-52,-62,-63,-64,-65,-66,-67,-68,-70,-1,-80,-80,-40,-41,-38,-39,-45,-48,-80,-33,-42,-43,-44,-16,-69,-73,-7,-80,-80,-80,-46,-47,-71,-72,-35,]),'IF':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,62,63,65,128,],[-80,-80,-2,-80,-80,-5,-3,40,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-3,-1,-7,]),'FOR':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,62,63,65,128,],[-80,-80,-2,-80,-80,-5,-3,41,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-3,-1,-7,]),'WHILE':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,62,63,65,128,],[-80,-80,-2,-80,-80,-5,-3,43,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-3,-1,-7,]),'PRINT':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,62,63,65,128,],[-80,-80,-2,-80,-80,-5,-3,44,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-3,-1,-7,]),'READ':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,62,63,65,128,],[-80,-80,-2,-80,-80,-5,-3,45,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-3,-1,-7,]),'DECVARIABLE':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,62,63,65,67,128,],[-80,-80,-2,-80,-80,-5,-3,42,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-4,-3,-1,88,-7,]),'NOMBRE':([0,2,3,4,8,9,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,49,50,60,61,62,63,65,66,68,69,70,71,73,74,79,80,81,82,83,85,98,105,106,107,108,109,110,111,120,122,126,128,131,132,135,138,140,141,142,152,153,156,],[-80,-80,-2,-80,-80,-5,-3,48,53,-80,64,-10,-11,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,77,78,-3,84,-4,-3,-1,53,53,91,53,53,53,53,53,-74,-75,-76,-77,101,-3,53,-53,-54,-55,-56,-57,-58,133,53,136,-7,53,53,53,53,-78,-79,53,53,-80,159,]),'INCREMENTAR':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,48,62,63,65,128,153,156,159,],[-80,-80,-2,-80,-80,-5,-3,49,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,75,-4,-3,-1,-7,-80,49,75,]),'DECREMENTAR':([0,2,3,4,8,9,21,22,24,29,30,31,32,33,34,35,36,37,38,39,48,62,63,65,128,153,156,159,],[-80,-80,-2,-80,-80,-5,-3,50,-80,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,76,-4,-3,-1,-7,-80,50,76,]),'VOID':([5,6,7,],[26,-8,-9,]),'FUNCTION':([5,6,7,],[27,-8,-9,]),'DOUBLE':([23,66,68,70,71,73,74,79,80,81,82,83,105,106,107,108,109,110,111,122,131,132,135,138,140,141,142,152,],[54,54,54,54,54,54,54,54,-74,-75,-76,-77,54,-53,-54,-55,-56,-57,-58,54,54,54,54,54,-78,-79,54,54,]),'INT':([23,66,68,69,70,71,73,74,79,80,81,82,83,105,106,107,108,109,110,111,112,122,131,132,135,138,140,141,142,152,],[55,55,55,92,55,55,55,55,55,-74,-75,-76,-77,55,-53,-54,-55,-56,-57,-58,130,55,55,55,55,55,-78,-79,55,55,]),'STRING':([23,66,68,70,71,72,73,74,79,80,81,82,83,105,106,107,108,109,110,111,122,131,132,135,138,140,141,142,152,],[56,56,56,56,56,95,56,56,56,-74,-75,-76,-77,56,-53,-54,-55,-56,-57,-58,56,56,56,56,56,-78,-79,56,56,]),'FALSE':([23,66,68,70,71,73,74,79,80,81,82,83,105,106,107,108,109,110,111,122,131,132,135,138,140,141,142,152,],[57,57,57,57,57,57,57,57,-74,-75,-76,-77,57,-53,-54,-55,-56,-57,-58,57,57,57,57,57,-78,-79,57,57,]),'TRUE':([23,66,68,70,71,73,74,79,80,81,82,83,105,106,107,108,109,110,111,122,131,132,135,138,140,141,142,152,],[58,58,58,58,58,58,58,58,-74,-75,-76,-77,58,-53,-54,-55,-56,-57,-58,58,58,58,58,58,-78,-79,58,58,]),'PARIZQ':([40,41,43,44,45,48,64,80,81,82,83,84,122,],[66,67,70,71,72,74,85,-74,-75,-76,-77,74,135,]),'ASIGNACION':([42,48,88,113,114,],[68,73,112,131,132,]),'CORCHETEIZQ':([42,],[69,]),'PARDER':([46,47,53,54,55,56,57,58,59,74,75,76,77,78,85,86,93,94,95,97,98,99,101,102,103,118,119,121,124,125,127,129,133,134,136,137,139,145,146,147,148,151,154,155,157,158,],[-36,-37,-62,-63,-64,-65,-66,-67,-68,-80,-40,-41,-38,-39,-80,104,115,116,117,118,-17,-80,-80,128,-12,-16,-18,-20,-73,-13,-15,-80,-80,-80,-80,-59,-61,-19,-71,-80,-14,154,-72,-80,160,-60,]),'SUMA':([51,53,54,55,56,57,58,59,90,100,118,134,147,],[80,-62,-63,-64,-65,-66,-67,-68,80,80,-16,80,80,]),'RESTA':([51,53,54,55,56,57,58,59,90,100,118,134,147,],[81,-62,-63,-64,-65,-66,-67,-68,81,81,-16,81,81,]),'MULT':([51,53,54,55,56,57,58,59,90,100,118,134,147,],[82,-62,-63,-64,-65,-66,-67,-68,82,82,-16,82,82,]),'DIV':([51,53,54,55,56,57,58,59,90,100,118,134,147,],[83,-62,-63,-64,-65,-66,-67,-68,83,83,-16,83,83,]),'DIFERENTE':([53,54,55,56,57,58,59,87,118,149,],[-62,-63,-64,-65,-66,-67,-68,106,-16,106,]),'IGUAL':([53,54,55,56,57,58,59,87,118,149,],[-62,-63,-64,-65,-66,-67,-68,107,-16,107,]),'MAYOR':([53,54,55,56,57,58,59,87,118,149,],[-62,-63,-64,-65,-66,-67,-68,108,-16,108,]),'MAYORIGUAL':([53,54,55,56,57,58,59,87,118,149,],[-62,-63,-64,-65,-66,-67,-68,109,-16,109,]),'MENOR':([53,54,55,56,57,58,59,87,118,149,],[-62,-63,-64,-65,-66,-67,-68,110,-16,110,]),'MENORIGUAL':([53,54,55,56,57,58,59,87,118,149,],[-62,-63,-64,-65,-66,-67,-68,111,-16,111,]),'COMA':([53,54,55,56,57,58,59,99,101,118,133,136,],[-62,-63,-64,-65,-66,-67,-68,120,126,-16,120,126,]),'AND':([53,54,55,56,57,58,59,118,129,155,],[-62,-63,-64,-65,-66,-67,-68,-16,140,140,]),'OR':([53,54,55,56,57,58,59,118,129,155,],[-62,-63,-64,-65,-66,-67,-68,-16,141,141,]),'PUNTOYCOMA':([53,54,55,56,57,58,59,118,129,130,137,139,150,155,158,],[-62,-63,-64,-65,-66,-67,-68,-16,-80,142,-59,-61,153,-80,-60,]),'CORCHETEDER':([91,92,],[113,114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicial':([0,2,],[1,8,]),'funcion':([0,2,],[2,2,]),'vacio':([0,2,4,8,23,24,66,68,70,71,73,74,79,85,99,100,101,105,122,129,131,132,133,134,135,136,138,142,147,152,153,155,],[3,3,21,21,60,63,63,60,63,63,60,98,63,103,121,124,127,63,63,139,60,60,121,124,63,127,63,63,124,63,63,139,]),'definicion_funcion':([0,2,],[4,4,]),'dominio':([0,2,],[5,5,]),'instrucciones':([4,8,],[9,28,]),'if':([4,8,],[10,10,]),'for':([4,8,],[11,11,]),'while':([4,8,],[12,12,]),'print':([4,8,],[13,13,]),'read':([4,8,],[14,14,]),'incdec':([4,8,153,],[15,15,157,]),'dec_variable':([4,8,],[16,16,]),'dec_vector':([4,8,],[17,17,]),'asignacion':([4,8,],[18,18,]),'llamado_funcion':([4,8,23,66,68,70,71,73,74,79,105,122,131,132,135,138,142,152,],[19,19,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'retorno':([4,8,],[20,20,]),'indentacion':([4,8,23,24,66,68,70,71,73,74,79,105,122,131,132,135,138,142,152,153,],[22,22,61,62,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,156,]),'return':([5,],[25,]),'pre_incdec':([22,156,],[46,46,]),'post_incdec':([22,156,],[47,47,]),'tipo_variable':([23,66,68,70,71,73,74,79,105,122,131,132,135,138,142,152,],[51,87,90,87,94,90,99,100,129,134,90,90,147,149,87,155,]),'op_aritmetica':([23,68,73,131,132,],[52,89,96,143,144,]),'operador_aritmetico':([51,90,100,134,147,],[79,79,122,122,122,]),'condicion':([66,70,142,],[86,93,150,]),'parametro_llamado':([74,],[97,]),'parametro':([85,],[102,]),'operador_condicional':([87,149,],[105,152,]),'parametro_llamado_extra':([99,133,],[119,145,]),'op_aritmetica_extra':([100,134,147,],[123,146,151,]),'parametro_extra':([101,136,],[125,148,]),'condicion_extra':([129,155,],[137,158,]),'operador_logico':([129,155,],[138,138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicial","S'",1,None,None,None),
  ('inicial -> funcion inicial instrucciones NEWLINE','inicial',4,'p_INICIAL','parser.py',7),
  ('inicial -> vacio','inicial',1,'p_INICIAL','parser.py',8),
  ('indentacion -> vacio','indentacion',1,'p_INDENTACION','parser.py',13),
  ('indentacion -> TABULACION indentacion','indentacion',2,'p_INDENTACION','parser.py',14),
  ('funcion -> definicion_funcion instrucciones','funcion',2,'p_FUNCION','parser.py',20),
  ('funcion -> vacio','funcion',1,'p_FUNCION','parser.py',21),
  ('definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER','definicion_funcion',6,'p_DEFINICION_FUNCION','parser.py',26),
  ('dominio -> PRIVATE','dominio',1,'p_DOMINIO_FUNC','parser.py',31),
  ('dominio -> PUBLIC','dominio',1,'p_DOMINIO_FUNC','parser.py',32),
  ('return -> VOID','return',1,'p_RETURN_FUNC','parser.py',37),
  ('return -> FUNCTION','return',1,'p_RETURN_FUNC','parser.py',38),
  ('parametro -> vacio','parametro',1,'p_PARAMETRO','parser.py',43),
  ('parametro -> NOMBRE parametro_extra','parametro',2,'p_PARAMETRO','parser.py',44),
  ('parametro_extra -> COMA NOMBRE parametro_extra','parametro_extra',3,'p_PARAMETRO_EXTRA','parser.py',50),
  ('parametro_extra -> vacio','parametro_extra',1,'p_PARAMETRO_EXTRA','parser.py',51),
  ('llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER','llamado_funcion',5,'p_LLAMADO_FUNCION','parser.py',57),
  ('parametro_llamado -> vacio','parametro_llamado',1,'p_PARAMETRO_LLAMADO','parser.py',62),
  ('parametro_llamado -> tipo_variable parametro_llamado_extra','parametro_llamado',2,'p_PARAMETRO_LLAMADO','parser.py',63),
  ('parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra','parametro_llamado_extra',3,'p_PARAMETRO_LLAMADO_EXTRA','parser.py',69),
  ('parametro_llamado_extra -> vacio','parametro_llamado_extra',1,'p_PARAMETRO_LLAMADO_EXTRA','parser.py',70),
  ('instrucciones -> if NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',75),
  ('instrucciones -> for NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',76),
  ('instrucciones -> while NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',77),
  ('instrucciones -> print NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',78),
  ('instrucciones -> read NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',79),
  ('instrucciones -> incdec NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',80),
  ('instrucciones -> dec_variable NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',81),
  ('instrucciones -> dec_vector NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',82),
  ('instrucciones -> asignacion NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',83),
  ('instrucciones -> llamado_funcion NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',84),
  ('instrucciones -> retorno NEWLINE','instrucciones',2,'p_INSTRUCCIONES','parser.py',85),
  ('instrucciones -> vacio','instrucciones',1,'p_INSTRUCCIONES','parser.py',86),
  ('if -> indentacion IF PARIZQ condicion PARDER','if',5,'p_IF','parser.py',91),
  ('else -> indentacion ELSE NEWLINE','else',3,'p_ELSE','parser.py',95),
  ('for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER','for',11,'p_FOR','parser.py',99),
  ('incdec -> indentacion pre_incdec','incdec',2,'p_INCDEC','parser.py',104),
  ('incdec -> indentacion post_incdec','incdec',2,'p_INCDEC','parser.py',105),
  ('pre_incdec -> INCREMENTAR NOMBRE','pre_incdec',2,'p_PRE_INCDEC','parser.py',110),
  ('pre_incdec -> DECREMENTAR NOMBRE','pre_incdec',2,'p_PRE_INCDEC','parser.py',111),
  ('post_incdec -> NOMBRE INCREMENTAR','post_incdec',2,'p_POST_INCDEC','parser.py',117),
  ('post_incdec -> NOMBRE DECREMENTAR','post_incdec',2,'p_POST_INCDEC','parser.py',118),
  ('while -> indentacion WHILE PARIZQ condicion PARDER','while',5,'p_WHILE','parser.py',123),
  ('print -> indentacion PRINT PARIZQ tipo_variable PARDER','print',5,'p_PRINT','parser.py',126),
  ('read -> indentacion READ PARIZQ STRING PARDER','read',5,'p_READ','parser.py',129),
  ('dec_variable -> indentacion DECVARIABLE ASIGNACION op_aritmetica','dec_variable',4,'p_DECVARIABLE','parser.py',132),
  ('dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica','dec_vector',7,'p_DECVECTOR','parser.py',136),
  ('dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica','dec_vector',7,'p_DECVECTOR','parser.py',137),
  ('asignacion -> indentacion NOMBRE ASIGNACION op_aritmetica','asignacion',4,'p_ASIGNACION','parser.py',141),
  ('asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica','asignacion_vector',7,'p_ASIGNACIONVECTOR','parser.py',145),
  ('asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica','asignacion_vector',7,'p_ASIGNACIONVECTOR','parser.py',146),
  ('retorno -> RETURN tipo_variable','retorno',2,'p_RETORNAR','parser.py',151),
  ('retorno -> RETURN op_aritmetica','retorno',2,'p_RETORNAR','parser.py',152),
  ('operador_condicional -> DIFERENTE','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',159),
  ('operador_condicional -> IGUAL','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',160),
  ('operador_condicional -> MAYOR','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',161),
  ('operador_condicional -> MAYORIGUAL','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',162),
  ('operador_condicional -> MENOR','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',163),
  ('operador_condicional -> MENORIGUAL','operador_condicional',1,'p_OPERADOR_CONDICIONAL','parser.py',164),
  ('condicion -> tipo_variable operador_condicional tipo_variable condicion_extra','condicion',4,'p_CONDICION','parser.py',169),
  ('condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra','condicion_extra',5,'p_CONDICION_EXTRA','parser.py',174),
  ('condicion_extra -> vacio','condicion_extra',1,'p_CONDICION_EXTRA','parser.py',175),
  ('tipo_variable -> NOMBRE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',180),
  ('tipo_variable -> DOUBLE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',181),
  ('tipo_variable -> INT','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',182),
  ('tipo_variable -> STRING','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',183),
  ('tipo_variable -> FALSE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',184),
  ('tipo_variable -> TRUE','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',185),
  ('tipo_variable -> llamado_funcion','tipo_variable',1,'p_TIPO_VARIABLE','parser.py',186),
  ('op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra','op_aritmetica',4,'p_OP_ARITMETICA','parser.py',191),
  ('op_aritmetica -> vacio','op_aritmetica',1,'p_OP_ARITMETICA','parser.py',192),
  ('op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra','op_aritmetica_extra',3,'p_OP_ARITMETICA_EXTRA','parser.py',198),
  ('op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER','op_aritmetica_extra',5,'p_OP_ARITMETICA_EXTRA','parser.py',199),
  ('op_aritmetica_extra -> vacio','op_aritmetica_extra',1,'p_OP_ARITMETICA_EXTRA','parser.py',200),
  ('operador_aritmetico -> SUMA','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',206),
  ('operador_aritmetico -> RESTA','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',207),
  ('operador_aritmetico -> MULT','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',208),
  ('operador_aritmetico -> DIV','operador_aritmetico',1,'p_OPERADOR_ARITMETICO','parser.py',209),
  ('operador_logico -> AND','operador_logico',1,'p_OPERADOR_LOGICO','parser.py',214),
  ('operador_logico -> OR','operador_logico',1,'p_OPERADOR_LOGICO','parser.py',215),
  ('vacio -> <empty>','vacio',0,'p_vacio','parser.py',219),
]
