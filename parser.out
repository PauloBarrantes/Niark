Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    IMPORT
    SWITCH

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark
Rule 2     Niark -> instrucciones Niark
Rule 3     Niark -> vacio
Rule 4     cambios_linea -> NEWLINE cambios_linea
Rule 5     cambios_linea -> vacio
Rule 6     indentacion -> TABULACION indentacion
Rule 7     indentacion -> vacio
Rule 8     definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER
Rule 9     dominio -> PRIVATE
Rule 10    dominio -> PUBLIC
Rule 11    tipo_return -> VOID
Rule 12    tipo_return -> FUNCTION
Rule 13    parametro -> vacio
Rule 14    parametro -> NOMBRE parametro_extra
Rule 15    parametro_extra -> COMA NOMBRE parametro_extra
Rule 16    parametro_extra -> vacio
Rule 17    llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER
Rule 18    llamado_funcion -> NOMBRE PARIZQ vacio PARDER
Rule 19    parametro_llamado -> tipo_variable parametro_llamado_extra
Rule 20    parametro_llamado -> op_aritmetica parametro_llamado_extra
Rule 21    parametro_llamado_extra -> COMA parametro_llamado
Rule 22    parametro_llamado_extra -> vacio
Rule 23    instruccion -> condicion_if
Rule 24    instruccion -> condicion_else
Rule 25    instruccion -> ciclo_for
Rule 26    instruccion -> ciclo_while
Rule 27    instruccion -> imprimir
Rule 28    instruccion -> leer
Rule 29    instruccion -> incdec
Rule 30    instruccion -> dec_variable
Rule 31    instruccion -> dec_vector
Rule 32    instruccion -> usar_vector
Rule 33    instruccion -> asigna
Rule 34    instruccion -> asignacion_vector
Rule 35    instruccion -> llamado_funcion
Rule 36    instruccion -> retorno
Rule 37    instruccion -> comentario
Rule 38    comentario -> COMENTARIO
Rule 39    comentario -> vacio
Rule 40    instrucciones -> indentacion instruccion NEWLINE instrucciones
Rule 41    instrucciones -> vacio
Rule 42    condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
Rule 43    condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
Rule 44    condicion_else -> ELSE condicion_if
Rule 45    ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
Rule 46    incdec -> pre_incdec
Rule 47    incdec -> post_incdec
Rule 48    pre_incdec -> INCREMENTAR NOMBRE
Rule 49    pre_incdec -> DECREMENTAR NOMBRE
Rule 50    post_incdec -> NOMBRE INCREMENTAR
Rule 51    post_incdec -> NOMBRE DECREMENTAR
Rule 52    ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ instrucciones indentacion LLAVEDER
Rule 53    imprimir -> PRINT PARIZQ tipo_variable PARDER
Rule 54    leer -> READ PARIZQ NOMBRE PARDER
Rule 55    dec_variable -> DECVARIABLE ASIGNACION op_aritmetica
Rule 56    dec_variable -> DECVARIABLE ASIGNACION tipo_variable
Rule 57    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
Rule 58    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER
Rule 59    dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER
Rule 60    usar_vector -> vector ASIGNACION op_aritmetica
Rule 61    usar_vector -> vector ASIGNACION tipo_variable
Rule 62    vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
Rule 63    vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER
Rule 64    vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
Rule 65    asigna -> NOMBRE ASIGNACION op_aritmetica
Rule 66    asigna -> NOMBRE ASIGNACION tipo_variable
Rule 67    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 68    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 69    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 70    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 71    retorno -> RETURN tipo_variable
Rule 72    retorno -> RETURN op_aritmetica
Rule 73    operador_condicional -> DIFERENTE
Rule 74    operador_condicional -> IGUAL
Rule 75    operador_condicional -> MAYOR
Rule 76    operador_condicional -> MAYORIGUAL
Rule 77    operador_condicional -> MENOR
Rule 78    operador_condicional -> MENORIGUAL
Rule 79    condicion -> comparables operador_condicional comparables condicion_extra
Rule 80    condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
Rule 81    condicion_extra -> operador_logico condicion
Rule 82    condicion_extra -> vacio
Rule 83    comparables -> tipo_variable
Rule 84    comparables -> op_aritmetica
Rule 85    tipo_variable -> NOMBRE
Rule 86    tipo_variable -> DOUBLE
Rule 87    tipo_variable -> INT
Rule 88    tipo_variable -> STRING
Rule 89    tipo_variable -> FALSE
Rule 90    tipo_variable -> TRUE
Rule 91    tipo_variable -> llamado_funcion
Rule 92    tipo_variable -> vector
Rule 93    op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable
Rule 94    op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 95    op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 96    op_aritmetica_extra -> tipo_variable
Rule 97    op_aritmetica_extra -> op_aritmetica
Rule 98    op_aritmetica_extra -> vacio
Rule 99    operador_aritmetico -> SUMA
Rule 100   operador_aritmetico -> RESTA
Rule 101   operador_aritmetico -> MULT
Rule 102   operador_aritmetico -> DIV
Rule 103   operador_logico -> AND
Rule 104   operador_logico -> OR
Rule 105   vacio -> <empty>

Terminals, with rules where they appear

AND                  : 103
ASIGNACION           : 55 56 60 61 65 66 67 68 69 70
BREAK                : 
CASE                 : 
COMA                 : 15 21
COMENTARIO           : 38
CORCHETEDER          : 57 58 59 62 63 64 67 68 69 70
CORCHETEIZQ          : 57 58 59 62 63 64 67 68 69 70
DECREMENTAR          : 49 51
DECVARIABLE          : 55 56 57 58 59
DIFERENTE            : 73
DIV                  : 102
DOUBLE               : 86
ELSE                 : 43 44
FALSE                : 89
FOR                  : 45
FUNCTION             : 12
IF                   : 42
IGUAL                : 74
IMPORT               : 
INCREMENTAR          : 48 50
INT                  : 58 63 68 70 87
LLAVEDER             : 1 42 43 45 52
LLAVEIZQ             : 1 42 43 45 52
MAYOR                : 75
MAYORIGUAL           : 76
MENOR                : 77
MENORIGUAL           : 78
MULT                 : 101
NEWLINE              : 1 4 40 42 43 45
NOMBRE               : 8 14 15 17 18 48 49 50 51 54 57 62 62 63 64 65 66 67 67 68 69 69 70 85
OR                   : 104
PARDER               : 8 17 18 42 45 52 53 54 80 94 95
PARIZQ               : 8 17 18 42 45 52 53 54 80 94 95
PRINT                : 53
PRIVATE              : 9
PUBLIC               : 10
PUNTOYCOMA           : 45 45
READ                 : 54
RESTA                : 100
RETURN               : 71 72
STRING               : 88
SUMA                 : 99
SWITCH               : 
TABULACION           : 6
TRUE                 : 90
VOID                 : 11
WHILE                : 52
error                : 

Nonterminals, with rules where they appear

Niark                : 1 2 0
asigna               : 33
asignacion_vector    : 34
cambios_linea        : 4
ciclo_for            : 25
ciclo_while          : 26
comentario           : 37
comparables          : 79 79 80 80
condicion            : 42 45 52 81
condicion_else       : 24
condicion_extra      : 79 80 80
condicion_if         : 23 44
dec_variable         : 30 45
dec_vector           : 31
definicion_funcion   : 1
dominio              : 8
imprimir             : 27
incdec               : 29 45
indentacion          : 6 40 43 45 52
instruccion          : 40
instrucciones        : 1 2 40 42 43 45 52
leer                 : 28
llamado_funcion      : 35 91
op_aritmetica        : 20 55 59 60 64 65 67 68 72 84 97
op_aritmetica_extra  : 93 94 94 95
operador_aritmetico  : 93 94 94 95
operador_condicional : 79 80
operador_logico      : 81
parametro            : 8
parametro_extra      : 14 15
parametro_llamado    : 17 21
parametro_llamado_extra : 19 20
post_incdec          : 47
pre_incdec           : 46
retorno              : 36
tipo_return          : 8
tipo_variable        : 19 53 56 61 66 69 70 71 83 93 94 95 96
usar_vector          : 32
vacio                : 3 5 7 13 16 18 22 39 41 82 98
vector               : 60 61 92

Parsing method: LALR

state 0

    (0) S' -> . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (8) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (105) vacio -> .
    (9) dominio -> . PRIVATE
    (10) dominio -> . PUBLIC
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 105 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 105 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    Niark                          shift and go to state 1
    definicion_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 1

    (0) S' -> Niark .



state 2

    (1) Niark -> definicion_funcion . LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark

    LLAVEIZQ        shift and go to state 10


state 3

    (2) Niark -> instrucciones . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (8) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (105) vacio -> .
    (9) dominio -> . PRIVATE
    (10) dominio -> . PUBLIC
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 105 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 105 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 3
    Niark                          shift and go to state 11
    definicion_funcion             shift and go to state 2
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 4

    (3) Niark -> vacio .
    (41) instrucciones -> vacio .
    (7) indentacion -> vacio .

  ! reduce/reduce conflict for $end resolved using rule 3 (Niark -> vacio .)
  ! reduce/reduce conflict for IF resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for ELSE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECVARIABLE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for NOMBRE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for INCREMENTAR resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECREMENTAR resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 7 (indentacion -> vacio .)
    $end            reduce using rule 3 (Niark -> vacio .)
    PRIVATE         reduce using rule 41 (instrucciones -> vacio .)
    PUBLIC          reduce using rule 41 (instrucciones -> vacio .)
    TABULACION      reduce using rule 41 (instrucciones -> vacio .)
    IF              reduce using rule 7 (indentacion -> vacio .)
    ELSE            reduce using rule 7 (indentacion -> vacio .)
    FOR             reduce using rule 7 (indentacion -> vacio .)
    WHILE           reduce using rule 7 (indentacion -> vacio .)
    PRINT           reduce using rule 7 (indentacion -> vacio .)
    READ            reduce using rule 7 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 7 (indentacion -> vacio .)
    NOMBRE          reduce using rule 7 (indentacion -> vacio .)
    RETURN          reduce using rule 7 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 7 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 7 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 7 (indentacion -> vacio .)
    NEWLINE         reduce using rule 7 (indentacion -> vacio .)

  ! IF              [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! ELSE            [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! FOR             [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! WHILE           [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! PRINT           [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! READ            [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! DECVARIABLE     [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! NOMBRE          [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! RETURN          [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! COMENTARIO      [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! INCREMENTAR     [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! DECREMENTAR     [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! NEWLINE         [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! $end            [ reduce using rule 41 (instrucciones -> vacio .) ]


state 5

    (8) definicion_funcion -> dominio . tipo_return NOMBRE PARIZQ parametro PARDER
    (11) tipo_return -> . VOID
    (12) tipo_return -> . FUNCTION

    VOID            shift and go to state 13
    FUNCTION        shift and go to state 14

    tipo_return                    shift and go to state 12

state 6

    (40) instrucciones -> indentacion . instruccion NEWLINE instrucciones
    (23) instruccion -> . condicion_if
    (24) instruccion -> . condicion_else
    (25) instruccion -> . ciclo_for
    (26) instruccion -> . ciclo_while
    (27) instruccion -> . imprimir
    (28) instruccion -> . leer
    (29) instruccion -> . incdec
    (30) instruccion -> . dec_variable
    (31) instruccion -> . dec_vector
    (32) instruccion -> . usar_vector
    (33) instruccion -> . asigna
    (34) instruccion -> . asignacion_vector
    (35) instruccion -> . llamado_funcion
    (36) instruccion -> . retorno
    (37) instruccion -> . comentario
    (42) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
    (43) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (44) condicion_else -> . ELSE condicion_if
    (45) ciclo_for -> . FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (52) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ instrucciones indentacion LLAVEDER
    (53) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (54) leer -> . READ PARIZQ NOMBRE PARDER
    (46) incdec -> . pre_incdec
    (47) incdec -> . post_incdec
    (55) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (56) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER
    (60) usar_vector -> . vector ASIGNACION op_aritmetica
    (61) usar_vector -> . vector ASIGNACION tipo_variable
    (65) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (66) asigna -> . NOMBRE ASIGNACION tipo_variable
    (67) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (71) retorno -> . RETURN tipo_variable
    (72) retorno -> . RETURN op_aritmetica
    (38) comentario -> . COMENTARIO
    (39) comentario -> . vacio
    (48) pre_incdec -> . INCREMENTAR NOMBRE
    (49) pre_incdec -> . DECREMENTAR NOMBRE
    (50) post_incdec -> . NOMBRE INCREMENTAR
    (51) post_incdec -> . NOMBRE DECREMENTAR
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    IF              shift and go to state 31
    ELSE            shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    PRINT           shift and go to state 35
    READ            shift and go to state 36
    DECVARIABLE     shift and go to state 40
    NOMBRE          shift and go to state 37
    RETURN          shift and go to state 43
    COMENTARIO      shift and go to state 44
    INCREMENTAR     shift and go to state 45
    DECREMENTAR     shift and go to state 46
    NEWLINE         reduce using rule 105 (vacio -> .)

    instruccion                    shift and go to state 15
    condicion_if                   shift and go to state 16
    condicion_else                 shift and go to state 17
    ciclo_for                      shift and go to state 18
    ciclo_while                    shift and go to state 19
    imprimir                       shift and go to state 20
    leer                           shift and go to state 21
    incdec                         shift and go to state 22
    dec_variable                   shift and go to state 23
    dec_vector                     shift and go to state 24
    usar_vector                    shift and go to state 25
    asigna                         shift and go to state 26
    asignacion_vector              shift and go to state 27
    llamado_funcion                shift and go to state 28
    retorno                        shift and go to state 29
    comentario                     shift and go to state 30
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39
    vector                         shift and go to state 41
    vacio                          shift and go to state 42

state 7

    (9) dominio -> PRIVATE .

    VOID            reduce using rule 9 (dominio -> PRIVATE .)
    FUNCTION        reduce using rule 9 (dominio -> PRIVATE .)


state 8

    (10) dominio -> PUBLIC .

    VOID            reduce using rule 10 (dominio -> PUBLIC .)
    FUNCTION        reduce using rule 10 (dominio -> PUBLIC .)


state 9

    (6) indentacion -> TABULACION . indentacion
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 47
    vacio                          shift and go to state 48

state 10

    (1) Niark -> definicion_funcion LLAVEIZQ . NEWLINE instrucciones LLAVEDER Niark

    NEWLINE         shift and go to state 49


state 11

    (2) Niark -> instrucciones Niark .

    $end            reduce using rule 2 (Niark -> instrucciones Niark .)


state 12

    (8) definicion_funcion -> dominio tipo_return . NOMBRE PARIZQ parametro PARDER

    NOMBRE          shift and go to state 50


state 13

    (11) tipo_return -> VOID .

    NOMBRE          reduce using rule 11 (tipo_return -> VOID .)


state 14

    (12) tipo_return -> FUNCTION .

    NOMBRE          reduce using rule 12 (tipo_return -> FUNCTION .)


state 15

    (40) instrucciones -> indentacion instruccion . NEWLINE instrucciones

    NEWLINE         shift and go to state 51


state 16

    (23) instruccion -> condicion_if .

    NEWLINE         reduce using rule 23 (instruccion -> condicion_if .)


state 17

    (24) instruccion -> condicion_else .

    NEWLINE         reduce using rule 24 (instruccion -> condicion_else .)


state 18

    (25) instruccion -> ciclo_for .

    NEWLINE         reduce using rule 25 (instruccion -> ciclo_for .)


state 19

    (26) instruccion -> ciclo_while .

    NEWLINE         reduce using rule 26 (instruccion -> ciclo_while .)


state 20

    (27) instruccion -> imprimir .

    NEWLINE         reduce using rule 27 (instruccion -> imprimir .)


state 21

    (28) instruccion -> leer .

    NEWLINE         reduce using rule 28 (instruccion -> leer .)


state 22

    (29) instruccion -> incdec .

    NEWLINE         reduce using rule 29 (instruccion -> incdec .)


state 23

    (30) instruccion -> dec_variable .

    NEWLINE         reduce using rule 30 (instruccion -> dec_variable .)


state 24

    (31) instruccion -> dec_vector .

    NEWLINE         reduce using rule 31 (instruccion -> dec_vector .)


state 25

    (32) instruccion -> usar_vector .

    NEWLINE         reduce using rule 32 (instruccion -> usar_vector .)


state 26

    (33) instruccion -> asigna .

    NEWLINE         reduce using rule 33 (instruccion -> asigna .)


state 27

    (34) instruccion -> asignacion_vector .

    NEWLINE         reduce using rule 34 (instruccion -> asignacion_vector .)


state 28

    (35) instruccion -> llamado_funcion .

    NEWLINE         reduce using rule 35 (instruccion -> llamado_funcion .)


state 29

    (36) instruccion -> retorno .

    NEWLINE         reduce using rule 36 (instruccion -> retorno .)


state 30

    (37) instruccion -> comentario .

    NEWLINE         reduce using rule 37 (instruccion -> comentario .)


state 31

    (42) condicion_if -> IF . PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER

    PARIZQ          shift and go to state 52


state 32

    (43) condicion_else -> ELSE . LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (44) condicion_else -> ELSE . condicion_if
    (42) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 53
    IF              shift and go to state 31

    condicion_if                   shift and go to state 54

state 33

    (45) ciclo_for -> FOR . PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PARIZQ          shift and go to state 55


state 34

    (52) ciclo_while -> WHILE . PARIZQ condicion PARDER LLAVEIZQ instrucciones indentacion LLAVEDER

    PARIZQ          shift and go to state 56


state 35

    (53) imprimir -> PRINT . PARIZQ tipo_variable PARDER

    PARIZQ          shift and go to state 57


state 36

    (54) leer -> READ . PARIZQ NOMBRE PARDER

    PARIZQ          shift and go to state 58


state 37

    (65) asigna -> NOMBRE . ASIGNACION op_aritmetica
    (66) asigna -> NOMBRE . ASIGNACION tipo_variable
    (67) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (17) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (50) post_incdec -> NOMBRE . INCREMENTAR
    (51) post_incdec -> NOMBRE . DECREMENTAR
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    ASIGNACION      shift and go to state 59
    CORCHETEIZQ     shift and go to state 60
    PARIZQ          shift and go to state 61
    INCREMENTAR     shift and go to state 62
    DECREMENTAR     shift and go to state 63


state 38

    (46) incdec -> pre_incdec .

    NEWLINE         reduce using rule 46 (incdec -> pre_incdec .)
    PARDER          reduce using rule 46 (incdec -> pre_incdec .)


state 39

    (47) incdec -> post_incdec .

    NEWLINE         reduce using rule 47 (incdec -> post_incdec .)
    PARDER          reduce using rule 47 (incdec -> post_incdec .)


state 40

    (55) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (56) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable
    (57) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER
    (58) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER
    (59) dec_vector -> DECVARIABLE . CORCHETEIZQ op_aritmetica CORCHETEDER

    ASIGNACION      shift and go to state 64
    CORCHETEIZQ     shift and go to state 65


state 41

    (60) usar_vector -> vector . ASIGNACION op_aritmetica
    (61) usar_vector -> vector . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 66


state 42

    (39) comentario -> vacio .

    NEWLINE         reduce using rule 39 (comentario -> vacio .)


state 43

    (71) retorno -> RETURN . tipo_variable
    (72) retorno -> RETURN . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    tipo_variable                  shift and go to state 67
    op_aritmetica                  shift and go to state 68
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 44

    (38) comentario -> COMENTARIO .

    NEWLINE         reduce using rule 38 (comentario -> COMENTARIO .)


state 45

    (48) pre_incdec -> INCREMENTAR . NOMBRE

    NOMBRE          shift and go to state 80


state 46

    (49) pre_incdec -> DECREMENTAR . NOMBRE

    NOMBRE          shift and go to state 81


state 47

    (6) indentacion -> TABULACION indentacion .

    IF              reduce using rule 6 (indentacion -> TABULACION indentacion .)
    ELSE            reduce using rule 6 (indentacion -> TABULACION indentacion .)
    FOR             reduce using rule 6 (indentacion -> TABULACION indentacion .)
    WHILE           reduce using rule 6 (indentacion -> TABULACION indentacion .)
    PRINT           reduce using rule 6 (indentacion -> TABULACION indentacion .)
    READ            reduce using rule 6 (indentacion -> TABULACION indentacion .)
    DECVARIABLE     reduce using rule 6 (indentacion -> TABULACION indentacion .)
    NOMBRE          reduce using rule 6 (indentacion -> TABULACION indentacion .)
    RETURN          reduce using rule 6 (indentacion -> TABULACION indentacion .)
    COMENTARIO      reduce using rule 6 (indentacion -> TABULACION indentacion .)
    INCREMENTAR     reduce using rule 6 (indentacion -> TABULACION indentacion .)
    DECREMENTAR     reduce using rule 6 (indentacion -> TABULACION indentacion .)
    NEWLINE         reduce using rule 6 (indentacion -> TABULACION indentacion .)
    LLAVEDER        reduce using rule 6 (indentacion -> TABULACION indentacion .)


state 48

    (7) indentacion -> vacio .

    IF              reduce using rule 7 (indentacion -> vacio .)
    ELSE            reduce using rule 7 (indentacion -> vacio .)
    FOR             reduce using rule 7 (indentacion -> vacio .)
    WHILE           reduce using rule 7 (indentacion -> vacio .)
    PRINT           reduce using rule 7 (indentacion -> vacio .)
    READ            reduce using rule 7 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 7 (indentacion -> vacio .)
    NOMBRE          reduce using rule 7 (indentacion -> vacio .)
    RETURN          reduce using rule 7 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 7 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 7 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 7 (indentacion -> vacio .)
    NEWLINE         reduce using rule 7 (indentacion -> vacio .)
    LLAVEDER        reduce using rule 7 (indentacion -> vacio .)


state 49

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE . instrucciones LLAVEDER Niark
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

    instrucciones                  shift and go to state 82
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 83

state 50

    (8) definicion_funcion -> dominio tipo_return NOMBRE . PARIZQ parametro PARDER

    PARIZQ          shift and go to state 84


state 51

    (40) instrucciones -> indentacion instruccion NEWLINE . instrucciones
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    PRIVATE         reduce using rule 105 (vacio -> .)
    PUBLIC          reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    $end            reduce using rule 105 (vacio -> .)
    LLAVEDER        reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    indentacion                    shift and go to state 6
    instrucciones                  shift and go to state 85
    vacio                          shift and go to state 83

state 52

    (42) condicion_if -> IF PARIZQ . condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 86
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 87
    comparables                    shift and go to state 88
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 53

    (43) condicion_else -> ELSE LLAVEIZQ . NEWLINE instrucciones indentacion LLAVEDER

    NEWLINE         shift and go to state 91


state 54

    (44) condicion_else -> ELSE condicion_if .

    NEWLINE         reduce using rule 44 (condicion_else -> ELSE condicion_if .)


state 55

    (45) ciclo_for -> FOR PARIZQ . dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (55) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (56) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable

    DECVARIABLE     shift and go to state 93

    dec_variable                   shift and go to state 92

state 56

    (52) ciclo_while -> WHILE PARIZQ . condicion PARDER LLAVEIZQ instrucciones indentacion LLAVEDER
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 86
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 94
    comparables                    shift and go to state 88
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 57

    (53) imprimir -> PRINT PARIZQ . tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74

    tipo_variable                  shift and go to state 95
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 58

    (54) leer -> READ PARIZQ . NOMBRE PARDER

    NOMBRE          shift and go to state 96


state 59

    (65) asigna -> NOMBRE ASIGNACION . op_aritmetica
    (66) asigna -> NOMBRE ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 78
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 97
    tipo_variable                  shift and go to state 98
    op_aritmetica_extra            shift and go to state 77
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    vacio                          shift and go to state 79

state 60

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable
    (62) vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER
    (63) vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER
    (64) vector -> NOMBRE CORCHETEIZQ . op_aritmetica CORCHETEDER
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (105) vacio -> .
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 99
    INT             shift and go to state 101
    PARIZQ          shift and go to state 78
    DOUBLE          shift and go to state 70
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 100
    tipo_variable                  shift and go to state 102
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 61

    (17) llamado_funcion -> NOMBRE PARIZQ . parametro_llamado PARDER
    (18) llamado_funcion -> NOMBRE PARIZQ . vacio PARDER
    (19) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (20) parametro_llamado -> . op_aritmetica parametro_llamado_extra
    (105) vacio -> .
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio

    PARDER          reduce using rule 105 (vacio -> .)
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78

    parametro_llamado              shift and go to state 103
    vacio                          shift and go to state 104
    tipo_variable                  shift and go to state 105
    op_aritmetica                  shift and go to state 106
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77

state 62

    (50) post_incdec -> NOMBRE INCREMENTAR .

    NEWLINE         reduce using rule 50 (post_incdec -> NOMBRE INCREMENTAR .)
    PARDER          reduce using rule 50 (post_incdec -> NOMBRE INCREMENTAR .)


state 63

    (51) post_incdec -> NOMBRE DECREMENTAR .

    NEWLINE         reduce using rule 51 (post_incdec -> NOMBRE DECREMENTAR .)
    PARDER          reduce using rule 51 (post_incdec -> NOMBRE DECREMENTAR .)


state 64

    (55) dec_variable -> DECVARIABLE ASIGNACION . op_aritmetica
    (56) dec_variable -> DECVARIABLE ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 78
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 107
    tipo_variable                  shift and go to state 108
    op_aritmetica_extra            shift and go to state 77
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    vacio                          shift and go to state 79

state 65

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ . op_aritmetica CORCHETEDER
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (105) vacio -> .
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 109
    INT             shift and go to state 110
    PARIZQ          shift and go to state 78
    DOUBLE          shift and go to state 70
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 111
    op_aritmetica_extra            shift and go to state 77
    tipo_variable                  shift and go to state 102
    vacio                          shift and go to state 79
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 66

    (60) usar_vector -> vector ASIGNACION . op_aritmetica
    (61) usar_vector -> vector ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 78
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    vector                         shift and go to state 76
    op_aritmetica                  shift and go to state 112
    tipo_variable                  shift and go to state 113
    op_aritmetica_extra            shift and go to state 77
    llamado_funcion                shift and go to state 75
    vacio                          shift and go to state 79

state 67

    (71) retorno -> RETURN tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    NEWLINE         reduce using rule 71 (retorno -> RETURN tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 68

    (72) retorno -> RETURN op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    NEWLINE         reduce using rule 72 (retorno -> RETURN op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 69

    (85) tipo_variable -> NOMBRE .
    (17) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    NEWLINE         reduce using rule 85 (tipo_variable -> NOMBRE .)
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIFERENTE       reduce using rule 85 (tipo_variable -> NOMBRE .)
    IGUAL           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MAYOR           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MAYORIGUAL      reduce using rule 85 (tipo_variable -> NOMBRE .)
    MENOR           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MENORIGUAL      reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARDER          reduce using rule 85 (tipo_variable -> NOMBRE .)
    COMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    PUNTOYCOMA      reduce using rule 85 (tipo_variable -> NOMBRE .)
    CORCHETEDER     reduce using rule 85 (tipo_variable -> NOMBRE .)
    AND             reduce using rule 85 (tipo_variable -> NOMBRE .)
    OR              reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 61
    CORCHETEIZQ     shift and go to state 114


state 70

    (86) tipo_variable -> DOUBLE .

    NEWLINE         reduce using rule 86 (tipo_variable -> DOUBLE .)
    SUMA            reduce using rule 86 (tipo_variable -> DOUBLE .)
    RESTA           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MULT            reduce using rule 86 (tipo_variable -> DOUBLE .)
    DIV             reduce using rule 86 (tipo_variable -> DOUBLE .)
    DIFERENTE       reduce using rule 86 (tipo_variable -> DOUBLE .)
    IGUAL           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MAYOR           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MAYORIGUAL      reduce using rule 86 (tipo_variable -> DOUBLE .)
    MENOR           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MENORIGUAL      reduce using rule 86 (tipo_variable -> DOUBLE .)
    PARDER          reduce using rule 86 (tipo_variable -> DOUBLE .)
    COMA            reduce using rule 86 (tipo_variable -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 86 (tipo_variable -> DOUBLE .)
    CORCHETEDER     reduce using rule 86 (tipo_variable -> DOUBLE .)
    AND             reduce using rule 86 (tipo_variable -> DOUBLE .)
    OR              reduce using rule 86 (tipo_variable -> DOUBLE .)


state 71

    (87) tipo_variable -> INT .

    NEWLINE         reduce using rule 87 (tipo_variable -> INT .)
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)
    DIFERENTE       reduce using rule 87 (tipo_variable -> INT .)
    IGUAL           reduce using rule 87 (tipo_variable -> INT .)
    MAYOR           reduce using rule 87 (tipo_variable -> INT .)
    MAYORIGUAL      reduce using rule 87 (tipo_variable -> INT .)
    MENOR           reduce using rule 87 (tipo_variable -> INT .)
    MENORIGUAL      reduce using rule 87 (tipo_variable -> INT .)
    PARDER          reduce using rule 87 (tipo_variable -> INT .)
    COMA            reduce using rule 87 (tipo_variable -> INT .)
    PUNTOYCOMA      reduce using rule 87 (tipo_variable -> INT .)
    CORCHETEDER     reduce using rule 87 (tipo_variable -> INT .)
    AND             reduce using rule 87 (tipo_variable -> INT .)
    OR              reduce using rule 87 (tipo_variable -> INT .)


state 72

    (88) tipo_variable -> STRING .

    NEWLINE         reduce using rule 88 (tipo_variable -> STRING .)
    SUMA            reduce using rule 88 (tipo_variable -> STRING .)
    RESTA           reduce using rule 88 (tipo_variable -> STRING .)
    MULT            reduce using rule 88 (tipo_variable -> STRING .)
    DIV             reduce using rule 88 (tipo_variable -> STRING .)
    DIFERENTE       reduce using rule 88 (tipo_variable -> STRING .)
    IGUAL           reduce using rule 88 (tipo_variable -> STRING .)
    MAYOR           reduce using rule 88 (tipo_variable -> STRING .)
    MAYORIGUAL      reduce using rule 88 (tipo_variable -> STRING .)
    MENOR           reduce using rule 88 (tipo_variable -> STRING .)
    MENORIGUAL      reduce using rule 88 (tipo_variable -> STRING .)
    PARDER          reduce using rule 88 (tipo_variable -> STRING .)
    COMA            reduce using rule 88 (tipo_variable -> STRING .)
    PUNTOYCOMA      reduce using rule 88 (tipo_variable -> STRING .)
    CORCHETEDER     reduce using rule 88 (tipo_variable -> STRING .)
    AND             reduce using rule 88 (tipo_variable -> STRING .)
    OR              reduce using rule 88 (tipo_variable -> STRING .)


state 73

    (89) tipo_variable -> FALSE .

    NEWLINE         reduce using rule 89 (tipo_variable -> FALSE .)
    SUMA            reduce using rule 89 (tipo_variable -> FALSE .)
    RESTA           reduce using rule 89 (tipo_variable -> FALSE .)
    MULT            reduce using rule 89 (tipo_variable -> FALSE .)
    DIV             reduce using rule 89 (tipo_variable -> FALSE .)
    DIFERENTE       reduce using rule 89 (tipo_variable -> FALSE .)
    IGUAL           reduce using rule 89 (tipo_variable -> FALSE .)
    MAYOR           reduce using rule 89 (tipo_variable -> FALSE .)
    MAYORIGUAL      reduce using rule 89 (tipo_variable -> FALSE .)
    MENOR           reduce using rule 89 (tipo_variable -> FALSE .)
    MENORIGUAL      reduce using rule 89 (tipo_variable -> FALSE .)
    PARDER          reduce using rule 89 (tipo_variable -> FALSE .)
    COMA            reduce using rule 89 (tipo_variable -> FALSE .)
    PUNTOYCOMA      reduce using rule 89 (tipo_variable -> FALSE .)
    CORCHETEDER     reduce using rule 89 (tipo_variable -> FALSE .)
    AND             reduce using rule 89 (tipo_variable -> FALSE .)
    OR              reduce using rule 89 (tipo_variable -> FALSE .)


state 74

    (90) tipo_variable -> TRUE .

    NEWLINE         reduce using rule 90 (tipo_variable -> TRUE .)
    SUMA            reduce using rule 90 (tipo_variable -> TRUE .)
    RESTA           reduce using rule 90 (tipo_variable -> TRUE .)
    MULT            reduce using rule 90 (tipo_variable -> TRUE .)
    DIV             reduce using rule 90 (tipo_variable -> TRUE .)
    DIFERENTE       reduce using rule 90 (tipo_variable -> TRUE .)
    IGUAL           reduce using rule 90 (tipo_variable -> TRUE .)
    MAYOR           reduce using rule 90 (tipo_variable -> TRUE .)
    MAYORIGUAL      reduce using rule 90 (tipo_variable -> TRUE .)
    MENOR           reduce using rule 90 (tipo_variable -> TRUE .)
    MENORIGUAL      reduce using rule 90 (tipo_variable -> TRUE .)
    PARDER          reduce using rule 90 (tipo_variable -> TRUE .)
    COMA            reduce using rule 90 (tipo_variable -> TRUE .)
    PUNTOYCOMA      reduce using rule 90 (tipo_variable -> TRUE .)
    CORCHETEDER     reduce using rule 90 (tipo_variable -> TRUE .)
    AND             reduce using rule 90 (tipo_variable -> TRUE .)
    OR              reduce using rule 90 (tipo_variable -> TRUE .)


state 75

    (91) tipo_variable -> llamado_funcion .

    NEWLINE         reduce using rule 91 (tipo_variable -> llamado_funcion .)
    SUMA            reduce using rule 91 (tipo_variable -> llamado_funcion .)
    RESTA           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MULT            reduce using rule 91 (tipo_variable -> llamado_funcion .)
    DIV             reduce using rule 91 (tipo_variable -> llamado_funcion .)
    DIFERENTE       reduce using rule 91 (tipo_variable -> llamado_funcion .)
    IGUAL           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MAYOR           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MAYORIGUAL      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MENOR           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MENORIGUAL      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    PARDER          reduce using rule 91 (tipo_variable -> llamado_funcion .)
    COMA            reduce using rule 91 (tipo_variable -> llamado_funcion .)
    PUNTOYCOMA      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    CORCHETEDER     reduce using rule 91 (tipo_variable -> llamado_funcion .)
    AND             reduce using rule 91 (tipo_variable -> llamado_funcion .)
    OR              reduce using rule 91 (tipo_variable -> llamado_funcion .)


state 76

    (92) tipo_variable -> vector .

    NEWLINE         reduce using rule 92 (tipo_variable -> vector .)
    SUMA            reduce using rule 92 (tipo_variable -> vector .)
    RESTA           reduce using rule 92 (tipo_variable -> vector .)
    MULT            reduce using rule 92 (tipo_variable -> vector .)
    DIV             reduce using rule 92 (tipo_variable -> vector .)
    DIFERENTE       reduce using rule 92 (tipo_variable -> vector .)
    IGUAL           reduce using rule 92 (tipo_variable -> vector .)
    MAYOR           reduce using rule 92 (tipo_variable -> vector .)
    MAYORIGUAL      reduce using rule 92 (tipo_variable -> vector .)
    MENOR           reduce using rule 92 (tipo_variable -> vector .)
    MENORIGUAL      reduce using rule 92 (tipo_variable -> vector .)
    PARDER          reduce using rule 92 (tipo_variable -> vector .)
    COMA            reduce using rule 92 (tipo_variable -> vector .)
    PUNTOYCOMA      reduce using rule 92 (tipo_variable -> vector .)
    CORCHETEDER     reduce using rule 92 (tipo_variable -> vector .)
    AND             reduce using rule 92 (tipo_variable -> vector .)
    OR              reduce using rule 92 (tipo_variable -> vector .)


state 77

    (93) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (99) operador_aritmetico -> . SUMA
    (100) operador_aritmetico -> . RESTA
    (101) operador_aritmetico -> . MULT
    (102) operador_aritmetico -> . DIV

    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    MULT            shift and go to state 118
    DIV             shift and go to state 119

    operador_aritmetico            shift and go to state 115

state 78

    (95) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (105) vacio -> .
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica_extra            shift and go to state 120
    tipo_variable                  shift and go to state 102
    op_aritmetica                  shift and go to state 121
    vacio                          shift and go to state 79
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 79

    (98) op_aritmetica_extra -> vacio .

    SUMA            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 98 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 98 (op_aritmetica_extra -> vacio .)


state 80

    (48) pre_incdec -> INCREMENTAR NOMBRE .

    NEWLINE         reduce using rule 48 (pre_incdec -> INCREMENTAR NOMBRE .)
    PARDER          reduce using rule 48 (pre_incdec -> INCREMENTAR NOMBRE .)


state 81

    (49) pre_incdec -> DECREMENTAR NOMBRE .

    NEWLINE         reduce using rule 49 (pre_incdec -> DECREMENTAR NOMBRE .)
    PARDER          reduce using rule 49 (pre_incdec -> DECREMENTAR NOMBRE .)


state 82

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones . LLAVEDER Niark

    LLAVEDER        shift and go to state 122


state 83

    (41) instrucciones -> vacio .
    (7) indentacion -> vacio .

  ! reduce/reduce conflict for IF resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for ELSE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECVARIABLE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for NOMBRE resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for INCREMENTAR resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECREMENTAR resolved using rule 7 (indentacion -> vacio .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 7 (indentacion -> vacio .)
    LLAVEDER        reduce using rule 41 (instrucciones -> vacio .)
    PRIVATE         reduce using rule 41 (instrucciones -> vacio .)
    PUBLIC          reduce using rule 41 (instrucciones -> vacio .)
    TABULACION      reduce using rule 41 (instrucciones -> vacio .)
    $end            reduce using rule 41 (instrucciones -> vacio .)
    IF              reduce using rule 7 (indentacion -> vacio .)
    ELSE            reduce using rule 7 (indentacion -> vacio .)
    FOR             reduce using rule 7 (indentacion -> vacio .)
    WHILE           reduce using rule 7 (indentacion -> vacio .)
    PRINT           reduce using rule 7 (indentacion -> vacio .)
    READ            reduce using rule 7 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 7 (indentacion -> vacio .)
    NOMBRE          reduce using rule 7 (indentacion -> vacio .)
    RETURN          reduce using rule 7 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 7 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 7 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 7 (indentacion -> vacio .)
    NEWLINE         reduce using rule 7 (indentacion -> vacio .)

  ! IF              [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! ELSE            [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! FOR             [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! WHILE           [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! PRINT           [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! READ            [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! DECVARIABLE     [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! NOMBRE          [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! RETURN          [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! COMENTARIO      [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! INCREMENTAR     [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! DECREMENTAR     [ reduce using rule 41 (instrucciones -> vacio .) ]
  ! NEWLINE         [ reduce using rule 41 (instrucciones -> vacio .) ]


state 84

    (8) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ . parametro PARDER
    (13) parametro -> . vacio
    (14) parametro -> . NOMBRE parametro_extra
    (105) vacio -> .

    NOMBRE          shift and go to state 123
    PARDER          reduce using rule 105 (vacio -> .)

    parametro                      shift and go to state 124
    vacio                          shift and go to state 125

state 85

    (40) instrucciones -> indentacion instruccion NEWLINE instrucciones .

    PRIVATE         reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    PUBLIC          reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    TABULACION      reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    IF              reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    ELSE            reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    FOR             reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    WHILE           reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    PRINT           reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    READ            reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    DECVARIABLE     reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    NOMBRE          reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    RETURN          reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    COMENTARIO      reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    INCREMENTAR     reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    DECREMENTAR     reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    NEWLINE         reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    $end            reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)
    LLAVEDER        reduce using rule 40 (instrucciones -> indentacion instruccion NEWLINE instrucciones .)


state 86

    (80) condicion -> PARIZQ . comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (95) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (105) vacio -> .
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    comparables                    shift and go to state 126
    op_aritmetica_extra            shift and go to state 120
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    vacio                          shift and go to state 79
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 87

    (42) condicion_if -> IF PARIZQ condicion . PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER

    PARDER          shift and go to state 127


state 88

    (79) condicion -> comparables . operador_condicional comparables condicion_extra
    (73) operador_condicional -> . DIFERENTE
    (74) operador_condicional -> . IGUAL
    (75) operador_condicional -> . MAYOR
    (76) operador_condicional -> . MAYORIGUAL
    (77) operador_condicional -> . MENOR
    (78) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 129
    IGUAL           shift and go to state 130
    MAYOR           shift and go to state 131
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 133
    MENORIGUAL      shift and go to state 134

    operador_condicional           shift and go to state 128

state 89

    (83) comparables -> tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    DIFERENTE       reduce using rule 83 (comparables -> tipo_variable .)
    IGUAL           reduce using rule 83 (comparables -> tipo_variable .)
    MAYOR           reduce using rule 83 (comparables -> tipo_variable .)
    MAYORIGUAL      reduce using rule 83 (comparables -> tipo_variable .)
    MENOR           reduce using rule 83 (comparables -> tipo_variable .)
    MENORIGUAL      reduce using rule 83 (comparables -> tipo_variable .)
    AND             reduce using rule 83 (comparables -> tipo_variable .)
    OR              reduce using rule 83 (comparables -> tipo_variable .)
    PARDER          reduce using rule 83 (comparables -> tipo_variable .)
    PUNTOYCOMA      reduce using rule 83 (comparables -> tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 90

    (84) comparables -> op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    DIFERENTE       reduce using rule 84 (comparables -> op_aritmetica .)
    IGUAL           reduce using rule 84 (comparables -> op_aritmetica .)
    MAYOR           reduce using rule 84 (comparables -> op_aritmetica .)
    MAYORIGUAL      reduce using rule 84 (comparables -> op_aritmetica .)
    MENOR           reduce using rule 84 (comparables -> op_aritmetica .)
    MENORIGUAL      reduce using rule 84 (comparables -> op_aritmetica .)
    AND             reduce using rule 84 (comparables -> op_aritmetica .)
    OR              reduce using rule 84 (comparables -> op_aritmetica .)
    PARDER          reduce using rule 84 (comparables -> op_aritmetica .)
    PUNTOYCOMA      reduce using rule 84 (comparables -> op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 91

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE . instrucciones indentacion LLAVEDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 135
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 83

state 92

    (45) ciclo_for -> FOR PARIZQ dec_variable . PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PUNTOYCOMA      shift and go to state 136


state 93

    (55) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (56) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 64


state 94

    (52) ciclo_while -> WHILE PARIZQ condicion . PARDER LLAVEIZQ instrucciones indentacion LLAVEDER

    PARDER          shift and go to state 137


state 95

    (53) imprimir -> PRINT PARIZQ tipo_variable . PARDER

    PARDER          shift and go to state 138


state 96

    (54) leer -> READ PARIZQ NOMBRE . PARDER

    PARDER          shift and go to state 139


state 97

    (65) asigna -> NOMBRE ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    NEWLINE         reduce using rule 65 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 98

    (66) asigna -> NOMBRE ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    NEWLINE         reduce using rule 66 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 99

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable
    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER
    (85) tipo_variable -> NOMBRE .
    (17) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    CORCHETEDER     shift and go to state 140
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 61
    CORCHETEIZQ     shift and go to state 114


state 100

    (64) vector -> NOMBRE CORCHETEIZQ op_aritmetica . CORCHETEDER
    (97) op_aritmetica_extra -> op_aritmetica .

    CORCHETEDER     shift and go to state 141
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 101

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable
    (63) vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER
    (87) tipo_variable -> INT .

    CORCHETEDER     shift and go to state 142
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)


state 102

    (96) op_aritmetica_extra -> tipo_variable .

    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 103

    (17) llamado_funcion -> NOMBRE PARIZQ parametro_llamado . PARDER

    PARDER          shift and go to state 143


state 104

    (18) llamado_funcion -> NOMBRE PARIZQ vacio . PARDER
    (98) op_aritmetica_extra -> vacio .

    PARDER          shift and go to state 144
    SUMA            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 98 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 98 (op_aritmetica_extra -> vacio .)


state 105

    (19) parametro_llamado -> tipo_variable . parametro_llamado_extra
    (96) op_aritmetica_extra -> tipo_variable .
    (21) parametro_llamado_extra -> . COMA parametro_llamado
    (22) parametro_llamado_extra -> . vacio
    (105) vacio -> .

    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    COMA            shift and go to state 146
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_llamado_extra        shift and go to state 145
    vacio                          shift and go to state 147

state 106

    (20) parametro_llamado -> op_aritmetica . parametro_llamado_extra
    (97) op_aritmetica_extra -> op_aritmetica .
    (21) parametro_llamado_extra -> . COMA parametro_llamado
    (22) parametro_llamado_extra -> . vacio
    (105) vacio -> .

    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    COMA            shift and go to state 146
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_llamado_extra        shift and go to state 148
    vacio                          shift and go to state 147

state 107

    (55) dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    NEWLINE         reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    PUNTOYCOMA      reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 108

    (56) dec_variable -> DECVARIABLE ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    NEWLINE         reduce using rule 56 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    PUNTOYCOMA      reduce using rule 56 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 109

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER
    (85) tipo_variable -> NOMBRE .
    (17) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    CORCHETEDER     shift and go to state 149
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 61
    CORCHETEIZQ     shift and go to state 114


state 110

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER
    (87) tipo_variable -> INT .

    CORCHETEDER     shift and go to state 150
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)


state 111

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica . CORCHETEDER
    (97) op_aritmetica_extra -> op_aritmetica .

    CORCHETEDER     shift and go to state 151
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 112

    (60) usar_vector -> vector ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    NEWLINE         reduce using rule 60 (usar_vector -> vector ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 113

    (61) usar_vector -> vector ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    NEWLINE         reduce using rule 61 (usar_vector -> vector ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 114

    (62) vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER
    (63) vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER
    (64) vector -> NOMBRE CORCHETEIZQ . op_aritmetica CORCHETEDER
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (105) vacio -> .
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 152
    INT             shift and go to state 153
    PARIZQ          shift and go to state 78
    DOUBLE          shift and go to state 70
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 100
    op_aritmetica_extra            shift and go to state 77
    tipo_variable                  shift and go to state 102
    vacio                          shift and go to state 79
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 115

    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    PARIZQ          shift and go to state 155
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74

    tipo_variable                  shift and go to state 154
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 116

    (99) operador_aritmetico -> SUMA .

    PARIZQ          reduce using rule 99 (operador_aritmetico -> SUMA .)
    NOMBRE          reduce using rule 99 (operador_aritmetico -> SUMA .)
    DOUBLE          reduce using rule 99 (operador_aritmetico -> SUMA .)
    INT             reduce using rule 99 (operador_aritmetico -> SUMA .)
    STRING          reduce using rule 99 (operador_aritmetico -> SUMA .)
    FALSE           reduce using rule 99 (operador_aritmetico -> SUMA .)
    TRUE            reduce using rule 99 (operador_aritmetico -> SUMA .)


state 117

    (100) operador_aritmetico -> RESTA .

    PARIZQ          reduce using rule 100 (operador_aritmetico -> RESTA .)
    NOMBRE          reduce using rule 100 (operador_aritmetico -> RESTA .)
    DOUBLE          reduce using rule 100 (operador_aritmetico -> RESTA .)
    INT             reduce using rule 100 (operador_aritmetico -> RESTA .)
    STRING          reduce using rule 100 (operador_aritmetico -> RESTA .)
    FALSE           reduce using rule 100 (operador_aritmetico -> RESTA .)
    TRUE            reduce using rule 100 (operador_aritmetico -> RESTA .)


state 118

    (101) operador_aritmetico -> MULT .

    PARIZQ          reduce using rule 101 (operador_aritmetico -> MULT .)
    NOMBRE          reduce using rule 101 (operador_aritmetico -> MULT .)
    DOUBLE          reduce using rule 101 (operador_aritmetico -> MULT .)
    INT             reduce using rule 101 (operador_aritmetico -> MULT .)
    STRING          reduce using rule 101 (operador_aritmetico -> MULT .)
    FALSE           reduce using rule 101 (operador_aritmetico -> MULT .)
    TRUE            reduce using rule 101 (operador_aritmetico -> MULT .)


state 119

    (102) operador_aritmetico -> DIV .

    PARIZQ          reduce using rule 102 (operador_aritmetico -> DIV .)
    NOMBRE          reduce using rule 102 (operador_aritmetico -> DIV .)
    DOUBLE          reduce using rule 102 (operador_aritmetico -> DIV .)
    INT             reduce using rule 102 (operador_aritmetico -> DIV .)
    STRING          reduce using rule 102 (operador_aritmetico -> DIV .)
    FALSE           reduce using rule 102 (operador_aritmetico -> DIV .)
    TRUE            reduce using rule 102 (operador_aritmetico -> DIV .)


state 120

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (99) operador_aritmetico -> . SUMA
    (100) operador_aritmetico -> . RESTA
    (101) operador_aritmetico -> . MULT
    (102) operador_aritmetico -> . DIV

    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    MULT            shift and go to state 118
    DIV             shift and go to state 119

    operador_aritmetico            shift and go to state 156

state 121

    (97) op_aritmetica_extra -> op_aritmetica .

    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 122

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (8) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (105) vacio -> .
    (9) dominio -> . PRIVATE
    (10) dominio -> . PUBLIC
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 105 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 105 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    definicion_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    Niark                          shift and go to state 157
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 123

    (14) parametro -> NOMBRE . parametro_extra
    (15) parametro_extra -> . COMA NOMBRE parametro_extra
    (16) parametro_extra -> . vacio
    (105) vacio -> .

    COMA            shift and go to state 159
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_extra                shift and go to state 158
    vacio                          shift and go to state 160

state 124

    (8) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro . PARDER

    PARDER          shift and go to state 161


state 125

    (13) parametro -> vacio .

    PARDER          reduce using rule 13 (parametro -> vacio .)


state 126

    (80) condicion -> PARIZQ comparables . operador_condicional comparables condicion_extra PARDER condicion_extra
    (73) operador_condicional -> . DIFERENTE
    (74) operador_condicional -> . IGUAL
    (75) operador_condicional -> . MAYOR
    (76) operador_condicional -> . MAYORIGUAL
    (77) operador_condicional -> . MENOR
    (78) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 129
    IGUAL           shift and go to state 130
    MAYOR           shift and go to state 131
    MAYORIGUAL      shift and go to state 132
    MENOR           shift and go to state 133
    MENORIGUAL      shift and go to state 134

    operador_condicional           shift and go to state 162

state 127

    (42) condicion_if -> IF PARIZQ condicion PARDER . LLAVEIZQ NEWLINE instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 163


state 128

    (79) condicion -> comparables operador_condicional . comparables condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    comparables                    shift and go to state 164
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 129

    (73) operador_condicional -> DIFERENTE .

    NOMBRE          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    DOUBLE          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    INT             reduce using rule 73 (operador_condicional -> DIFERENTE .)
    STRING          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    FALSE           reduce using rule 73 (operador_condicional -> DIFERENTE .)
    TRUE            reduce using rule 73 (operador_condicional -> DIFERENTE .)
    PARIZQ          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    SUMA            reduce using rule 73 (operador_condicional -> DIFERENTE .)
    RESTA           reduce using rule 73 (operador_condicional -> DIFERENTE .)
    MULT            reduce using rule 73 (operador_condicional -> DIFERENTE .)
    DIV             reduce using rule 73 (operador_condicional -> DIFERENTE .)


state 130

    (74) operador_condicional -> IGUAL .

    NOMBRE          reduce using rule 74 (operador_condicional -> IGUAL .)
    DOUBLE          reduce using rule 74 (operador_condicional -> IGUAL .)
    INT             reduce using rule 74 (operador_condicional -> IGUAL .)
    STRING          reduce using rule 74 (operador_condicional -> IGUAL .)
    FALSE           reduce using rule 74 (operador_condicional -> IGUAL .)
    TRUE            reduce using rule 74 (operador_condicional -> IGUAL .)
    PARIZQ          reduce using rule 74 (operador_condicional -> IGUAL .)
    SUMA            reduce using rule 74 (operador_condicional -> IGUAL .)
    RESTA           reduce using rule 74 (operador_condicional -> IGUAL .)
    MULT            reduce using rule 74 (operador_condicional -> IGUAL .)
    DIV             reduce using rule 74 (operador_condicional -> IGUAL .)


state 131

    (75) operador_condicional -> MAYOR .

    NOMBRE          reduce using rule 75 (operador_condicional -> MAYOR .)
    DOUBLE          reduce using rule 75 (operador_condicional -> MAYOR .)
    INT             reduce using rule 75 (operador_condicional -> MAYOR .)
    STRING          reduce using rule 75 (operador_condicional -> MAYOR .)
    FALSE           reduce using rule 75 (operador_condicional -> MAYOR .)
    TRUE            reduce using rule 75 (operador_condicional -> MAYOR .)
    PARIZQ          reduce using rule 75 (operador_condicional -> MAYOR .)
    SUMA            reduce using rule 75 (operador_condicional -> MAYOR .)
    RESTA           reduce using rule 75 (operador_condicional -> MAYOR .)
    MULT            reduce using rule 75 (operador_condicional -> MAYOR .)
    DIV             reduce using rule 75 (operador_condicional -> MAYOR .)


state 132

    (76) operador_condicional -> MAYORIGUAL .

    NOMBRE          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    DOUBLE          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    INT             reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    STRING          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    FALSE           reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    TRUE            reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    PARIZQ          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    SUMA            reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    RESTA           reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    MULT            reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    DIV             reduce using rule 76 (operador_condicional -> MAYORIGUAL .)


state 133

    (77) operador_condicional -> MENOR .

    NOMBRE          reduce using rule 77 (operador_condicional -> MENOR .)
    DOUBLE          reduce using rule 77 (operador_condicional -> MENOR .)
    INT             reduce using rule 77 (operador_condicional -> MENOR .)
    STRING          reduce using rule 77 (operador_condicional -> MENOR .)
    FALSE           reduce using rule 77 (operador_condicional -> MENOR .)
    TRUE            reduce using rule 77 (operador_condicional -> MENOR .)
    PARIZQ          reduce using rule 77 (operador_condicional -> MENOR .)
    SUMA            reduce using rule 77 (operador_condicional -> MENOR .)
    RESTA           reduce using rule 77 (operador_condicional -> MENOR .)
    MULT            reduce using rule 77 (operador_condicional -> MENOR .)
    DIV             reduce using rule 77 (operador_condicional -> MENOR .)


state 134

    (78) operador_condicional -> MENORIGUAL .

    NOMBRE          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    DOUBLE          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    INT             reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    STRING          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    FALSE           reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    TRUE            reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    PARIZQ          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    SUMA            reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    RESTA           reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    MULT            reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    DIV             reduce using rule 78 (operador_condicional -> MENORIGUAL .)


state 135

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones . indentacion LLAVEDER
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 165
    vacio                          shift and go to state 48

state 136

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA . condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 86
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 166
    comparables                    shift and go to state 88
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 137

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER . LLAVEIZQ instrucciones indentacion LLAVEDER

    LLAVEIZQ        shift and go to state 167


state 138

    (53) imprimir -> PRINT PARIZQ tipo_variable PARDER .

    NEWLINE         reduce using rule 53 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)


state 139

    (54) leer -> READ PARIZQ NOMBRE PARDER .

    NEWLINE         reduce using rule 54 (leer -> READ PARIZQ NOMBRE PARDER .)


state 140

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable
    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .

  ! shift/reduce conflict for ASIGNACION resolved as shift
    ASIGNACION      shift and go to state 168

  ! ASIGNACION      [ reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .) ]


state 141

    (64) vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .

    ASIGNACION      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    NEWLINE         reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    SUMA            reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    RESTA           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MULT            reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    DIV             reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    DIFERENTE       reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    IGUAL           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MAYOR           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MAYORIGUAL      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MENOR           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MENORIGUAL      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    PARDER          reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    COMA            reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    PUNTOYCOMA      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    CORCHETEDER     reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    AND             reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    OR              reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)


state 142

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable
    (63) vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .

  ! shift/reduce conflict for ASIGNACION resolved as shift
    ASIGNACION      shift and go to state 169

  ! ASIGNACION      [ reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .) ]


state 143

    (17) llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .

    NEWLINE         reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    SUMA            reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    RESTA           reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MULT            reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIV             reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIFERENTE       reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    IGUAL           reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYOR           reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYORIGUAL      reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENOR           reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENORIGUAL      reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PARDER          reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    COMA            reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PUNTOYCOMA      reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    CORCHETEDER     reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    AND             reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    OR              reduce using rule 17 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)


state 144

    (18) llamado_funcion -> NOMBRE PARIZQ vacio PARDER .

    NEWLINE         reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    SUMA            reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    RESTA           reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MULT            reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    DIV             reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    DIFERENTE       reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    IGUAL           reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MAYOR           reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MAYORIGUAL      reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MENOR           reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MENORIGUAL      reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    PARDER          reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    COMA            reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    PUNTOYCOMA      reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    CORCHETEDER     reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    AND             reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    OR              reduce using rule 18 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)


state 145

    (19) parametro_llamado -> tipo_variable parametro_llamado_extra .

    PARDER          reduce using rule 19 (parametro_llamado -> tipo_variable parametro_llamado_extra .)


state 146

    (21) parametro_llamado_extra -> COMA . parametro_llamado
    (19) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (20) parametro_llamado -> . op_aritmetica parametro_llamado_extra
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    parametro_llamado              shift and go to state 170
    tipo_variable                  shift and go to state 105
    op_aritmetica                  shift and go to state 106
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 147

    (22) parametro_llamado_extra -> vacio .

    PARDER          reduce using rule 22 (parametro_llamado_extra -> vacio .)


state 148

    (20) parametro_llamado -> op_aritmetica parametro_llamado_extra .

    PARDER          reduce using rule 20 (parametro_llamado -> op_aritmetica parametro_llamado_extra .)


state 149

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .

    NEWLINE         reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)


state 150

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .

    NEWLINE         reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)


state 151

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER .

    NEWLINE         reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER .)


state 152

    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER
    (85) tipo_variable -> NOMBRE .
    (17) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    CORCHETEDER     shift and go to state 171
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 61
    CORCHETEIZQ     shift and go to state 114


state 153

    (63) vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER
    (87) tipo_variable -> INT .

    CORCHETEDER     shift and go to state 172
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)


state 154

    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    NEWLINE         reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    SUMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIFERENTE       reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    IGUAL           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    CORCHETEDER     reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    COMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    PARDER          reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    PUNTOYCOMA      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    AND             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    OR              reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 155

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (105) vacio -> .
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica_extra            shift and go to state 173
    tipo_variable                  shift and go to state 102
    op_aritmetica                  shift and go to state 121
    vacio                          shift and go to state 79
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 156

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    PARIZQ          shift and go to state 155
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74

    tipo_variable                  shift and go to state 174
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 157

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark .

    $end            reduce using rule 1 (Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER Niark .)


state 158

    (14) parametro -> NOMBRE parametro_extra .

    PARDER          reduce using rule 14 (parametro -> NOMBRE parametro_extra .)


state 159

    (15) parametro_extra -> COMA . NOMBRE parametro_extra

    NOMBRE          shift and go to state 175


state 160

    (16) parametro_extra -> vacio .

    PARDER          reduce using rule 16 (parametro_extra -> vacio .)


state 161

    (8) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .

    LLAVEIZQ        reduce using rule 8 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)


state 162

    (80) condicion -> PARIZQ comparables operador_condicional . comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    PARIZQ          shift and go to state 78
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    comparables                    shift and go to state 176
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 163

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ . NEWLINE instrucciones LLAVEDER

    NEWLINE         shift and go to state 177


state 164

    (79) condicion -> comparables operador_condicional comparables . condicion_extra
    (81) condicion_extra -> . operador_logico condicion
    (82) condicion_extra -> . vacio
    (103) operador_logico -> . AND
    (104) operador_logico -> . OR
    (105) vacio -> .

    AND             shift and go to state 181
    OR              shift and go to state 182
    PARDER          reduce using rule 105 (vacio -> .)
    PUNTOYCOMA      reduce using rule 105 (vacio -> .)

    condicion_extra                shift and go to state 178
    operador_logico                shift and go to state 179
    vacio                          shift and go to state 180

state 165

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 183


state 166

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion . PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PUNTOYCOMA      shift and go to state 184


state 167

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ . instrucciones indentacion LLAVEDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 185
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 83

state 168

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 78
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 186
    tipo_variable                  shift and go to state 187
    op_aritmetica_extra            shift and go to state 77
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    vacio                          shift and go to state 79

state 169

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 78
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 188
    tipo_variable                  shift and go to state 189
    op_aritmetica_extra            shift and go to state 77
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    vacio                          shift and go to state 79

state 170

    (21) parametro_llamado_extra -> COMA parametro_llamado .

    PARDER          reduce using rule 21 (parametro_llamado_extra -> COMA parametro_llamado .)


state 171

    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .

    NEWLINE         reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    SUMA            reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    RESTA           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MULT            reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    DIV             reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    DIFERENTE       reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    IGUAL           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MAYOR           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MAYORIGUAL      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MENOR           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MENORIGUAL      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    PARDER          reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    COMA            reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    PUNTOYCOMA      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    CORCHETEDER     reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    AND             reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    OR              reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)


state 172

    (63) vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .

    NEWLINE         reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    SUMA            reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    RESTA           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MULT            reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    DIV             reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    DIFERENTE       reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    IGUAL           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MAYOR           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MAYORIGUAL      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MENOR           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MENORIGUAL      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    PARDER          reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    COMA            reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    PUNTOYCOMA      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    CORCHETEDER     reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    AND             reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    OR              reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)


state 173

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (99) operador_aritmetico -> . SUMA
    (100) operador_aritmetico -> . RESTA
    (101) operador_aritmetico -> . MULT
    (102) operador_aritmetico -> . DIV

    SUMA            shift and go to state 116
    RESTA           shift and go to state 117
    MULT            shift and go to state 118
    DIV             shift and go to state 119

    operador_aritmetico            shift and go to state 190

state 174

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 191
    SUMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIFERENTE       reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    IGUAL           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 175

    (15) parametro_extra -> COMA NOMBRE . parametro_extra
    (15) parametro_extra -> . COMA NOMBRE parametro_extra
    (16) parametro_extra -> . vacio
    (105) vacio -> .

    COMA            shift and go to state 159
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_extra                shift and go to state 192
    vacio                          shift and go to state 160

state 176

    (80) condicion -> PARIZQ comparables operador_condicional comparables . condicion_extra PARDER condicion_extra
    (81) condicion_extra -> . operador_logico condicion
    (82) condicion_extra -> . vacio
    (103) operador_logico -> . AND
    (104) operador_logico -> . OR
    (105) vacio -> .

    AND             shift and go to state 181
    OR              shift and go to state 182
    PARDER          reduce using rule 105 (vacio -> .)

    condicion_extra                shift and go to state 193
    operador_logico                shift and go to state 179
    vacio                          shift and go to state 180

state 177

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE . instrucciones LLAVEDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

    instrucciones                  shift and go to state 194
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 83

state 178

    (79) condicion -> comparables operador_condicional comparables condicion_extra .

    PARDER          reduce using rule 79 (condicion -> comparables operador_condicional comparables condicion_extra .)
    PUNTOYCOMA      reduce using rule 79 (condicion -> comparables operador_condicional comparables condicion_extra .)


state 179

    (81) condicion_extra -> operador_logico . condicion
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 86
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 195
    comparables                    shift and go to state 88
    tipo_variable                  shift and go to state 89
    op_aritmetica                  shift and go to state 90
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76
    op_aritmetica_extra            shift and go to state 77
    vacio                          shift and go to state 79

state 180

    (82) condicion_extra -> vacio .

    PARDER          reduce using rule 82 (condicion_extra -> vacio .)
    PUNTOYCOMA      reduce using rule 82 (condicion_extra -> vacio .)


state 181

    (103) operador_logico -> AND .

    PARIZQ          reduce using rule 103 (operador_logico -> AND .)
    NOMBRE          reduce using rule 103 (operador_logico -> AND .)
    DOUBLE          reduce using rule 103 (operador_logico -> AND .)
    INT             reduce using rule 103 (operador_logico -> AND .)
    STRING          reduce using rule 103 (operador_logico -> AND .)
    FALSE           reduce using rule 103 (operador_logico -> AND .)
    TRUE            reduce using rule 103 (operador_logico -> AND .)
    SUMA            reduce using rule 103 (operador_logico -> AND .)
    RESTA           reduce using rule 103 (operador_logico -> AND .)
    MULT            reduce using rule 103 (operador_logico -> AND .)
    DIV             reduce using rule 103 (operador_logico -> AND .)


state 182

    (104) operador_logico -> OR .

    PARIZQ          reduce using rule 104 (operador_logico -> OR .)
    NOMBRE          reduce using rule 104 (operador_logico -> OR .)
    DOUBLE          reduce using rule 104 (operador_logico -> OR .)
    INT             reduce using rule 104 (operador_logico -> OR .)
    STRING          reduce using rule 104 (operador_logico -> OR .)
    FALSE           reduce using rule 104 (operador_logico -> OR .)
    TRUE            reduce using rule 104 (operador_logico -> OR .)
    SUMA            reduce using rule 104 (operador_logico -> OR .)
    RESTA           reduce using rule 104 (operador_logico -> OR .)
    MULT            reduce using rule 104 (operador_logico -> OR .)
    DIV             reduce using rule 104 (operador_logico -> OR .)


state 183

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .

    NEWLINE         reduce using rule 43 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)


state 184

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA . incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (46) incdec -> . pre_incdec
    (47) incdec -> . post_incdec
    (48) pre_incdec -> . INCREMENTAR NOMBRE
    (49) pre_incdec -> . DECREMENTAR NOMBRE
    (50) post_incdec -> . NOMBRE INCREMENTAR
    (51) post_incdec -> . NOMBRE DECREMENTAR

    INCREMENTAR     shift and go to state 45
    DECREMENTAR     shift and go to state 46
    NOMBRE          shift and go to state 197

    incdec                         shift and go to state 196
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39

state 185

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ instrucciones . indentacion LLAVEDER
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 198
    vacio                          shift and go to state 48

state 186

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    NEWLINE         reduce using rule 67 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 187

    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    NEWLINE         reduce using rule 69 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 188

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    NEWLINE         reduce using rule 68 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 189

    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    NEWLINE         reduce using rule 70 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 190

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (17) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (18) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    PARIZQ          shift and go to state 155
    NOMBRE          shift and go to state 69
    DOUBLE          shift and go to state 70
    INT             shift and go to state 71
    STRING          shift and go to state 72
    FALSE           shift and go to state 73
    TRUE            shift and go to state 74

    tipo_variable                  shift and go to state 199
    llamado_funcion                shift and go to state 75
    vector                         shift and go to state 76

state 191

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    NEWLINE         reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIFERENTE       reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    IGUAL           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYOR           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYORIGUAL      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENOR           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENORIGUAL      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    CORCHETEDER     reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    COMA            reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PARDER          reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PUNTOYCOMA      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    AND             reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    OR              reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 192

    (15) parametro_extra -> COMA NOMBRE parametro_extra .

    PARDER          reduce using rule 15 (parametro_extra -> COMA NOMBRE parametro_extra .)


state 193

    (80) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra . PARDER condicion_extra

    PARDER          shift and go to state 200


state 194

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones . LLAVEDER

    LLAVEDER        shift and go to state 201


state 195

    (81) condicion_extra -> operador_logico condicion .

    PARDER          reduce using rule 81 (condicion_extra -> operador_logico condicion .)
    PUNTOYCOMA      reduce using rule 81 (condicion_extra -> operador_logico condicion .)


state 196

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec . PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PARDER          shift and go to state 202


state 197

    (50) post_incdec -> NOMBRE . INCREMENTAR
    (51) post_incdec -> NOMBRE . DECREMENTAR

    INCREMENTAR     shift and go to state 62
    DECREMENTAR     shift and go to state 63


state 198

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 203


state 199

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 204
    SUMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 200

    (80) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER . condicion_extra
    (81) condicion_extra -> . operador_logico condicion
    (82) condicion_extra -> . vacio
    (103) operador_logico -> . AND
    (104) operador_logico -> . OR
    (105) vacio -> .

    AND             shift and go to state 181
    OR              shift and go to state 182
    PARDER          reduce using rule 105 (vacio -> .)
    PUNTOYCOMA      reduce using rule 105 (vacio -> .)

    condicion_extra                shift and go to state 205
    operador_logico                shift and go to state 179
    vacio                          shift and go to state 180

state 201

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER .

    NEWLINE         reduce using rule 42 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER .)


state 202

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER . LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    LLAVEIZQ        shift and go to state 206


state 203

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ instrucciones indentacion LLAVEDER .

    NEWLINE         reduce using rule 52 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ instrucciones indentacion LLAVEDER .)


state 204

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    NEWLINE         reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIFERENTE       reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    IGUAL           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYOR           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYORIGUAL      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENOR           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENORIGUAL      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    CORCHETEDER     reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    COMA            reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PARDER          reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PUNTOYCOMA      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    AND             reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    OR              reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 205

    (80) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .

    PARDER          reduce using rule 80 (condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .)
    PUNTOYCOMA      reduce using rule 80 (condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .)


state 206

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ . NEWLINE instrucciones indentacion LLAVEDER

    NEWLINE         shift and go to state 207


state 207

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE . instrucciones indentacion LLAVEDER
    (40) instrucciones -> . indentacion instruccion NEWLINE instrucciones
    (41) instrucciones -> . vacio
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 208
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 83

state 208

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones . indentacion LLAVEDER
    (6) indentacion -> . TABULACION indentacion
    (7) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 209
    vacio                          shift and go to state 48

state 209

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 210


state 210

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .

    NEWLINE         reduce using rule 45 (ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRIVATE in state 0 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 0 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 0 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 3 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 3 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 3 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 51 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 91 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 122 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 122 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 122 resolved as shift
WARNING: shift/reduce conflict for ASIGNACION in state 140 resolved as shift
WARNING: shift/reduce conflict for ASIGNACION in state 142 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 167 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 207 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (Niark -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 4
WARNING: reduce/reduce conflict in state 4 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 4
WARNING: reduce/reduce conflict in state 83 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 83
