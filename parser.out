Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    IMPORT
    SWITCH

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
Rule 2     Niark -> instrucciones Niark
Rule 3     Niark -> vacio
Rule 4     indentacion -> TABULACION indentacion
Rule 5     indentacion -> vacio
Rule 6     definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER
Rule 7     dominio -> PRIVATE
Rule 8     dominio -> PUBLIC
Rule 9     tipo_return -> VOID
Rule 10    tipo_return -> FUNCTION
Rule 11    parametro -> vacio
Rule 12    parametro -> NOMBRE parametro_extra
Rule 13    parametro_extra -> COMA NOMBRE parametro_extra
Rule 14    parametro_extra -> vacio
Rule 15    llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER
Rule 16    llamado_funcion -> NOMBRE PARIZQ vacio PARDER
Rule 17    parametro_llamado -> tipo_variable parametro_llamado_extra
Rule 18    parametro_llamado -> op_aritmetica parametro_llamado_extra
Rule 19    parametro_llamado_extra -> COMA parametro_llamado
Rule 20    parametro_llamado_extra -> vacio
Rule 21    instruccion -> condicion_if comentario NEWLINE
Rule 22    instruccion -> condicion_else comentario NEWLINE
Rule 23    instruccion -> ciclo_for comentario NEWLINE
Rule 24    instruccion -> ciclo_while comentario NEWLINE
Rule 25    instruccion -> imprimir comentario NEWLINE
Rule 26    instruccion -> leer comentario NEWLINE
Rule 27    instruccion -> incdec comentario NEWLINE
Rule 28    instruccion -> dec_variable comentario NEWLINE
Rule 29    instruccion -> dec_vector comentario NEWLINE
Rule 30    instruccion -> usar_vector comentario NEWLINE
Rule 31    instruccion -> asigna comentario NEWLINE
Rule 32    instruccion -> asignacion_vector comentario NEWLINE
Rule 33    instruccion -> llamado_funcion comentario NEWLINE
Rule 34    instruccion -> retorno comentario NEWLINE
Rule 35    instruccion -> comentario NEWLINE
Rule 36    comentario -> COMENTARIO
Rule 37    comentario -> vacio
Rule 38    instrucciones -> indentacion instruccion concat_instruccion
Rule 39    instrucciones -> vacio
Rule 40    concat_instruccion -> indentacion instruccion concat_instruccion
Rule 41    concat_instruccion -> vacio
Rule 42    condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
Rule 43    condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
Rule 44    condicion_else -> ELSE condicion_if
Rule 45    ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 46    incdec -> pre_incdec
Rule 47    incdec -> post_incdec
Rule 48    pre_incdec -> INCREMENTAR NOMBRE
Rule 49    pre_incdec -> DECREMENTAR NOMBRE
Rule 50    post_incdec -> NOMBRE INCREMENTAR
Rule 51    post_incdec -> NOMBRE DECREMENTAR
Rule 52    ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ
Rule 53    imprimir -> PRINT PARIZQ tipo_variable PARDER
Rule 54    leer -> READ PARIZQ NOMBRE PARDER
Rule 55    dec_variable -> DECVARIABLE ASIGNACION op_aritmetica
Rule 56    dec_variable -> DECVARIABLE ASIGNACION tipo_variable
Rule 57    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
Rule 58    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER
Rule 59    dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER
Rule 60    usar_vector -> vector ASIGNACION op_aritmetica
Rule 61    usar_vector -> vector ASIGNACION tipo_variable
Rule 62    vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
Rule 63    vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER
Rule 64    vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
Rule 65    asigna -> NOMBRE ASIGNACION op_aritmetica
Rule 66    asigna -> NOMBRE ASIGNACION tipo_variable
Rule 67    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 68    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 69    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 70    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 71    retorno -> RETURN tipo_variable
Rule 72    retorno -> RETURN op_aritmetica
Rule 73    operador_condicional -> DIFERENTE
Rule 74    operador_condicional -> IGUAL
Rule 75    operador_condicional -> MAYOR
Rule 76    operador_condicional -> MAYORIGUAL
Rule 77    operador_condicional -> MENOR
Rule 78    operador_condicional -> MENORIGUAL
Rule 79    condicion -> comparables operador_condicional comparables condicion_extra
Rule 80    condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
Rule 81    condicion_extra -> operador_logico condicion
Rule 82    condicion_extra -> vacio
Rule 83    comparables -> tipo_variable
Rule 84    comparables -> op_aritmetica
Rule 85    tipo_variable -> NOMBRE
Rule 86    tipo_variable -> DOUBLE
Rule 87    tipo_variable -> INT
Rule 88    tipo_variable -> STRING
Rule 89    tipo_variable -> FALSE
Rule 90    tipo_variable -> TRUE
Rule 91    tipo_variable -> llamado_funcion
Rule 92    tipo_variable -> vector
Rule 93    op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable
Rule 94    op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 95    op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 96    op_aritmetica_extra -> tipo_variable
Rule 97    op_aritmetica_extra -> op_aritmetica
Rule 98    op_aritmetica_extra -> vacio
Rule 99    operador_aritmetico -> SUMA
Rule 100   operador_aritmetico -> RESTA
Rule 101   operador_aritmetico -> MULT
Rule 102   operador_aritmetico -> DIV
Rule 103   operador_logico -> AND
Rule 104   operador_logico -> OR
Rule 105   vacio -> <empty>

Terminals, with rules where they appear

AND                  : 103
ASIGNACION           : 55 56 60 61 65 66 67 68 69 70
BREAK                : 
CASE                 : 
COMA                 : 13 19
COMENTARIO           : 36
CORCHETEDER          : 57 58 59 62 63 64 67 68 69 70
CORCHETEIZQ          : 57 58 59 62 63 64 67 68 69 70
DECREMENTAR          : 49 51
DECVARIABLE          : 55 56 57 58 59
DIFERENTE            : 73
DIV                  : 102
DOUBLE               : 86
ELSE                 : 43 44
FALSE                : 89
FOR                  : 45
FUNCTION             : 10
IF                   : 42
IGUAL                : 74
IMPORT               : 
INCREMENTAR          : 48 50
INT                  : 58 63 68 70 87
LLAVEDER             : 1 42 43 45
LLAVEIZQ             : 1 42 43 45 52
MAYOR                : 75
MAYORIGUAL           : 76
MENOR                : 77
MENORIGUAL           : 78
MULT                 : 101
NEWLINE              : 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 42 43
NOMBRE               : 6 12 13 15 16 48 49 50 51 54 57 62 62 63 64 65 66 67 67 68 69 69 70 85
OR                   : 104
PARDER               : 6 15 16 42 45 52 53 54 80 94 95
PARIZQ               : 6 15 16 42 45 52 53 54 80 94 95
PRINT                : 53
PRIVATE              : 7
PUBLIC               : 8
PUNTOYCOMA           : 45 45
READ                 : 54
RESTA                : 100
RETURN               : 71 72
STRING               : 88
SUMA                 : 99
SWITCH               : 
TABULACION           : 4
TRUE                 : 90
VOID                 : 9
WHILE                : 52
error                : 

Nonterminals, with rules where they appear

Niark                : 1 2 0
asigna               : 31
asignacion_vector    : 32
ciclo_for            : 23
ciclo_while          : 24
comentario           : 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
comparables          : 79 79 80 80
concat_instruccion   : 38 40
condicion            : 42 45 52 81
condicion_else       : 22
condicion_extra      : 79 80 80
condicion_if         : 21 44
dec_variable         : 28 45
dec_vector           : 29
definicion_funcion   : 1
dominio              : 6
imprimir             : 25
incdec               : 27 45
indentacion          : 4 38 40 42 43
instruccion          : 38 40
instrucciones        : 1 2 42 43 45
leer                 : 26
llamado_funcion      : 33 91
op_aritmetica        : 18 55 59 60 64 65 67 68 72 84 97
op_aritmetica_extra  : 93 94 94 95
operador_aritmetico  : 93 94 94 95
operador_condicional : 79 80
operador_logico      : 81
parametro            : 6
parametro_extra      : 12 13
parametro_llamado    : 15 19
parametro_llamado_extra : 17 18
post_incdec          : 47
pre_incdec           : 46
retorno              : 34
tipo_return          : 6
tipo_variable        : 17 53 56 61 66 69 70 71 83 93 94 95 96
usar_vector          : 30
vacio                : 3 5 11 14 16 20 37 39 41 82 98
vector               : 60 61 92

Parsing method: LALR

state 0

    (0) S' -> . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (6) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (105) vacio -> .
    (7) dominio -> . PRIVATE
    (8) dominio -> . PUBLIC
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 105 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 105 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    Niark                          shift and go to state 1
    definicion_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 1

    (0) S' -> Niark .



state 2

    (1) Niark -> definicion_funcion . LLAVEIZQ instrucciones LLAVEDER Niark

    LLAVEIZQ        shift and go to state 10


state 3

    (2) Niark -> instrucciones . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (6) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (105) vacio -> .
    (7) dominio -> . PRIVATE
    (8) dominio -> . PUBLIC
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 105 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 105 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 3
    Niark                          shift and go to state 11
    definicion_funcion             shift and go to state 2
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 4

    (3) Niark -> vacio .
    (39) instrucciones -> vacio .
    (5) indentacion -> vacio .

  ! reduce/reduce conflict for $end resolved using rule 3 (Niark -> vacio .)
  ! reduce/reduce conflict for IF resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECVARIABLE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NOMBRE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for INCREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 5 (indentacion -> vacio .)
    $end            reduce using rule 3 (Niark -> vacio .)
    PRIVATE         reduce using rule 39 (instrucciones -> vacio .)
    PUBLIC          reduce using rule 39 (instrucciones -> vacio .)
    TABULACION      reduce using rule 39 (instrucciones -> vacio .)
    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)

  ! IF              [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! ELSE            [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! FOR             [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! WHILE           [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! PRINT           [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! READ            [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! DECVARIABLE     [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! NOMBRE          [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! RETURN          [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! COMENTARIO      [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! INCREMENTAR     [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! DECREMENTAR     [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! NEWLINE         [ reduce using rule 39 (instrucciones -> vacio .) ]
  ! $end            [ reduce using rule 39 (instrucciones -> vacio .) ]


state 5

    (6) definicion_funcion -> dominio . tipo_return NOMBRE PARIZQ parametro PARDER
    (9) tipo_return -> . VOID
    (10) tipo_return -> . FUNCTION

    VOID            shift and go to state 13
    FUNCTION        shift and go to state 14

    tipo_return                    shift and go to state 12

state 6

    (38) instrucciones -> indentacion . instruccion concat_instruccion
    (21) instruccion -> . condicion_if comentario NEWLINE
    (22) instruccion -> . condicion_else comentario NEWLINE
    (23) instruccion -> . ciclo_for comentario NEWLINE
    (24) instruccion -> . ciclo_while comentario NEWLINE
    (25) instruccion -> . imprimir comentario NEWLINE
    (26) instruccion -> . leer comentario NEWLINE
    (27) instruccion -> . incdec comentario NEWLINE
    (28) instruccion -> . dec_variable comentario NEWLINE
    (29) instruccion -> . dec_vector comentario NEWLINE
    (30) instruccion -> . usar_vector comentario NEWLINE
    (31) instruccion -> . asigna comentario NEWLINE
    (32) instruccion -> . asignacion_vector comentario NEWLINE
    (33) instruccion -> . llamado_funcion comentario NEWLINE
    (34) instruccion -> . retorno comentario NEWLINE
    (35) instruccion -> . comentario NEWLINE
    (42) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (43) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (44) condicion_else -> . ELSE condicion_if
    (45) ciclo_for -> . FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (52) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ
    (53) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (54) leer -> . READ PARIZQ NOMBRE PARDER
    (46) incdec -> . pre_incdec
    (47) incdec -> . post_incdec
    (55) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (56) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER
    (60) usar_vector -> . vector ASIGNACION op_aritmetica
    (61) usar_vector -> . vector ASIGNACION tipo_variable
    (65) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (66) asigna -> . NOMBRE ASIGNACION tipo_variable
    (67) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (71) retorno -> . RETURN tipo_variable
    (72) retorno -> . RETURN op_aritmetica
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (48) pre_incdec -> . INCREMENTAR NOMBRE
    (49) pre_incdec -> . DECREMENTAR NOMBRE
    (50) post_incdec -> . NOMBRE INCREMENTAR
    (51) post_incdec -> . NOMBRE DECREMENTAR
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    IF              shift and go to state 31
    ELSE            shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    PRINT           shift and go to state 35
    READ            shift and go to state 36
    DECVARIABLE     shift and go to state 40
    NOMBRE          shift and go to state 37
    RETURN          shift and go to state 43
    COMENTARIO      shift and go to state 44
    INCREMENTAR     shift and go to state 45
    DECREMENTAR     shift and go to state 46
    NEWLINE         reduce using rule 105 (vacio -> .)

    instruccion                    shift and go to state 15
    condicion_if                   shift and go to state 16
    comentario                     shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    usar_vector                    shift and go to state 26
    asigna                         shift and go to state 27
    asignacion_vector              shift and go to state 28
    llamado_funcion                shift and go to state 29
    retorno                        shift and go to state 30
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39
    vector                         shift and go to state 41
    vacio                          shift and go to state 42

state 7

    (7) dominio -> PRIVATE .

    VOID            reduce using rule 7 (dominio -> PRIVATE .)
    FUNCTION        reduce using rule 7 (dominio -> PRIVATE .)


state 8

    (8) dominio -> PUBLIC .

    VOID            reduce using rule 8 (dominio -> PUBLIC .)
    FUNCTION        reduce using rule 8 (dominio -> PUBLIC .)


state 9

    (4) indentacion -> TABULACION . indentacion
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 47
    vacio                          shift and go to state 48

state 10

    (1) Niark -> definicion_funcion LLAVEIZQ . instrucciones LLAVEDER Niark
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

    instrucciones                  shift and go to state 49
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 50

state 11

    (2) Niark -> instrucciones Niark .

    $end            reduce using rule 2 (Niark -> instrucciones Niark .)


state 12

    (6) definicion_funcion -> dominio tipo_return . NOMBRE PARIZQ parametro PARDER

    NOMBRE          shift and go to state 51


state 13

    (9) tipo_return -> VOID .

    NOMBRE          reduce using rule 9 (tipo_return -> VOID .)


state 14

    (10) tipo_return -> FUNCTION .

    NOMBRE          reduce using rule 10 (tipo_return -> FUNCTION .)


state 15

    (38) instrucciones -> indentacion instruccion . concat_instruccion
    (40) concat_instruccion -> . indentacion instruccion concat_instruccion
    (41) concat_instruccion -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    PRIVATE         reduce using rule 105 (vacio -> .)
    PUBLIC          reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    $end            reduce using rule 105 (vacio -> .)
    LLAVEDER        reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    indentacion                    shift and go to state 52
    concat_instruccion             shift and go to state 53
    vacio                          shift and go to state 54

state 16

    (21) instruccion -> condicion_if . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 55
    vacio                          shift and go to state 42

state 17

    (35) instruccion -> comentario . NEWLINE

    NEWLINE         shift and go to state 56


state 18

    (22) instruccion -> condicion_else . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 57
    vacio                          shift and go to state 42

state 19

    (23) instruccion -> ciclo_for . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 58
    vacio                          shift and go to state 42

state 20

    (24) instruccion -> ciclo_while . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 59
    vacio                          shift and go to state 42

state 21

    (25) instruccion -> imprimir . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 60
    vacio                          shift and go to state 42

state 22

    (26) instruccion -> leer . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 61
    vacio                          shift and go to state 42

state 23

    (27) instruccion -> incdec . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 62
    vacio                          shift and go to state 42

state 24

    (28) instruccion -> dec_variable . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 63
    vacio                          shift and go to state 42

state 25

    (29) instruccion -> dec_vector . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 64
    vacio                          shift and go to state 42

state 26

    (30) instruccion -> usar_vector . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 65
    vacio                          shift and go to state 42

state 27

    (31) instruccion -> asigna . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 66
    vacio                          shift and go to state 42

state 28

    (32) instruccion -> asignacion_vector . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 67
    vacio                          shift and go to state 42

state 29

    (33) instruccion -> llamado_funcion . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 68
    vacio                          shift and go to state 42

state 30

    (34) instruccion -> retorno . comentario NEWLINE
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (105) vacio -> .

    COMENTARIO      shift and go to state 44
    NEWLINE         reduce using rule 105 (vacio -> .)

    comentario                     shift and go to state 69
    vacio                          shift and go to state 42

state 31

    (42) condicion_if -> IF . PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PARIZQ          shift and go to state 70


state 32

    (43) condicion_else -> ELSE . LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (44) condicion_else -> ELSE . condicion_if
    (42) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    LLAVEIZQ        shift and go to state 71
    IF              shift and go to state 31

    condicion_if                   shift and go to state 72

state 33

    (45) ciclo_for -> FOR . PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 73


state 34

    (52) ciclo_while -> WHILE . PARIZQ condicion PARDER LLAVEIZQ

    PARIZQ          shift and go to state 74


state 35

    (53) imprimir -> PRINT . PARIZQ tipo_variable PARDER

    PARIZQ          shift and go to state 75


state 36

    (54) leer -> READ . PARIZQ NOMBRE PARDER

    PARIZQ          shift and go to state 76


state 37

    (65) asigna -> NOMBRE . ASIGNACION op_aritmetica
    (66) asigna -> NOMBRE . ASIGNACION tipo_variable
    (67) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (50) post_incdec -> NOMBRE . INCREMENTAR
    (51) post_incdec -> NOMBRE . DECREMENTAR
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    ASIGNACION      shift and go to state 77
    CORCHETEIZQ     shift and go to state 78
    PARIZQ          shift and go to state 79
    INCREMENTAR     shift and go to state 80
    DECREMENTAR     shift and go to state 81


state 38

    (46) incdec -> pre_incdec .

    COMENTARIO      reduce using rule 46 (incdec -> pre_incdec .)
    NEWLINE         reduce using rule 46 (incdec -> pre_incdec .)
    PARDER          reduce using rule 46 (incdec -> pre_incdec .)


state 39

    (47) incdec -> post_incdec .

    COMENTARIO      reduce using rule 47 (incdec -> post_incdec .)
    NEWLINE         reduce using rule 47 (incdec -> post_incdec .)
    PARDER          reduce using rule 47 (incdec -> post_incdec .)


state 40

    (55) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (56) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable
    (57) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER
    (58) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER
    (59) dec_vector -> DECVARIABLE . CORCHETEIZQ op_aritmetica CORCHETEDER

    ASIGNACION      shift and go to state 82
    CORCHETEIZQ     shift and go to state 83


state 41

    (60) usar_vector -> vector . ASIGNACION op_aritmetica
    (61) usar_vector -> vector . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 84


state 42

    (37) comentario -> vacio .

    NEWLINE         reduce using rule 37 (comentario -> vacio .)


state 43

    (71) retorno -> RETURN . tipo_variable
    (72) retorno -> RETURN . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    tipo_variable                  shift and go to state 85
    op_aritmetica                  shift and go to state 86
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 44

    (36) comentario -> COMENTARIO .

    NEWLINE         reduce using rule 36 (comentario -> COMENTARIO .)


state 45

    (48) pre_incdec -> INCREMENTAR . NOMBRE

    NOMBRE          shift and go to state 98


state 46

    (49) pre_incdec -> DECREMENTAR . NOMBRE

    NOMBRE          shift and go to state 99


state 47

    (4) indentacion -> TABULACION indentacion .

    IF              reduce using rule 4 (indentacion -> TABULACION indentacion .)
    ELSE            reduce using rule 4 (indentacion -> TABULACION indentacion .)
    FOR             reduce using rule 4 (indentacion -> TABULACION indentacion .)
    WHILE           reduce using rule 4 (indentacion -> TABULACION indentacion .)
    PRINT           reduce using rule 4 (indentacion -> TABULACION indentacion .)
    READ            reduce using rule 4 (indentacion -> TABULACION indentacion .)
    DECVARIABLE     reduce using rule 4 (indentacion -> TABULACION indentacion .)
    NOMBRE          reduce using rule 4 (indentacion -> TABULACION indentacion .)
    RETURN          reduce using rule 4 (indentacion -> TABULACION indentacion .)
    COMENTARIO      reduce using rule 4 (indentacion -> TABULACION indentacion .)
    INCREMENTAR     reduce using rule 4 (indentacion -> TABULACION indentacion .)
    DECREMENTAR     reduce using rule 4 (indentacion -> TABULACION indentacion .)
    NEWLINE         reduce using rule 4 (indentacion -> TABULACION indentacion .)
    LLAVEDER        reduce using rule 4 (indentacion -> TABULACION indentacion .)


state 48

    (5) indentacion -> vacio .

    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)
    LLAVEDER        reduce using rule 5 (indentacion -> vacio .)


state 49

    (1) Niark -> definicion_funcion LLAVEIZQ instrucciones . LLAVEDER Niark

    LLAVEDER        shift and go to state 100


state 50

    (39) instrucciones -> vacio .
    (5) indentacion -> vacio .

    LLAVEDER        reduce using rule 39 (instrucciones -> vacio .)
    TABULACION      reduce using rule 39 (instrucciones -> vacio .)
    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)


state 51

    (6) definicion_funcion -> dominio tipo_return NOMBRE . PARIZQ parametro PARDER

    PARIZQ          shift and go to state 101


state 52

    (40) concat_instruccion -> indentacion . instruccion concat_instruccion
    (21) instruccion -> . condicion_if comentario NEWLINE
    (22) instruccion -> . condicion_else comentario NEWLINE
    (23) instruccion -> . ciclo_for comentario NEWLINE
    (24) instruccion -> . ciclo_while comentario NEWLINE
    (25) instruccion -> . imprimir comentario NEWLINE
    (26) instruccion -> . leer comentario NEWLINE
    (27) instruccion -> . incdec comentario NEWLINE
    (28) instruccion -> . dec_variable comentario NEWLINE
    (29) instruccion -> . dec_vector comentario NEWLINE
    (30) instruccion -> . usar_vector comentario NEWLINE
    (31) instruccion -> . asigna comentario NEWLINE
    (32) instruccion -> . asignacion_vector comentario NEWLINE
    (33) instruccion -> . llamado_funcion comentario NEWLINE
    (34) instruccion -> . retorno comentario NEWLINE
    (35) instruccion -> . comentario NEWLINE
    (42) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (43) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (44) condicion_else -> . ELSE condicion_if
    (45) ciclo_for -> . FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (52) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ
    (53) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (54) leer -> . READ PARIZQ NOMBRE PARDER
    (46) incdec -> . pre_incdec
    (47) incdec -> . post_incdec
    (55) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (56) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER
    (60) usar_vector -> . vector ASIGNACION op_aritmetica
    (61) usar_vector -> . vector ASIGNACION tipo_variable
    (65) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (66) asigna -> . NOMBRE ASIGNACION tipo_variable
    (67) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (71) retorno -> . RETURN tipo_variable
    (72) retorno -> . RETURN op_aritmetica
    (36) comentario -> . COMENTARIO
    (37) comentario -> . vacio
    (48) pre_incdec -> . INCREMENTAR NOMBRE
    (49) pre_incdec -> . DECREMENTAR NOMBRE
    (50) post_incdec -> . NOMBRE INCREMENTAR
    (51) post_incdec -> . NOMBRE DECREMENTAR
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    IF              shift and go to state 31
    ELSE            shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34
    PRINT           shift and go to state 35
    READ            shift and go to state 36
    DECVARIABLE     shift and go to state 40
    NOMBRE          shift and go to state 37
    RETURN          shift and go to state 43
    COMENTARIO      shift and go to state 44
    INCREMENTAR     shift and go to state 45
    DECREMENTAR     shift and go to state 46
    NEWLINE         reduce using rule 105 (vacio -> .)

    instruccion                    shift and go to state 102
    condicion_if                   shift and go to state 16
    comentario                     shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    usar_vector                    shift and go to state 26
    asigna                         shift and go to state 27
    asignacion_vector              shift and go to state 28
    llamado_funcion                shift and go to state 29
    retorno                        shift and go to state 30
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39
    vector                         shift and go to state 41
    vacio                          shift and go to state 42

state 53

    (38) instrucciones -> indentacion instruccion concat_instruccion .

    PRIVATE         reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    PUBLIC          reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    TABULACION      reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    IF              reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    ELSE            reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    FOR             reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    WHILE           reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    PRINT           reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    READ            reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    DECVARIABLE     reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    NOMBRE          reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    RETURN          reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    COMENTARIO      reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    INCREMENTAR     reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    DECREMENTAR     reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    $end            reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)
    LLAVEDER        reduce using rule 38 (instrucciones -> indentacion instruccion concat_instruccion .)


state 54

    (41) concat_instruccion -> vacio .
    (5) indentacion -> vacio .

  ! reduce/reduce conflict for IF resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECVARIABLE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NOMBRE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for INCREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 5 (indentacion -> vacio .)
    PRIVATE         reduce using rule 41 (concat_instruccion -> vacio .)
    PUBLIC          reduce using rule 41 (concat_instruccion -> vacio .)
    TABULACION      reduce using rule 41 (concat_instruccion -> vacio .)
    $end            reduce using rule 41 (concat_instruccion -> vacio .)
    LLAVEDER        reduce using rule 41 (concat_instruccion -> vacio .)
    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)

  ! IF              [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! ELSE            [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! FOR             [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! WHILE           [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! PRINT           [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! READ            [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! DECVARIABLE     [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! NOMBRE          [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! RETURN          [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! COMENTARIO      [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! INCREMENTAR     [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! DECREMENTAR     [ reduce using rule 41 (concat_instruccion -> vacio .) ]
  ! NEWLINE         [ reduce using rule 41 (concat_instruccion -> vacio .) ]


state 55

    (21) instruccion -> condicion_if comentario . NEWLINE

    NEWLINE         shift and go to state 103


state 56

    (35) instruccion -> comentario NEWLINE .

    TABULACION      reduce using rule 35 (instruccion -> comentario NEWLINE .)
    IF              reduce using rule 35 (instruccion -> comentario NEWLINE .)
    ELSE            reduce using rule 35 (instruccion -> comentario NEWLINE .)
    FOR             reduce using rule 35 (instruccion -> comentario NEWLINE .)
    WHILE           reduce using rule 35 (instruccion -> comentario NEWLINE .)
    PRINT           reduce using rule 35 (instruccion -> comentario NEWLINE .)
    READ            reduce using rule 35 (instruccion -> comentario NEWLINE .)
    DECVARIABLE     reduce using rule 35 (instruccion -> comentario NEWLINE .)
    NOMBRE          reduce using rule 35 (instruccion -> comentario NEWLINE .)
    RETURN          reduce using rule 35 (instruccion -> comentario NEWLINE .)
    COMENTARIO      reduce using rule 35 (instruccion -> comentario NEWLINE .)
    INCREMENTAR     reduce using rule 35 (instruccion -> comentario NEWLINE .)
    DECREMENTAR     reduce using rule 35 (instruccion -> comentario NEWLINE .)
    NEWLINE         reduce using rule 35 (instruccion -> comentario NEWLINE .)
    PRIVATE         reduce using rule 35 (instruccion -> comentario NEWLINE .)
    PUBLIC          reduce using rule 35 (instruccion -> comentario NEWLINE .)
    $end            reduce using rule 35 (instruccion -> comentario NEWLINE .)
    LLAVEDER        reduce using rule 35 (instruccion -> comentario NEWLINE .)


state 57

    (22) instruccion -> condicion_else comentario . NEWLINE

    NEWLINE         shift and go to state 104


state 58

    (23) instruccion -> ciclo_for comentario . NEWLINE

    NEWLINE         shift and go to state 105


state 59

    (24) instruccion -> ciclo_while comentario . NEWLINE

    NEWLINE         shift and go to state 106


state 60

    (25) instruccion -> imprimir comentario . NEWLINE

    NEWLINE         shift and go to state 107


state 61

    (26) instruccion -> leer comentario . NEWLINE

    NEWLINE         shift and go to state 108


state 62

    (27) instruccion -> incdec comentario . NEWLINE

    NEWLINE         shift and go to state 109


state 63

    (28) instruccion -> dec_variable comentario . NEWLINE

    NEWLINE         shift and go to state 110


state 64

    (29) instruccion -> dec_vector comentario . NEWLINE

    NEWLINE         shift and go to state 111


state 65

    (30) instruccion -> usar_vector comentario . NEWLINE

    NEWLINE         shift and go to state 112


state 66

    (31) instruccion -> asigna comentario . NEWLINE

    NEWLINE         shift and go to state 113


state 67

    (32) instruccion -> asignacion_vector comentario . NEWLINE

    NEWLINE         shift and go to state 114


state 68

    (33) instruccion -> llamado_funcion comentario . NEWLINE

    NEWLINE         shift and go to state 115


state 69

    (34) instruccion -> retorno comentario . NEWLINE

    NEWLINE         shift and go to state 116


state 70

    (42) condicion_if -> IF PARIZQ . condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 117
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 118
    comparables                    shift and go to state 119
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 71

    (43) condicion_else -> ELSE LLAVEIZQ . NEWLINE instrucciones indentacion LLAVEDER

    NEWLINE         shift and go to state 122


state 72

    (44) condicion_else -> ELSE condicion_if .

    COMENTARIO      reduce using rule 44 (condicion_else -> ELSE condicion_if .)
    NEWLINE         reduce using rule 44 (condicion_else -> ELSE condicion_if .)


state 73

    (45) ciclo_for -> FOR PARIZQ . dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (55) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (56) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable

    DECVARIABLE     shift and go to state 124

    dec_variable                   shift and go to state 123

state 74

    (52) ciclo_while -> WHILE PARIZQ . condicion PARDER LLAVEIZQ
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 117
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 125
    comparables                    shift and go to state 119
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 75

    (53) imprimir -> PRINT PARIZQ . tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92

    tipo_variable                  shift and go to state 126
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 76

    (54) leer -> READ PARIZQ . NOMBRE PARDER

    NOMBRE          shift and go to state 127


state 77

    (65) asigna -> NOMBRE ASIGNACION . op_aritmetica
    (66) asigna -> NOMBRE ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 128
    tipo_variable                  shift and go to state 129
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    vacio                          shift and go to state 97

state 78

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (68) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable
    (62) vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER
    (63) vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER
    (64) vector -> NOMBRE CORCHETEIZQ . op_aritmetica CORCHETEDER
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (105) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 130
    INT             shift and go to state 132
    PARIZQ          shift and go to state 96
    DOUBLE          shift and go to state 88
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 131
    tipo_variable                  shift and go to state 133
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 79

    (15) llamado_funcion -> NOMBRE PARIZQ . parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE PARIZQ . vacio PARDER
    (17) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (18) parametro_llamado -> . op_aritmetica parametro_llamado_extra
    (105) vacio -> .
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio

    PARDER          reduce using rule 105 (vacio -> .)
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96

    parametro_llamado              shift and go to state 134
    vacio                          shift and go to state 135
    tipo_variable                  shift and go to state 136
    op_aritmetica                  shift and go to state 137
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95

state 80

    (50) post_incdec -> NOMBRE INCREMENTAR .

    COMENTARIO      reduce using rule 50 (post_incdec -> NOMBRE INCREMENTAR .)
    NEWLINE         reduce using rule 50 (post_incdec -> NOMBRE INCREMENTAR .)
    PARDER          reduce using rule 50 (post_incdec -> NOMBRE INCREMENTAR .)


state 81

    (51) post_incdec -> NOMBRE DECREMENTAR .

    COMENTARIO      reduce using rule 51 (post_incdec -> NOMBRE DECREMENTAR .)
    NEWLINE         reduce using rule 51 (post_incdec -> NOMBRE DECREMENTAR .)
    PARDER          reduce using rule 51 (post_incdec -> NOMBRE DECREMENTAR .)


state 82

    (55) dec_variable -> DECVARIABLE ASIGNACION . op_aritmetica
    (56) dec_variable -> DECVARIABLE ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 138
    tipo_variable                  shift and go to state 139
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    vacio                          shift and go to state 97

state 83

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ . op_aritmetica CORCHETEDER
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (105) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 140
    INT             shift and go to state 141
    PARIZQ          shift and go to state 96
    DOUBLE          shift and go to state 88
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 142
    op_aritmetica_extra            shift and go to state 95
    tipo_variable                  shift and go to state 133
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 84

    (60) usar_vector -> vector ASIGNACION . op_aritmetica
    (61) usar_vector -> vector ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    vector                         shift and go to state 94
    op_aritmetica                  shift and go to state 143
    tipo_variable                  shift and go to state 144
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 93
    vacio                          shift and go to state 97

state 85

    (71) retorno -> RETURN tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 71 (retorno -> RETURN tipo_variable .)
    NEWLINE         reduce using rule 71 (retorno -> RETURN tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 86

    (72) retorno -> RETURN op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 72 (retorno -> RETURN op_aritmetica .)
    NEWLINE         reduce using rule 72 (retorno -> RETURN op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 87

    (85) tipo_variable -> NOMBRE .
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    COMENTARIO      reduce using rule 85 (tipo_variable -> NOMBRE .)
    NEWLINE         reduce using rule 85 (tipo_variable -> NOMBRE .)
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIFERENTE       reduce using rule 85 (tipo_variable -> NOMBRE .)
    IGUAL           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MAYOR           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MAYORIGUAL      reduce using rule 85 (tipo_variable -> NOMBRE .)
    MENOR           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MENORIGUAL      reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARDER          reduce using rule 85 (tipo_variable -> NOMBRE .)
    COMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    PUNTOYCOMA      reduce using rule 85 (tipo_variable -> NOMBRE .)
    CORCHETEDER     reduce using rule 85 (tipo_variable -> NOMBRE .)
    AND             reduce using rule 85 (tipo_variable -> NOMBRE .)
    OR              reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 79
    CORCHETEIZQ     shift and go to state 145


state 88

    (86) tipo_variable -> DOUBLE .

    COMENTARIO      reduce using rule 86 (tipo_variable -> DOUBLE .)
    NEWLINE         reduce using rule 86 (tipo_variable -> DOUBLE .)
    SUMA            reduce using rule 86 (tipo_variable -> DOUBLE .)
    RESTA           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MULT            reduce using rule 86 (tipo_variable -> DOUBLE .)
    DIV             reduce using rule 86 (tipo_variable -> DOUBLE .)
    DIFERENTE       reduce using rule 86 (tipo_variable -> DOUBLE .)
    IGUAL           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MAYOR           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MAYORIGUAL      reduce using rule 86 (tipo_variable -> DOUBLE .)
    MENOR           reduce using rule 86 (tipo_variable -> DOUBLE .)
    MENORIGUAL      reduce using rule 86 (tipo_variable -> DOUBLE .)
    PARDER          reduce using rule 86 (tipo_variable -> DOUBLE .)
    COMA            reduce using rule 86 (tipo_variable -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 86 (tipo_variable -> DOUBLE .)
    CORCHETEDER     reduce using rule 86 (tipo_variable -> DOUBLE .)
    AND             reduce using rule 86 (tipo_variable -> DOUBLE .)
    OR              reduce using rule 86 (tipo_variable -> DOUBLE .)


state 89

    (87) tipo_variable -> INT .

    COMENTARIO      reduce using rule 87 (tipo_variable -> INT .)
    NEWLINE         reduce using rule 87 (tipo_variable -> INT .)
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)
    DIFERENTE       reduce using rule 87 (tipo_variable -> INT .)
    IGUAL           reduce using rule 87 (tipo_variable -> INT .)
    MAYOR           reduce using rule 87 (tipo_variable -> INT .)
    MAYORIGUAL      reduce using rule 87 (tipo_variable -> INT .)
    MENOR           reduce using rule 87 (tipo_variable -> INT .)
    MENORIGUAL      reduce using rule 87 (tipo_variable -> INT .)
    PARDER          reduce using rule 87 (tipo_variable -> INT .)
    COMA            reduce using rule 87 (tipo_variable -> INT .)
    PUNTOYCOMA      reduce using rule 87 (tipo_variable -> INT .)
    CORCHETEDER     reduce using rule 87 (tipo_variable -> INT .)
    AND             reduce using rule 87 (tipo_variable -> INT .)
    OR              reduce using rule 87 (tipo_variable -> INT .)


state 90

    (88) tipo_variable -> STRING .

    COMENTARIO      reduce using rule 88 (tipo_variable -> STRING .)
    NEWLINE         reduce using rule 88 (tipo_variable -> STRING .)
    SUMA            reduce using rule 88 (tipo_variable -> STRING .)
    RESTA           reduce using rule 88 (tipo_variable -> STRING .)
    MULT            reduce using rule 88 (tipo_variable -> STRING .)
    DIV             reduce using rule 88 (tipo_variable -> STRING .)
    DIFERENTE       reduce using rule 88 (tipo_variable -> STRING .)
    IGUAL           reduce using rule 88 (tipo_variable -> STRING .)
    MAYOR           reduce using rule 88 (tipo_variable -> STRING .)
    MAYORIGUAL      reduce using rule 88 (tipo_variable -> STRING .)
    MENOR           reduce using rule 88 (tipo_variable -> STRING .)
    MENORIGUAL      reduce using rule 88 (tipo_variable -> STRING .)
    PARDER          reduce using rule 88 (tipo_variable -> STRING .)
    COMA            reduce using rule 88 (tipo_variable -> STRING .)
    PUNTOYCOMA      reduce using rule 88 (tipo_variable -> STRING .)
    CORCHETEDER     reduce using rule 88 (tipo_variable -> STRING .)
    AND             reduce using rule 88 (tipo_variable -> STRING .)
    OR              reduce using rule 88 (tipo_variable -> STRING .)


state 91

    (89) tipo_variable -> FALSE .

    COMENTARIO      reduce using rule 89 (tipo_variable -> FALSE .)
    NEWLINE         reduce using rule 89 (tipo_variable -> FALSE .)
    SUMA            reduce using rule 89 (tipo_variable -> FALSE .)
    RESTA           reduce using rule 89 (tipo_variable -> FALSE .)
    MULT            reduce using rule 89 (tipo_variable -> FALSE .)
    DIV             reduce using rule 89 (tipo_variable -> FALSE .)
    DIFERENTE       reduce using rule 89 (tipo_variable -> FALSE .)
    IGUAL           reduce using rule 89 (tipo_variable -> FALSE .)
    MAYOR           reduce using rule 89 (tipo_variable -> FALSE .)
    MAYORIGUAL      reduce using rule 89 (tipo_variable -> FALSE .)
    MENOR           reduce using rule 89 (tipo_variable -> FALSE .)
    MENORIGUAL      reduce using rule 89 (tipo_variable -> FALSE .)
    PARDER          reduce using rule 89 (tipo_variable -> FALSE .)
    COMA            reduce using rule 89 (tipo_variable -> FALSE .)
    PUNTOYCOMA      reduce using rule 89 (tipo_variable -> FALSE .)
    CORCHETEDER     reduce using rule 89 (tipo_variable -> FALSE .)
    AND             reduce using rule 89 (tipo_variable -> FALSE .)
    OR              reduce using rule 89 (tipo_variable -> FALSE .)


state 92

    (90) tipo_variable -> TRUE .

    COMENTARIO      reduce using rule 90 (tipo_variable -> TRUE .)
    NEWLINE         reduce using rule 90 (tipo_variable -> TRUE .)
    SUMA            reduce using rule 90 (tipo_variable -> TRUE .)
    RESTA           reduce using rule 90 (tipo_variable -> TRUE .)
    MULT            reduce using rule 90 (tipo_variable -> TRUE .)
    DIV             reduce using rule 90 (tipo_variable -> TRUE .)
    DIFERENTE       reduce using rule 90 (tipo_variable -> TRUE .)
    IGUAL           reduce using rule 90 (tipo_variable -> TRUE .)
    MAYOR           reduce using rule 90 (tipo_variable -> TRUE .)
    MAYORIGUAL      reduce using rule 90 (tipo_variable -> TRUE .)
    MENOR           reduce using rule 90 (tipo_variable -> TRUE .)
    MENORIGUAL      reduce using rule 90 (tipo_variable -> TRUE .)
    PARDER          reduce using rule 90 (tipo_variable -> TRUE .)
    COMA            reduce using rule 90 (tipo_variable -> TRUE .)
    PUNTOYCOMA      reduce using rule 90 (tipo_variable -> TRUE .)
    CORCHETEDER     reduce using rule 90 (tipo_variable -> TRUE .)
    AND             reduce using rule 90 (tipo_variable -> TRUE .)
    OR              reduce using rule 90 (tipo_variable -> TRUE .)


state 93

    (91) tipo_variable -> llamado_funcion .

    COMENTARIO      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    NEWLINE         reduce using rule 91 (tipo_variable -> llamado_funcion .)
    SUMA            reduce using rule 91 (tipo_variable -> llamado_funcion .)
    RESTA           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MULT            reduce using rule 91 (tipo_variable -> llamado_funcion .)
    DIV             reduce using rule 91 (tipo_variable -> llamado_funcion .)
    DIFERENTE       reduce using rule 91 (tipo_variable -> llamado_funcion .)
    IGUAL           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MAYOR           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MAYORIGUAL      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MENOR           reduce using rule 91 (tipo_variable -> llamado_funcion .)
    MENORIGUAL      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    PARDER          reduce using rule 91 (tipo_variable -> llamado_funcion .)
    COMA            reduce using rule 91 (tipo_variable -> llamado_funcion .)
    PUNTOYCOMA      reduce using rule 91 (tipo_variable -> llamado_funcion .)
    CORCHETEDER     reduce using rule 91 (tipo_variable -> llamado_funcion .)
    AND             reduce using rule 91 (tipo_variable -> llamado_funcion .)
    OR              reduce using rule 91 (tipo_variable -> llamado_funcion .)


state 94

    (92) tipo_variable -> vector .

    COMENTARIO      reduce using rule 92 (tipo_variable -> vector .)
    NEWLINE         reduce using rule 92 (tipo_variable -> vector .)
    SUMA            reduce using rule 92 (tipo_variable -> vector .)
    RESTA           reduce using rule 92 (tipo_variable -> vector .)
    MULT            reduce using rule 92 (tipo_variable -> vector .)
    DIV             reduce using rule 92 (tipo_variable -> vector .)
    DIFERENTE       reduce using rule 92 (tipo_variable -> vector .)
    IGUAL           reduce using rule 92 (tipo_variable -> vector .)
    MAYOR           reduce using rule 92 (tipo_variable -> vector .)
    MAYORIGUAL      reduce using rule 92 (tipo_variable -> vector .)
    MENOR           reduce using rule 92 (tipo_variable -> vector .)
    MENORIGUAL      reduce using rule 92 (tipo_variable -> vector .)
    PARDER          reduce using rule 92 (tipo_variable -> vector .)
    COMA            reduce using rule 92 (tipo_variable -> vector .)
    PUNTOYCOMA      reduce using rule 92 (tipo_variable -> vector .)
    CORCHETEDER     reduce using rule 92 (tipo_variable -> vector .)
    AND             reduce using rule 92 (tipo_variable -> vector .)
    OR              reduce using rule 92 (tipo_variable -> vector .)


state 95

    (93) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (99) operador_aritmetico -> . SUMA
    (100) operador_aritmetico -> . RESTA
    (101) operador_aritmetico -> . MULT
    (102) operador_aritmetico -> . DIV

    SUMA            shift and go to state 147
    RESTA           shift and go to state 148
    MULT            shift and go to state 149
    DIV             shift and go to state 150

    operador_aritmetico            shift and go to state 146

state 96

    (95) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (105) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica_extra            shift and go to state 151
    tipo_variable                  shift and go to state 133
    op_aritmetica                  shift and go to state 152
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 97

    (98) op_aritmetica_extra -> vacio .

    SUMA            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 98 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 98 (op_aritmetica_extra -> vacio .)


state 98

    (48) pre_incdec -> INCREMENTAR NOMBRE .

    COMENTARIO      reduce using rule 48 (pre_incdec -> INCREMENTAR NOMBRE .)
    NEWLINE         reduce using rule 48 (pre_incdec -> INCREMENTAR NOMBRE .)
    PARDER          reduce using rule 48 (pre_incdec -> INCREMENTAR NOMBRE .)


state 99

    (49) pre_incdec -> DECREMENTAR NOMBRE .

    COMENTARIO      reduce using rule 49 (pre_incdec -> DECREMENTAR NOMBRE .)
    NEWLINE         reduce using rule 49 (pre_incdec -> DECREMENTAR NOMBRE .)
    PARDER          reduce using rule 49 (pre_incdec -> DECREMENTAR NOMBRE .)


state 100

    (1) Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (6) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (105) vacio -> .
    (7) dominio -> . PRIVATE
    (8) dominio -> . PUBLIC
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 105 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 105 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    definicion_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    Niark                          shift and go to state 153
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 101

    (6) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ . parametro PARDER
    (11) parametro -> . vacio
    (12) parametro -> . NOMBRE parametro_extra
    (105) vacio -> .

    NOMBRE          shift and go to state 154
    PARDER          reduce using rule 105 (vacio -> .)

    parametro                      shift and go to state 155
    vacio                          shift and go to state 156

state 102

    (40) concat_instruccion -> indentacion instruccion . concat_instruccion
    (40) concat_instruccion -> . indentacion instruccion concat_instruccion
    (41) concat_instruccion -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    PRIVATE         reduce using rule 105 (vacio -> .)
    PUBLIC          reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)
    $end            reduce using rule 105 (vacio -> .)
    LLAVEDER        reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    indentacion                    shift and go to state 52
    concat_instruccion             shift and go to state 157
    vacio                          shift and go to state 54

state 103

    (21) instruccion -> condicion_if comentario NEWLINE .

    TABULACION      reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    IF              reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    ELSE            reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    FOR             reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    WHILE           reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    PRINT           reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    READ            reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    DECVARIABLE     reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    NOMBRE          reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    RETURN          reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    COMENTARIO      reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    INCREMENTAR     reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    DECREMENTAR     reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    NEWLINE         reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    PRIVATE         reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    PUBLIC          reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    $end            reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    LLAVEDER        reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)


state 104

    (22) instruccion -> condicion_else comentario NEWLINE .

    TABULACION      reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    IF              reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    ELSE            reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    FOR             reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    WHILE           reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    PRINT           reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    READ            reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    DECVARIABLE     reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    NOMBRE          reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    RETURN          reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    COMENTARIO      reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    INCREMENTAR     reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    DECREMENTAR     reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    NEWLINE         reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    PRIVATE         reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    PUBLIC          reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    $end            reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    LLAVEDER        reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)


state 105

    (23) instruccion -> ciclo_for comentario NEWLINE .

    TABULACION      reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    IF              reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    ELSE            reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    FOR             reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    WHILE           reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    PRINT           reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    READ            reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    DECVARIABLE     reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    NOMBRE          reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    RETURN          reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    COMENTARIO      reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    INCREMENTAR     reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    DECREMENTAR     reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    NEWLINE         reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    PRIVATE         reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    PUBLIC          reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    $end            reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    LLAVEDER        reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)


state 106

    (24) instruccion -> ciclo_while comentario NEWLINE .

    TABULACION      reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    IF              reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    ELSE            reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    FOR             reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    WHILE           reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    PRINT           reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    READ            reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    DECVARIABLE     reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    NOMBRE          reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    RETURN          reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    COMENTARIO      reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    INCREMENTAR     reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    DECREMENTAR     reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    NEWLINE         reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    PRIVATE         reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    PUBLIC          reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    $end            reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    LLAVEDER        reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)


state 107

    (25) instruccion -> imprimir comentario NEWLINE .

    TABULACION      reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    IF              reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    ELSE            reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    FOR             reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    WHILE           reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    PRINT           reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    READ            reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    DECVARIABLE     reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    NOMBRE          reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    RETURN          reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    COMENTARIO      reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    INCREMENTAR     reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    DECREMENTAR     reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    NEWLINE         reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    PRIVATE         reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    PUBLIC          reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    $end            reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    LLAVEDER        reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)


state 108

    (26) instruccion -> leer comentario NEWLINE .

    TABULACION      reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    IF              reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    ELSE            reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    FOR             reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    WHILE           reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    PRINT           reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    READ            reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    DECVARIABLE     reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    NOMBRE          reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    RETURN          reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    COMENTARIO      reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    INCREMENTAR     reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    DECREMENTAR     reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    NEWLINE         reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    PRIVATE         reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    PUBLIC          reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    $end            reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    LLAVEDER        reduce using rule 26 (instruccion -> leer comentario NEWLINE .)


state 109

    (27) instruccion -> incdec comentario NEWLINE .

    TABULACION      reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    IF              reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    ELSE            reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    FOR             reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    WHILE           reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    PRINT           reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    READ            reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    DECVARIABLE     reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    NOMBRE          reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    RETURN          reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    COMENTARIO      reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    INCREMENTAR     reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    DECREMENTAR     reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    NEWLINE         reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    PRIVATE         reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    PUBLIC          reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    $end            reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    LLAVEDER        reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)


state 110

    (28) instruccion -> dec_variable comentario NEWLINE .

    TABULACION      reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    IF              reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    ELSE            reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    FOR             reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    WHILE           reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    PRINT           reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    READ            reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    DECVARIABLE     reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    NOMBRE          reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    RETURN          reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    COMENTARIO      reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    INCREMENTAR     reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    DECREMENTAR     reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    NEWLINE         reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    PRIVATE         reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    PUBLIC          reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    $end            reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    LLAVEDER        reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)


state 111

    (29) instruccion -> dec_vector comentario NEWLINE .

    TABULACION      reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    IF              reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    ELSE            reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    FOR             reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    WHILE           reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    PRINT           reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    READ            reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    RETURN          reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    PRIVATE         reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    PUBLIC          reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    $end            reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)


state 112

    (30) instruccion -> usar_vector comentario NEWLINE .

    TABULACION      reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    IF              reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    ELSE            reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    FOR             reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    WHILE           reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    PRINT           reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    READ            reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    RETURN          reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    PRIVATE         reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    PUBLIC          reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    $end            reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 30 (instruccion -> usar_vector comentario NEWLINE .)


state 113

    (31) instruccion -> asigna comentario NEWLINE .

    TABULACION      reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    IF              reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    ELSE            reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    FOR             reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    WHILE           reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    PRINT           reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    READ            reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    DECVARIABLE     reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    NOMBRE          reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    RETURN          reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    COMENTARIO      reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    INCREMENTAR     reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    DECREMENTAR     reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    NEWLINE         reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    PRIVATE         reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    PUBLIC          reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    $end            reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)
    LLAVEDER        reduce using rule 31 (instruccion -> asigna comentario NEWLINE .)


state 114

    (32) instruccion -> asignacion_vector comentario NEWLINE .

    TABULACION      reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    IF              reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    ELSE            reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    FOR             reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    WHILE           reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    PRINT           reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    READ            reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    RETURN          reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    PRIVATE         reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    PUBLIC          reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    $end            reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 32 (instruccion -> asignacion_vector comentario NEWLINE .)


state 115

    (33) instruccion -> llamado_funcion comentario NEWLINE .

    TABULACION      reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    IF              reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    ELSE            reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    FOR             reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    WHILE           reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    PRINT           reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    READ            reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    DECVARIABLE     reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    NOMBRE          reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    RETURN          reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    COMENTARIO      reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    INCREMENTAR     reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    DECREMENTAR     reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    NEWLINE         reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    PRIVATE         reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    PUBLIC          reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    $end            reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)
    LLAVEDER        reduce using rule 33 (instruccion -> llamado_funcion comentario NEWLINE .)


state 116

    (34) instruccion -> retorno comentario NEWLINE .

    TABULACION      reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    IF              reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    ELSE            reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    FOR             reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    WHILE           reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    PRINT           reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    READ            reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    DECVARIABLE     reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    NOMBRE          reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    RETURN          reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    COMENTARIO      reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    INCREMENTAR     reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    DECREMENTAR     reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    NEWLINE         reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    PRIVATE         reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    PUBLIC          reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    $end            reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)
    LLAVEDER        reduce using rule 34 (instruccion -> retorno comentario NEWLINE .)


state 117

    (80) condicion -> PARIZQ . comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (95) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (105) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    comparables                    shift and go to state 158
    op_aritmetica_extra            shift and go to state 151
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 118

    (42) condicion_if -> IF PARIZQ condicion . PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PARDER          shift and go to state 159


state 119

    (79) condicion -> comparables . operador_condicional comparables condicion_extra
    (73) operador_condicional -> . DIFERENTE
    (74) operador_condicional -> . IGUAL
    (75) operador_condicional -> . MAYOR
    (76) operador_condicional -> . MAYORIGUAL
    (77) operador_condicional -> . MENOR
    (78) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 161
    IGUAL           shift and go to state 162
    MAYOR           shift and go to state 163
    MAYORIGUAL      shift and go to state 164
    MENOR           shift and go to state 165
    MENORIGUAL      shift and go to state 166

    operador_condicional           shift and go to state 160

state 120

    (83) comparables -> tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    DIFERENTE       reduce using rule 83 (comparables -> tipo_variable .)
    IGUAL           reduce using rule 83 (comparables -> tipo_variable .)
    MAYOR           reduce using rule 83 (comparables -> tipo_variable .)
    MAYORIGUAL      reduce using rule 83 (comparables -> tipo_variable .)
    MENOR           reduce using rule 83 (comparables -> tipo_variable .)
    MENORIGUAL      reduce using rule 83 (comparables -> tipo_variable .)
    AND             reduce using rule 83 (comparables -> tipo_variable .)
    OR              reduce using rule 83 (comparables -> tipo_variable .)
    PARDER          reduce using rule 83 (comparables -> tipo_variable .)
    PUNTOYCOMA      reduce using rule 83 (comparables -> tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 121

    (84) comparables -> op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    DIFERENTE       reduce using rule 84 (comparables -> op_aritmetica .)
    IGUAL           reduce using rule 84 (comparables -> op_aritmetica .)
    MAYOR           reduce using rule 84 (comparables -> op_aritmetica .)
    MAYORIGUAL      reduce using rule 84 (comparables -> op_aritmetica .)
    MENOR           reduce using rule 84 (comparables -> op_aritmetica .)
    MENORIGUAL      reduce using rule 84 (comparables -> op_aritmetica .)
    AND             reduce using rule 84 (comparables -> op_aritmetica .)
    OR              reduce using rule 84 (comparables -> op_aritmetica .)
    PARDER          reduce using rule 84 (comparables -> op_aritmetica .)
    PUNTOYCOMA      reduce using rule 84 (comparables -> op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 122

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE . instrucciones indentacion LLAVEDER
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 167
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 50

state 123

    (45) ciclo_for -> FOR PARIZQ dec_variable . PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER

    PUNTOYCOMA      shift and go to state 168


state 124

    (55) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (56) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 82


state 125

    (52) ciclo_while -> WHILE PARIZQ condicion . PARDER LLAVEIZQ

    PARDER          shift and go to state 169


state 126

    (53) imprimir -> PRINT PARIZQ tipo_variable . PARDER

    PARDER          shift and go to state 170


state 127

    (54) leer -> READ PARIZQ NOMBRE . PARDER

    PARDER          shift and go to state 171


state 128

    (65) asigna -> NOMBRE ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 65 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 65 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 129

    (66) asigna -> NOMBRE ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 66 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 66 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 130

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable
    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER
    (85) tipo_variable -> NOMBRE .
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    CORCHETEDER     shift and go to state 172
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 79
    CORCHETEIZQ     shift and go to state 145


state 131

    (64) vector -> NOMBRE CORCHETEIZQ op_aritmetica . CORCHETEDER
    (97) op_aritmetica_extra -> op_aritmetica .

    CORCHETEDER     shift and go to state 173
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 132

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable
    (63) vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER
    (87) tipo_variable -> INT .

    CORCHETEDER     shift and go to state 174
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)


state 133

    (96) op_aritmetica_extra -> tipo_variable .

    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 134

    (15) llamado_funcion -> NOMBRE PARIZQ parametro_llamado . PARDER

    PARDER          shift and go to state 175


state 135

    (16) llamado_funcion -> NOMBRE PARIZQ vacio . PARDER
    (98) op_aritmetica_extra -> vacio .

    PARDER          shift and go to state 176
    SUMA            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 98 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 98 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 98 (op_aritmetica_extra -> vacio .)


state 136

    (17) parametro_llamado -> tipo_variable . parametro_llamado_extra
    (96) op_aritmetica_extra -> tipo_variable .
    (19) parametro_llamado_extra -> . COMA parametro_llamado
    (20) parametro_llamado_extra -> . vacio
    (105) vacio -> .

    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    COMA            shift and go to state 178
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_llamado_extra        shift and go to state 177
    vacio                          shift and go to state 179

state 137

    (18) parametro_llamado -> op_aritmetica . parametro_llamado_extra
    (97) op_aritmetica_extra -> op_aritmetica .
    (19) parametro_llamado_extra -> . COMA parametro_llamado
    (20) parametro_llamado_extra -> . vacio
    (105) vacio -> .

    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    COMA            shift and go to state 178
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_llamado_extra        shift and go to state 180
    vacio                          shift and go to state 179

state 138

    (55) dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    PUNTOYCOMA      reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 139

    (56) dec_variable -> DECVARIABLE ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 56 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 56 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    PUNTOYCOMA      reduce using rule 56 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 140

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER
    (85) tipo_variable -> NOMBRE .
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    CORCHETEDER     shift and go to state 181
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 79
    CORCHETEIZQ     shift and go to state 145


state 141

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER
    (87) tipo_variable -> INT .

    CORCHETEDER     shift and go to state 182
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)


state 142

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica . CORCHETEDER
    (97) op_aritmetica_extra -> op_aritmetica .

    CORCHETEDER     shift and go to state 183
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 143

    (60) usar_vector -> vector ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 60 (usar_vector -> vector ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 60 (usar_vector -> vector ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 144

    (61) usar_vector -> vector ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 61 (usar_vector -> vector ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 61 (usar_vector -> vector ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 145

    (62) vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER
    (63) vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER
    (64) vector -> NOMBRE CORCHETEIZQ . op_aritmetica CORCHETEDER
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (105) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 184
    INT             shift and go to state 185
    PARIZQ          shift and go to state 96
    DOUBLE          shift and go to state 88
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 131
    op_aritmetica_extra            shift and go to state 95
    tipo_variable                  shift and go to state 133
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 146

    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    PARIZQ          shift and go to state 187
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92

    tipo_variable                  shift and go to state 186
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 147

    (99) operador_aritmetico -> SUMA .

    PARIZQ          reduce using rule 99 (operador_aritmetico -> SUMA .)
    NOMBRE          reduce using rule 99 (operador_aritmetico -> SUMA .)
    DOUBLE          reduce using rule 99 (operador_aritmetico -> SUMA .)
    INT             reduce using rule 99 (operador_aritmetico -> SUMA .)
    STRING          reduce using rule 99 (operador_aritmetico -> SUMA .)
    FALSE           reduce using rule 99 (operador_aritmetico -> SUMA .)
    TRUE            reduce using rule 99 (operador_aritmetico -> SUMA .)


state 148

    (100) operador_aritmetico -> RESTA .

    PARIZQ          reduce using rule 100 (operador_aritmetico -> RESTA .)
    NOMBRE          reduce using rule 100 (operador_aritmetico -> RESTA .)
    DOUBLE          reduce using rule 100 (operador_aritmetico -> RESTA .)
    INT             reduce using rule 100 (operador_aritmetico -> RESTA .)
    STRING          reduce using rule 100 (operador_aritmetico -> RESTA .)
    FALSE           reduce using rule 100 (operador_aritmetico -> RESTA .)
    TRUE            reduce using rule 100 (operador_aritmetico -> RESTA .)


state 149

    (101) operador_aritmetico -> MULT .

    PARIZQ          reduce using rule 101 (operador_aritmetico -> MULT .)
    NOMBRE          reduce using rule 101 (operador_aritmetico -> MULT .)
    DOUBLE          reduce using rule 101 (operador_aritmetico -> MULT .)
    INT             reduce using rule 101 (operador_aritmetico -> MULT .)
    STRING          reduce using rule 101 (operador_aritmetico -> MULT .)
    FALSE           reduce using rule 101 (operador_aritmetico -> MULT .)
    TRUE            reduce using rule 101 (operador_aritmetico -> MULT .)


state 150

    (102) operador_aritmetico -> DIV .

    PARIZQ          reduce using rule 102 (operador_aritmetico -> DIV .)
    NOMBRE          reduce using rule 102 (operador_aritmetico -> DIV .)
    DOUBLE          reduce using rule 102 (operador_aritmetico -> DIV .)
    INT             reduce using rule 102 (operador_aritmetico -> DIV .)
    STRING          reduce using rule 102 (operador_aritmetico -> DIV .)
    FALSE           reduce using rule 102 (operador_aritmetico -> DIV .)
    TRUE            reduce using rule 102 (operador_aritmetico -> DIV .)


state 151

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (99) operador_aritmetico -> . SUMA
    (100) operador_aritmetico -> . RESTA
    (101) operador_aritmetico -> . MULT
    (102) operador_aritmetico -> . DIV

    SUMA            shift and go to state 147
    RESTA           shift and go to state 148
    MULT            shift and go to state 149
    DIV             shift and go to state 150

    operador_aritmetico            shift and go to state 188

state 152

    (97) op_aritmetica_extra -> op_aritmetica .

    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 153

    (1) Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark .

    $end            reduce using rule 1 (Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark .)


state 154

    (12) parametro -> NOMBRE . parametro_extra
    (13) parametro_extra -> . COMA NOMBRE parametro_extra
    (14) parametro_extra -> . vacio
    (105) vacio -> .

    COMA            shift and go to state 190
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_extra                shift and go to state 189
    vacio                          shift and go to state 191

state 155

    (6) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro . PARDER

    PARDER          shift and go to state 192


state 156

    (11) parametro -> vacio .

    PARDER          reduce using rule 11 (parametro -> vacio .)


state 157

    (40) concat_instruccion -> indentacion instruccion concat_instruccion .

    PRIVATE         reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    PUBLIC          reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    TABULACION      reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    IF              reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    ELSE            reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    FOR             reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    WHILE           reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    PRINT           reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    READ            reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    DECVARIABLE     reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    NOMBRE          reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    RETURN          reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    COMENTARIO      reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    INCREMENTAR     reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    DECREMENTAR     reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    $end            reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    LLAVEDER        reduce using rule 40 (concat_instruccion -> indentacion instruccion concat_instruccion .)


state 158

    (80) condicion -> PARIZQ comparables . operador_condicional comparables condicion_extra PARDER condicion_extra
    (73) operador_condicional -> . DIFERENTE
    (74) operador_condicional -> . IGUAL
    (75) operador_condicional -> . MAYOR
    (76) operador_condicional -> . MAYORIGUAL
    (77) operador_condicional -> . MENOR
    (78) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 161
    IGUAL           shift and go to state 162
    MAYOR           shift and go to state 163
    MAYORIGUAL      shift and go to state 164
    MENOR           shift and go to state 165
    MENORIGUAL      shift and go to state 166

    operador_condicional           shift and go to state 193

state 159

    (42) condicion_if -> IF PARIZQ condicion PARDER . LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    LLAVEIZQ        shift and go to state 194


state 160

    (79) condicion -> comparables operador_condicional . comparables condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    comparables                    shift and go to state 195
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 161

    (73) operador_condicional -> DIFERENTE .

    NOMBRE          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    DOUBLE          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    INT             reduce using rule 73 (operador_condicional -> DIFERENTE .)
    STRING          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    FALSE           reduce using rule 73 (operador_condicional -> DIFERENTE .)
    TRUE            reduce using rule 73 (operador_condicional -> DIFERENTE .)
    PARIZQ          reduce using rule 73 (operador_condicional -> DIFERENTE .)
    SUMA            reduce using rule 73 (operador_condicional -> DIFERENTE .)
    RESTA           reduce using rule 73 (operador_condicional -> DIFERENTE .)
    MULT            reduce using rule 73 (operador_condicional -> DIFERENTE .)
    DIV             reduce using rule 73 (operador_condicional -> DIFERENTE .)


state 162

    (74) operador_condicional -> IGUAL .

    NOMBRE          reduce using rule 74 (operador_condicional -> IGUAL .)
    DOUBLE          reduce using rule 74 (operador_condicional -> IGUAL .)
    INT             reduce using rule 74 (operador_condicional -> IGUAL .)
    STRING          reduce using rule 74 (operador_condicional -> IGUAL .)
    FALSE           reduce using rule 74 (operador_condicional -> IGUAL .)
    TRUE            reduce using rule 74 (operador_condicional -> IGUAL .)
    PARIZQ          reduce using rule 74 (operador_condicional -> IGUAL .)
    SUMA            reduce using rule 74 (operador_condicional -> IGUAL .)
    RESTA           reduce using rule 74 (operador_condicional -> IGUAL .)
    MULT            reduce using rule 74 (operador_condicional -> IGUAL .)
    DIV             reduce using rule 74 (operador_condicional -> IGUAL .)


state 163

    (75) operador_condicional -> MAYOR .

    NOMBRE          reduce using rule 75 (operador_condicional -> MAYOR .)
    DOUBLE          reduce using rule 75 (operador_condicional -> MAYOR .)
    INT             reduce using rule 75 (operador_condicional -> MAYOR .)
    STRING          reduce using rule 75 (operador_condicional -> MAYOR .)
    FALSE           reduce using rule 75 (operador_condicional -> MAYOR .)
    TRUE            reduce using rule 75 (operador_condicional -> MAYOR .)
    PARIZQ          reduce using rule 75 (operador_condicional -> MAYOR .)
    SUMA            reduce using rule 75 (operador_condicional -> MAYOR .)
    RESTA           reduce using rule 75 (operador_condicional -> MAYOR .)
    MULT            reduce using rule 75 (operador_condicional -> MAYOR .)
    DIV             reduce using rule 75 (operador_condicional -> MAYOR .)


state 164

    (76) operador_condicional -> MAYORIGUAL .

    NOMBRE          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    DOUBLE          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    INT             reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    STRING          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    FALSE           reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    TRUE            reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    PARIZQ          reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    SUMA            reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    RESTA           reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    MULT            reduce using rule 76 (operador_condicional -> MAYORIGUAL .)
    DIV             reduce using rule 76 (operador_condicional -> MAYORIGUAL .)


state 165

    (77) operador_condicional -> MENOR .

    NOMBRE          reduce using rule 77 (operador_condicional -> MENOR .)
    DOUBLE          reduce using rule 77 (operador_condicional -> MENOR .)
    INT             reduce using rule 77 (operador_condicional -> MENOR .)
    STRING          reduce using rule 77 (operador_condicional -> MENOR .)
    FALSE           reduce using rule 77 (operador_condicional -> MENOR .)
    TRUE            reduce using rule 77 (operador_condicional -> MENOR .)
    PARIZQ          reduce using rule 77 (operador_condicional -> MENOR .)
    SUMA            reduce using rule 77 (operador_condicional -> MENOR .)
    RESTA           reduce using rule 77 (operador_condicional -> MENOR .)
    MULT            reduce using rule 77 (operador_condicional -> MENOR .)
    DIV             reduce using rule 77 (operador_condicional -> MENOR .)


state 166

    (78) operador_condicional -> MENORIGUAL .

    NOMBRE          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    DOUBLE          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    INT             reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    STRING          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    FALSE           reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    TRUE            reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    PARIZQ          reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    SUMA            reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    RESTA           reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    MULT            reduce using rule 78 (operador_condicional -> MENORIGUAL .)
    DIV             reduce using rule 78 (operador_condicional -> MENORIGUAL .)


state 167

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones . indentacion LLAVEDER
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 196
    vacio                          shift and go to state 48

state 168

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA . condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 117
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 197
    comparables                    shift and go to state 119
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 169

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER . LLAVEIZQ

    LLAVEIZQ        shift and go to state 198


state 170

    (53) imprimir -> PRINT PARIZQ tipo_variable PARDER .

    COMENTARIO      reduce using rule 53 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)
    NEWLINE         reduce using rule 53 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)


state 171

    (54) leer -> READ PARIZQ NOMBRE PARDER .

    COMENTARIO      reduce using rule 54 (leer -> READ PARIZQ NOMBRE PARDER .)
    NEWLINE         reduce using rule 54 (leer -> READ PARIZQ NOMBRE PARDER .)


state 172

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable
    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .

  ! shift/reduce conflict for ASIGNACION resolved as shift
    ASIGNACION      shift and go to state 199

  ! ASIGNACION      [ reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .) ]


state 173

    (64) vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .

    ASIGNACION      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    COMENTARIO      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    NEWLINE         reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    SUMA            reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    RESTA           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MULT            reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    DIV             reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    DIFERENTE       reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    IGUAL           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MAYOR           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MAYORIGUAL      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MENOR           reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    MENORIGUAL      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    PARDER          reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    COMA            reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    PUNTOYCOMA      reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    CORCHETEDER     reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    AND             reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    OR              reduce using rule 64 (vector -> NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER .)


state 174

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable
    (63) vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .

  ! shift/reduce conflict for ASIGNACION resolved as shift
    ASIGNACION      shift and go to state 200

  ! ASIGNACION      [ reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .) ]


state 175

    (15) llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .

    COMENTARIO      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    NEWLINE         reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    SUMA            reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    RESTA           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MULT            reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIV             reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIFERENTE       reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    IGUAL           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYOR           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYORIGUAL      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENOR           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENORIGUAL      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PARDER          reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    COMA            reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PUNTOYCOMA      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    CORCHETEDER     reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    AND             reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    OR              reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)


state 176

    (16) llamado_funcion -> NOMBRE PARIZQ vacio PARDER .

    COMENTARIO      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    NEWLINE         reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    SUMA            reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    RESTA           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MULT            reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    DIV             reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    DIFERENTE       reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    IGUAL           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MAYOR           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MAYORIGUAL      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MENOR           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MENORIGUAL      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    PARDER          reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    COMA            reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    PUNTOYCOMA      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    CORCHETEDER     reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    AND             reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    OR              reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)


state 177

    (17) parametro_llamado -> tipo_variable parametro_llamado_extra .

    PARDER          reduce using rule 17 (parametro_llamado -> tipo_variable parametro_llamado_extra .)


state 178

    (19) parametro_llamado_extra -> COMA . parametro_llamado
    (17) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (18) parametro_llamado -> . op_aritmetica parametro_llamado_extra
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    parametro_llamado              shift and go to state 201
    tipo_variable                  shift and go to state 136
    op_aritmetica                  shift and go to state 137
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 179

    (20) parametro_llamado_extra -> vacio .

    PARDER          reduce using rule 20 (parametro_llamado_extra -> vacio .)


state 180

    (18) parametro_llamado -> op_aritmetica parametro_llamado_extra .

    PARDER          reduce using rule 18 (parametro_llamado -> op_aritmetica parametro_llamado_extra .)


state 181

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .

    COMENTARIO      reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)
    NEWLINE         reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)


state 182

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .

    COMENTARIO      reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)
    NEWLINE         reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)


state 183

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER .

    COMENTARIO      reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER .)
    NEWLINE         reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ op_aritmetica CORCHETEDER .)


state 184

    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER
    (85) tipo_variable -> NOMBRE .
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (62) vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER
    (64) vector -> NOMBRE . CORCHETEIZQ op_aritmetica CORCHETEDER

    CORCHETEDER     shift and go to state 202
    SUMA            reduce using rule 85 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 85 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 85 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 85 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 79
    CORCHETEIZQ     shift and go to state 145


state 185

    (63) vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER
    (87) tipo_variable -> INT .

    CORCHETEDER     shift and go to state 203
    SUMA            reduce using rule 87 (tipo_variable -> INT .)
    RESTA           reduce using rule 87 (tipo_variable -> INT .)
    MULT            reduce using rule 87 (tipo_variable -> INT .)
    DIV             reduce using rule 87 (tipo_variable -> INT .)


state 186

    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    COMENTARIO      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    NEWLINE         reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    SUMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIFERENTE       reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    IGUAL           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    CORCHETEDER     reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    COMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    PARDER          reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    PUNTOYCOMA      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    AND             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    OR              reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 187

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (105) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica_extra            shift and go to state 204
    tipo_variable                  shift and go to state 133
    op_aritmetica                  shift and go to state 152
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 188

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    PARIZQ          shift and go to state 187
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92

    tipo_variable                  shift and go to state 205
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 189

    (12) parametro -> NOMBRE parametro_extra .

    PARDER          reduce using rule 12 (parametro -> NOMBRE parametro_extra .)


state 190

    (13) parametro_extra -> COMA . NOMBRE parametro_extra

    NOMBRE          shift and go to state 206


state 191

    (14) parametro_extra -> vacio .

    PARDER          reduce using rule 14 (parametro_extra -> vacio .)


state 192

    (6) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .

    LLAVEIZQ        reduce using rule 6 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)


state 193

    (80) condicion -> PARIZQ comparables operador_condicional . comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    comparables                    shift and go to state 207
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 194

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ . NEWLINE instrucciones indentacion LLAVEDER

    NEWLINE         shift and go to state 208


state 195

    (79) condicion -> comparables operador_condicional comparables . condicion_extra
    (81) condicion_extra -> . operador_logico condicion
    (82) condicion_extra -> . vacio
    (103) operador_logico -> . AND
    (104) operador_logico -> . OR
    (105) vacio -> .

    AND             shift and go to state 212
    OR              shift and go to state 213
    PARDER          reduce using rule 105 (vacio -> .)
    PUNTOYCOMA      reduce using rule 105 (vacio -> .)

    condicion_extra                shift and go to state 209
    operador_logico                shift and go to state 210
    vacio                          shift and go to state 211

state 196

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 214


state 197

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion . PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER

    PUNTOYCOMA      shift and go to state 215


state 198

    (52) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .

    COMENTARIO      reduce using rule 52 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .)
    NEWLINE         reduce using rule 52 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .)


state 199

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 216
    tipo_variable                  shift and go to state 217
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    vacio                          shift and go to state 97

state 200

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (105) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    op_aritmetica                  shift and go to state 218
    tipo_variable                  shift and go to state 219
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    vacio                          shift and go to state 97

state 201

    (19) parametro_llamado_extra -> COMA parametro_llamado .

    PARDER          reduce using rule 19 (parametro_llamado_extra -> COMA parametro_llamado .)


state 202

    (62) vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .

    COMENTARIO      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    NEWLINE         reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    SUMA            reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    RESTA           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MULT            reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    DIV             reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    DIFERENTE       reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    IGUAL           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MAYOR           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MAYORIGUAL      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MENOR           reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    MENORIGUAL      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    PARDER          reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    COMA            reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    PUNTOYCOMA      reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    CORCHETEDER     reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    AND             reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)
    OR              reduce using rule 62 (vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER .)


state 203

    (63) vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .

    COMENTARIO      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    NEWLINE         reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    SUMA            reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    RESTA           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MULT            reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    DIV             reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    DIFERENTE       reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    IGUAL           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MAYOR           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MAYORIGUAL      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MENOR           reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    MENORIGUAL      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    PARDER          reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    COMA            reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    PUNTOYCOMA      reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    CORCHETEDER     reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    AND             reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)
    OR              reduce using rule 63 (vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER .)


state 204

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (99) operador_aritmetico -> . SUMA
    (100) operador_aritmetico -> . RESTA
    (101) operador_aritmetico -> . MULT
    (102) operador_aritmetico -> . DIV

    SUMA            shift and go to state 147
    RESTA           shift and go to state 148
    MULT            shift and go to state 149
    DIV             shift and go to state 150

    operador_aritmetico            shift and go to state 220

state 205

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 221
    SUMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIFERENTE       reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    IGUAL           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENOR           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENORIGUAL      reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 206

    (13) parametro_extra -> COMA NOMBRE . parametro_extra
    (13) parametro_extra -> . COMA NOMBRE parametro_extra
    (14) parametro_extra -> . vacio
    (105) vacio -> .

    COMA            shift and go to state 190
    PARDER          reduce using rule 105 (vacio -> .)

    parametro_extra                shift and go to state 222
    vacio                          shift and go to state 191

state 207

    (80) condicion -> PARIZQ comparables operador_condicional comparables . condicion_extra PARDER condicion_extra
    (81) condicion_extra -> . operador_logico condicion
    (82) condicion_extra -> . vacio
    (103) operador_logico -> . AND
    (104) operador_logico -> . OR
    (105) vacio -> .

    AND             shift and go to state 212
    OR              shift and go to state 213
    PARDER          reduce using rule 105 (vacio -> .)

    condicion_extra                shift and go to state 223
    operador_logico                shift and go to state 210
    vacio                          shift and go to state 211

state 208

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE . instrucciones indentacion LLAVEDER
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

  ! TABULACION      [ reduce using rule 105 (vacio -> .) ]

    instrucciones                  shift and go to state 224
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 50

state 209

    (79) condicion -> comparables operador_condicional comparables condicion_extra .

    PARDER          reduce using rule 79 (condicion -> comparables operador_condicional comparables condicion_extra .)
    PUNTOYCOMA      reduce using rule 79 (condicion -> comparables operador_condicional comparables condicion_extra .)


state 210

    (81) condicion_extra -> operador_logico . condicion
    (79) condicion -> . comparables operador_condicional comparables condicion_extra
    (80) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (83) comparables -> . tipo_variable
    (84) comparables -> . op_aritmetica
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (93) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (94) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER
    (96) op_aritmetica_extra -> . tipo_variable
    (97) op_aritmetica_extra -> . op_aritmetica
    (98) op_aritmetica_extra -> . vacio
    (105) vacio -> .

    PARIZQ          shift and go to state 117
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92
    SUMA            reduce using rule 105 (vacio -> .)
    RESTA           reduce using rule 105 (vacio -> .)
    MULT            reduce using rule 105 (vacio -> .)
    DIV             reduce using rule 105 (vacio -> .)

    condicion                      shift and go to state 225
    comparables                    shift and go to state 119
    tipo_variable                  shift and go to state 120
    op_aritmetica                  shift and go to state 121
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 211

    (82) condicion_extra -> vacio .

    PARDER          reduce using rule 82 (condicion_extra -> vacio .)
    PUNTOYCOMA      reduce using rule 82 (condicion_extra -> vacio .)


state 212

    (103) operador_logico -> AND .

    PARIZQ          reduce using rule 103 (operador_logico -> AND .)
    NOMBRE          reduce using rule 103 (operador_logico -> AND .)
    DOUBLE          reduce using rule 103 (operador_logico -> AND .)
    INT             reduce using rule 103 (operador_logico -> AND .)
    STRING          reduce using rule 103 (operador_logico -> AND .)
    FALSE           reduce using rule 103 (operador_logico -> AND .)
    TRUE            reduce using rule 103 (operador_logico -> AND .)
    SUMA            reduce using rule 103 (operador_logico -> AND .)
    RESTA           reduce using rule 103 (operador_logico -> AND .)
    MULT            reduce using rule 103 (operador_logico -> AND .)
    DIV             reduce using rule 103 (operador_logico -> AND .)


state 213

    (104) operador_logico -> OR .

    PARIZQ          reduce using rule 104 (operador_logico -> OR .)
    NOMBRE          reduce using rule 104 (operador_logico -> OR .)
    DOUBLE          reduce using rule 104 (operador_logico -> OR .)
    INT             reduce using rule 104 (operador_logico -> OR .)
    STRING          reduce using rule 104 (operador_logico -> OR .)
    FALSE           reduce using rule 104 (operador_logico -> OR .)
    TRUE            reduce using rule 104 (operador_logico -> OR .)
    SUMA            reduce using rule 104 (operador_logico -> OR .)
    RESTA           reduce using rule 104 (operador_logico -> OR .)
    MULT            reduce using rule 104 (operador_logico -> OR .)
    DIV             reduce using rule 104 (operador_logico -> OR .)


state 214

    (43) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .

    COMENTARIO      reduce using rule 43 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)
    NEWLINE         reduce using rule 43 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)


state 215

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA . incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) incdec -> . pre_incdec
    (47) incdec -> . post_incdec
    (48) pre_incdec -> . INCREMENTAR NOMBRE
    (49) pre_incdec -> . DECREMENTAR NOMBRE
    (50) post_incdec -> . NOMBRE INCREMENTAR
    (51) post_incdec -> . NOMBRE DECREMENTAR

    INCREMENTAR     shift and go to state 45
    DECREMENTAR     shift and go to state 46
    NOMBRE          shift and go to state 227

    incdec                         shift and go to state 226
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39

state 216

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 67 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 67 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 217

    (69) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 69 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 69 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 218

    (68) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .
    (97) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 68 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 68 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 97 (op_aritmetica_extra -> op_aritmetica .)


state 219

    (70) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (96) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 70 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 70 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 96 (op_aritmetica_extra -> tipo_variable .)


state 220

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (85) tipo_variable -> . NOMBRE
    (86) tipo_variable -> . DOUBLE
    (87) tipo_variable -> . INT
    (88) tipo_variable -> . STRING
    (89) tipo_variable -> . FALSE
    (90) tipo_variable -> . TRUE
    (91) tipo_variable -> . llamado_funcion
    (92) tipo_variable -> . vector
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (62) vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER
    (63) vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER
    (64) vector -> . NOMBRE CORCHETEIZQ op_aritmetica CORCHETEDER

    PARIZQ          shift and go to state 187
    NOMBRE          shift and go to state 87
    DOUBLE          shift and go to state 88
    INT             shift and go to state 89
    STRING          shift and go to state 90
    FALSE           shift and go to state 91
    TRUE            shift and go to state 92

    tipo_variable                  shift and go to state 228
    llamado_funcion                shift and go to state 93
    vector                         shift and go to state 94

state 221

    (95) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    COMENTARIO      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    NEWLINE         reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIFERENTE       reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    IGUAL           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYOR           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYORIGUAL      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENOR           reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENORIGUAL      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    CORCHETEDER     reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    COMA            reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PARDER          reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PUNTOYCOMA      reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    AND             reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    OR              reduce using rule 95 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 222

    (13) parametro_extra -> COMA NOMBRE parametro_extra .

    PARDER          reduce using rule 13 (parametro_extra -> COMA NOMBRE parametro_extra .)


state 223

    (80) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra . PARDER condicion_extra

    PARDER          shift and go to state 229


state 224

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones . indentacion LLAVEDER
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)

    indentacion                    shift and go to state 230
    vacio                          shift and go to state 48

state 225

    (81) condicion_extra -> operador_logico condicion .

    PARDER          reduce using rule 81 (condicion_extra -> operador_logico condicion .)
    PUNTOYCOMA      reduce using rule 81 (condicion_extra -> operador_logico condicion .)


state 226

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 231


state 227

    (50) post_incdec -> NOMBRE . INCREMENTAR
    (51) post_incdec -> NOMBRE . DECREMENTAR

    INCREMENTAR     shift and go to state 80
    DECREMENTAR     shift and go to state 81


state 228

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (93) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 232
    SUMA            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 93 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 229

    (80) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER . condicion_extra
    (81) condicion_extra -> . operador_logico condicion
    (82) condicion_extra -> . vacio
    (103) operador_logico -> . AND
    (104) operador_logico -> . OR
    (105) vacio -> .

    AND             shift and go to state 212
    OR              shift and go to state 213
    PARDER          reduce using rule 105 (vacio -> .)
    PUNTOYCOMA      reduce using rule 105 (vacio -> .)

    condicion_extra                shift and go to state 233
    operador_logico                shift and go to state 210
    vacio                          shift and go to state 211

state 230

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 234


state 231

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 235


state 232

    (94) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    COMENTARIO      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    NEWLINE         reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIFERENTE       reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    IGUAL           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYOR           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYORIGUAL      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENOR           reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENORIGUAL      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    CORCHETEDER     reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    COMA            reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PARDER          reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PUNTOYCOMA      reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    AND             reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    OR              reduce using rule 94 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 233

    (80) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .

    PARDER          reduce using rule 80 (condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .)
    PUNTOYCOMA      reduce using rule 80 (condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .)


state 234

    (42) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .

    COMENTARIO      reduce using rule 42 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)
    NEWLINE         reduce using rule 42 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)


state 235

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ . instrucciones LLAVEDER
    (38) instrucciones -> . indentacion instruccion concat_instruccion
    (39) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (105) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 105 (vacio -> .)
    IF              reduce using rule 105 (vacio -> .)
    ELSE            reduce using rule 105 (vacio -> .)
    FOR             reduce using rule 105 (vacio -> .)
    WHILE           reduce using rule 105 (vacio -> .)
    PRINT           reduce using rule 105 (vacio -> .)
    READ            reduce using rule 105 (vacio -> .)
    DECVARIABLE     reduce using rule 105 (vacio -> .)
    NOMBRE          reduce using rule 105 (vacio -> .)
    RETURN          reduce using rule 105 (vacio -> .)
    COMENTARIO      reduce using rule 105 (vacio -> .)
    INCREMENTAR     reduce using rule 105 (vacio -> .)
    DECREMENTAR     reduce using rule 105 (vacio -> .)
    NEWLINE         reduce using rule 105 (vacio -> .)

    instrucciones                  shift and go to state 236
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 50

state 236

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones . LLAVEDER

    LLAVEDER        shift and go to state 237


state 237

    (45) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER .

    COMENTARIO      reduce using rule 45 (ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NEWLINE         reduce using rule 45 (ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRIVATE in state 0 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 0 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 0 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 3 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 3 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 3 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 15 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 100 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 100 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 100 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 102 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 122 resolved as shift
WARNING: shift/reduce conflict for ASIGNACION in state 172 resolved as shift
WARNING: shift/reduce conflict for ASIGNACION in state 174 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 208 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (Niark -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 4
WARNING: reduce/reduce conflict in state 4 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 4
WARNING: reduce/reduce conflict in state 54 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (concat_instruccion -> vacio) in state 54
