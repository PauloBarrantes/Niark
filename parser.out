Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    IMPORT
    SWITCH

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE
Rule 2     Niark -> vacio
Rule 3     indentacion -> TABULACION indentacion
Rule 4     indentacion -> vacio
Rule 5     definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER
Rule 6     dominio -> PRIVATE
Rule 7     dominio -> PUBLIC
Rule 8     tipo_return -> VOID
Rule 9     tipo_return -> FUNCTION
Rule 10    parametro -> vacio
Rule 11    parametro -> NOMBRE parametro_extra
Rule 12    parametro_extra -> COMA NOMBRE parametro_extra
Rule 13    parametro_extra -> vacio
Rule 14    llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER
Rule 15    parametro_llamado -> vacio
Rule 16    parametro_llamado -> tipo_variable parametro_llamado_extra
Rule 17    parametro_llamado_extra -> COMA parametro_llamado
Rule 18    parametro_llamado_extra -> vacio
Rule 19    instruccion -> condicion_if comentario NEWLINE
Rule 20    instruccion -> condicion_else comentario NEWLINE
Rule 21    instruccion -> ciclo_for comentario NEWLINE
Rule 22    instruccion -> ciclo_while comentario NEWLINE
Rule 23    instruccion -> imprimir comentario NEWLINE
Rule 24    instruccion -> leer comentario NEWLINE
Rule 25    instruccion -> incdec comentario NEWLINE
Rule 26    instruccion -> dec_variable comentario NEWLINE
Rule 27    instruccion -> dec_vector comentario NEWLINE
Rule 28    instruccion -> asigna comentario NEWLINE
Rule 29    instruccion -> asignacion_vector comentario NEWLINE
Rule 30    instruccion -> llamado_funcion comentario NEWLINE
Rule 31    instruccion -> retorno comentario NEWLINE
Rule 32    instruccion -> comentario NEWLINE
Rule 33    comentario -> COMENTARIO
Rule 34    comentario -> vacio
Rule 35    instrucciones -> indentacion instruccion concat_instruccion
Rule 36    instrucciones -> vacio
Rule 37    concat_instruccion -> indentacion instruccion concat_instruccion
Rule 38    concat_instruccion -> vacio
Rule 39    condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
Rule 40    condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER
Rule 41    condicion_else -> ELSE condicion_if
Rule 42    ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE
Rule 43    incdec -> pre_incdec
Rule 44    incdec -> post_incdec
Rule 45    pre_incdec -> INCREMENTAR NOMBRE
Rule 46    pre_incdec -> DECREMENTAR NOMBRE
Rule 47    post_incdec -> NOMBRE INCREMENTAR
Rule 48    post_incdec -> NOMBRE DECREMENTAR
Rule 49    ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ
Rule 50    imprimir -> PRINT PARIZQ tipo_variable PARDER
Rule 51    leer -> READ PARIZQ NOMBRE PARDER
Rule 52    dec_variable -> DECVARIABLE ASIGNACION op_aritmetica
Rule 53    dec_variable -> DECVARIABLE ASIGNACION tipo_variable
Rule 54    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
Rule 55    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER
Rule 56    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 57    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 58    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 59    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 60    asigna -> NOMBRE ASIGNACION op_aritmetica
Rule 61    asigna -> NOMBRE ASIGNACION tipo_variable
Rule 62    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 63    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 64    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 65    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 66    retorno -> RETURN tipo_variable
Rule 67    retorno -> RETURN op_aritmetica
Rule 68    operador_condicional -> DIFERENTE
Rule 69    operador_condicional -> IGUAL
Rule 70    operador_condicional -> MAYOR
Rule 71    operador_condicional -> MAYORIGUAL
Rule 72    operador_condicional -> MENOR
Rule 73    operador_condicional -> MENORIGUAL
Rule 74    condicion -> tipo_variable operador_condicional tipo_variable condicion_extra
Rule 75    condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
Rule 76    condicion_extra -> vacio
Rule 77    tipo_variable -> NOMBRE
Rule 78    tipo_variable -> DOUBLE
Rule 79    tipo_variable -> INT
Rule 80    tipo_variable -> STRING
Rule 81    tipo_variable -> FALSE
Rule 82    tipo_variable -> TRUE
Rule 83    tipo_variable -> llamado_funcion
Rule 84    op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable
Rule 85    op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 86    op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 87    op_aritmetica_extra -> tipo_variable
Rule 88    op_aritmetica_extra -> op_aritmetica
Rule 89    op_aritmetica_extra -> vacio
Rule 90    operador_aritmetico -> SUMA
Rule 91    operador_aritmetico -> RESTA
Rule 92    operador_aritmetico -> MULT
Rule 93    operador_aritmetico -> DIV
Rule 94    operador_logico -> AND
Rule 95    operador_logico -> OR
Rule 96    vacio -> <empty>

Terminals, with rules where they appear

AND                  : 94
ASIGNACION           : 42 52 53 56 57 58 59 60 61 62 63 64 65
BREAK                : 
CASE                 : 
COMA                 : 12 17
COMENTARIO           : 33
CORCHETEDER          : 54 55 56 57 58 59 62 63 64 65
CORCHETEIZQ          : 54 55 56 57 58 59 62 63 64 65
DECREMENTAR          : 46 48
DECVARIABLE          : 42 52 53 54 55 56 57 58 59
DIFERENTE            : 68
DIV                  : 93
DOUBLE               : 78
ELSE                 : 40 41
FALSE                : 81
FOR                  : 42
FUNCTION             : 9
IF                   : 39
IGUAL                : 69
IMPORT               : 
INCREMENTAR          : 45 47
INT                  : 42 55 57 59 63 65 79
LLAVEDER             : 1 39 40 42
LLAVEIZQ             : 1 39 40 42 49
MAYOR                : 70
MAYORIGUAL           : 71
MENOR                : 72
MENORIGUAL           : 73
MULT                 : 92
NEWLINE              : 1 1 1 19 20 21 22 23 24 25 26 27 28 29 30 31 32 39 40 40 42 42
NOMBRE               : 5 11 12 14 45 46 47 48 51 54 56 58 60 61 62 62 63 64 64 65 77
OR                   : 95
PARDER               : 5 14 39 42 49 50 51 85 86
PARIZQ               : 5 14 39 42 49 50 51 85 86
PRINT                : 50
PRIVATE              : 6
PUBLIC               : 7
PUNTOYCOMA           : 42 42
READ                 : 51
RESTA                : 91
RETURN               : 66 67
STRING               : 80
SUMA                 : 90
SWITCH               : 
TABULACION           : 3
TRUE                 : 82
VOID                 : 8
WHILE                : 49
error                : 

Nonterminals, with rules where they appear

Niark                : 1 0
asigna               : 28
asignacion_vector    : 29
ciclo_for            : 21
ciclo_while          : 22
comentario           : 19 20 21 22 23 24 25 26 27 28 29 30 31 32
concat_instruccion   : 35 37
condicion            : 39 42 49
condicion_else       : 20
condicion_extra      : 74 75
condicion_if         : 19 41
dec_variable         : 26
dec_vector           : 27
definicion_funcion   : 1
dominio              : 5
imprimir             : 23
incdec               : 25 42
indentacion          : 3 35 37
instruccion          : 35 37
instrucciones        : 1 39 40 42
leer                 : 24
llamado_funcion      : 30 83
op_aritmetica        : 52 56 57 60 62 63 67 88
op_aritmetica_extra  : 84 85 85 86
operador_aritmetico  : 84 85 85 86
operador_condicional : 74 75
operador_logico      : 75
parametro            : 5
parametro_extra      : 11 12
parametro_llamado    : 14 17
parametro_llamado_extra : 16
post_incdec          : 44
pre_incdec           : 43
retorno              : 31
tipo_return          : 5
tipo_variable        : 16 50 53 58 59 61 64 65 66 74 74 75 75 84 85 86 87
vacio                : 2 4 10 13 15 18 34 36 38 76 89

Parsing method: LALR

state 0

    (0) S' -> . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE
    (2) Niark -> . vacio
    (5) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (96) vacio -> .
    (6) dominio -> . PRIVATE
    (7) dominio -> . PUBLIC

    $end            reduce using rule 96 (vacio -> .)
    PRIVATE         shift and go to state 5
    PUBLIC          shift and go to state 6

    Niark                          shift and go to state 1
    definicion_funcion             shift and go to state 2
    vacio                          shift and go to state 3
    dominio                        shift and go to state 4

state 1

    (0) S' -> Niark .



state 2

    (1) Niark -> definicion_funcion . LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE

    LLAVEIZQ        shift and go to state 7


state 3

    (2) Niark -> vacio .

    $end            reduce using rule 2 (Niark -> vacio .)
    NEWLINE         reduce using rule 2 (Niark -> vacio .)


state 4

    (5) definicion_funcion -> dominio . tipo_return NOMBRE PARIZQ parametro PARDER
    (8) tipo_return -> . VOID
    (9) tipo_return -> . FUNCTION

    VOID            shift and go to state 9
    FUNCTION        shift and go to state 10

    tipo_return                    shift and go to state 8

state 5

    (6) dominio -> PRIVATE .

    VOID            reduce using rule 6 (dominio -> PRIVATE .)
    FUNCTION        reduce using rule 6 (dominio -> PRIVATE .)


state 6

    (7) dominio -> PUBLIC .

    VOID            reduce using rule 7 (dominio -> PUBLIC .)
    FUNCTION        reduce using rule 7 (dominio -> PUBLIC .)


state 7

    (1) Niark -> definicion_funcion LLAVEIZQ . NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE

    NEWLINE         shift and go to state 11


state 8

    (5) definicion_funcion -> dominio tipo_return . NOMBRE PARIZQ parametro PARDER

    NOMBRE          shift and go to state 12


state 9

    (8) tipo_return -> VOID .

    NOMBRE          reduce using rule 8 (tipo_return -> VOID .)


state 10

    (9) tipo_return -> FUNCTION .

    NOMBRE          reduce using rule 9 (tipo_return -> FUNCTION .)


state 11

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE . instrucciones LLAVEDER NEWLINE Niark NEWLINE
    (35) instrucciones -> . indentacion instruccion concat_instruccion
    (36) instrucciones -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    LLAVEDER        reduce using rule 96 (vacio -> .)
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)
    NEWLINE         reduce using rule 96 (vacio -> .)

    instrucciones                  shift and go to state 13
    indentacion                    shift and go to state 14
    vacio                          shift and go to state 15

state 12

    (5) definicion_funcion -> dominio tipo_return NOMBRE . PARIZQ parametro PARDER

    PARIZQ          shift and go to state 17


state 13

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones . LLAVEDER NEWLINE Niark NEWLINE

    LLAVEDER        shift and go to state 18


state 14

    (35) instrucciones -> indentacion . instruccion concat_instruccion
    (19) instruccion -> . condicion_if comentario NEWLINE
    (20) instruccion -> . condicion_else comentario NEWLINE
    (21) instruccion -> . ciclo_for comentario NEWLINE
    (22) instruccion -> . ciclo_while comentario NEWLINE
    (23) instruccion -> . imprimir comentario NEWLINE
    (24) instruccion -> . leer comentario NEWLINE
    (25) instruccion -> . incdec comentario NEWLINE
    (26) instruccion -> . dec_variable comentario NEWLINE
    (27) instruccion -> . dec_vector comentario NEWLINE
    (28) instruccion -> . asigna comentario NEWLINE
    (29) instruccion -> . asignacion_vector comentario NEWLINE
    (30) instruccion -> . llamado_funcion comentario NEWLINE
    (31) instruccion -> . retorno comentario NEWLINE
    (32) instruccion -> . comentario NEWLINE
    (39) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
    (40) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER
    (41) condicion_else -> . ELSE condicion_if
    (42) ciclo_for -> . FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE
    (49) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ
    (50) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (51) leer -> . READ PARIZQ NOMBRE PARDER
    (43) incdec -> . pre_incdec
    (44) incdec -> . post_incdec
    (52) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (53) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (54) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (55) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (56) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (60) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (61) asigna -> . NOMBRE ASIGNACION tipo_variable
    (62) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (63) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (64) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (65) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (66) retorno -> . RETURN tipo_variable
    (67) retorno -> . RETURN op_aritmetica
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (45) pre_incdec -> . INCREMENTAR NOMBRE
    (46) pre_incdec -> . DECREMENTAR NOMBRE
    (47) post_incdec -> . NOMBRE INCREMENTAR
    (48) post_incdec -> . NOMBRE DECREMENTAR
    (96) vacio -> .

    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    WHILE           shift and go to state 38
    PRINT           shift and go to state 39
    READ            shift and go to state 40
    DECVARIABLE     shift and go to state 37
    NOMBRE          shift and go to state 41
    RETURN          shift and go to state 44
    COMENTARIO      shift and go to state 45
    INCREMENTAR     shift and go to state 47
    DECREMENTAR     shift and go to state 48
    NEWLINE         reduce using rule 96 (vacio -> .)

    instruccion                    shift and go to state 19
    condicion_if                   shift and go to state 20
    comentario                     shift and go to state 21
    condicion_else                 shift and go to state 22
    ciclo_for                      shift and go to state 23
    ciclo_while                    shift and go to state 24
    imprimir                       shift and go to state 25
    leer                           shift and go to state 26
    incdec                         shift and go to state 27
    dec_variable                   shift and go to state 28
    dec_vector                     shift and go to state 29
    asigna                         shift and go to state 30
    asignacion_vector              shift and go to state 31
    llamado_funcion                shift and go to state 32
    retorno                        shift and go to state 33
    pre_incdec                     shift and go to state 42
    post_incdec                    shift and go to state 43
    vacio                          shift and go to state 46

state 15

    (36) instrucciones -> vacio .
    (4) indentacion -> vacio .

  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (indentacion -> vacio .)
    LLAVEDER        reduce using rule 36 (instrucciones -> vacio .)
    IF              reduce using rule 4 (indentacion -> vacio .)
    ELSE            reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    RETURN          reduce using rule 4 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    NEWLINE         reduce using rule 4 (indentacion -> vacio .)

  ! NEWLINE         [ reduce using rule 36 (instrucciones -> vacio .) ]


state 16

    (3) indentacion -> TABULACION . indentacion
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)
    NEWLINE         reduce using rule 96 (vacio -> .)

    indentacion                    shift and go to state 49
    vacio                          shift and go to state 50

state 17

    (5) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ . parametro PARDER
    (10) parametro -> . vacio
    (11) parametro -> . NOMBRE parametro_extra
    (96) vacio -> .

    NOMBRE          shift and go to state 51
    PARDER          reduce using rule 96 (vacio -> .)

    parametro                      shift and go to state 52
    vacio                          shift and go to state 53

state 18

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER . NEWLINE Niark NEWLINE

    NEWLINE         shift and go to state 54


state 19

    (35) instrucciones -> indentacion instruccion . concat_instruccion
    (37) concat_instruccion -> . indentacion instruccion concat_instruccion
    (38) concat_instruccion -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    LLAVEDER        reduce using rule 96 (vacio -> .)
    NEWLINE         reduce using rule 96 (vacio -> .)
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)

    indentacion                    shift and go to state 55
    concat_instruccion             shift and go to state 56
    vacio                          shift and go to state 57

state 20

    (19) instruccion -> condicion_if . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 58
    vacio                          shift and go to state 46

state 21

    (32) instruccion -> comentario . NEWLINE

    NEWLINE         shift and go to state 59


state 22

    (20) instruccion -> condicion_else . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 60
    vacio                          shift and go to state 46

state 23

    (21) instruccion -> ciclo_for . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 61
    vacio                          shift and go to state 46

state 24

    (22) instruccion -> ciclo_while . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 62
    vacio                          shift and go to state 46

state 25

    (23) instruccion -> imprimir . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 63
    vacio                          shift and go to state 46

state 26

    (24) instruccion -> leer . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 64
    vacio                          shift and go to state 46

state 27

    (25) instruccion -> incdec . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 65
    vacio                          shift and go to state 46

state 28

    (26) instruccion -> dec_variable . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 66
    vacio                          shift and go to state 46

state 29

    (27) instruccion -> dec_vector . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 67
    vacio                          shift and go to state 46

state 30

    (28) instruccion -> asigna . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 68
    vacio                          shift and go to state 46

state 31

    (29) instruccion -> asignacion_vector . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 69
    vacio                          shift and go to state 46

state 32

    (30) instruccion -> llamado_funcion . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 70
    vacio                          shift and go to state 46

state 33

    (31) instruccion -> retorno . comentario NEWLINE
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (96) vacio -> .

    COMENTARIO      shift and go to state 45
    NEWLINE         reduce using rule 96 (vacio -> .)

    comentario                     shift and go to state 71
    vacio                          shift and go to state 46

state 34

    (39) condicion_if -> IF . PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER

    PARIZQ          shift and go to state 72


state 35

    (40) condicion_else -> ELSE . LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER
    (41) condicion_else -> ELSE . condicion_if
    (39) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 73
    IF              shift and go to state 34

    condicion_if                   shift and go to state 74

state 36

    (42) ciclo_for -> FOR . PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    PARIZQ          shift and go to state 75


state 37

    (52) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (53) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable
    (54) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER
    (55) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER
    (56) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (57) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (58) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (59) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 76
    CORCHETEIZQ     shift and go to state 77


state 38

    (49) ciclo_while -> WHILE . PARIZQ condicion PARDER LLAVEIZQ

    PARIZQ          shift and go to state 78


state 39

    (50) imprimir -> PRINT . PARIZQ tipo_variable PARDER

    PARIZQ          shift and go to state 79


state 40

    (51) leer -> READ . PARIZQ NOMBRE PARDER

    PARIZQ          shift and go to state 80


state 41

    (60) asigna -> NOMBRE . ASIGNACION op_aritmetica
    (61) asigna -> NOMBRE . ASIGNACION tipo_variable
    (62) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (63) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (64) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (65) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (14) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (47) post_incdec -> NOMBRE . INCREMENTAR
    (48) post_incdec -> NOMBRE . DECREMENTAR

    ASIGNACION      shift and go to state 81
    CORCHETEIZQ     shift and go to state 82
    PARIZQ          shift and go to state 83
    INCREMENTAR     shift and go to state 84
    DECREMENTAR     shift and go to state 85


state 42

    (43) incdec -> pre_incdec .

    COMENTARIO      reduce using rule 43 (incdec -> pre_incdec .)
    NEWLINE         reduce using rule 43 (incdec -> pre_incdec .)
    PARDER          reduce using rule 43 (incdec -> pre_incdec .)


state 43

    (44) incdec -> post_incdec .

    COMENTARIO      reduce using rule 44 (incdec -> post_incdec .)
    NEWLINE         reduce using rule 44 (incdec -> post_incdec .)
    PARDER          reduce using rule 44 (incdec -> post_incdec .)


state 44

    (66) retorno -> RETURN . tipo_variable
    (67) retorno -> RETURN . op_aritmetica
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (96) vacio -> .

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    tipo_variable                  shift and go to state 86
    op_aritmetica                  shift and go to state 87
    llamado_funcion                shift and go to state 94
    op_aritmetica_extra            shift and go to state 95
    vacio                          shift and go to state 97

state 45

    (33) comentario -> COMENTARIO .

    NEWLINE         reduce using rule 33 (comentario -> COMENTARIO .)


state 46

    (34) comentario -> vacio .

    NEWLINE         reduce using rule 34 (comentario -> vacio .)


state 47

    (45) pre_incdec -> INCREMENTAR . NOMBRE

    NOMBRE          shift and go to state 98


state 48

    (46) pre_incdec -> DECREMENTAR . NOMBRE

    NOMBRE          shift and go to state 99


state 49

    (3) indentacion -> TABULACION indentacion .

    IF              reduce using rule 3 (indentacion -> TABULACION indentacion .)
    ELSE            reduce using rule 3 (indentacion -> TABULACION indentacion .)
    FOR             reduce using rule 3 (indentacion -> TABULACION indentacion .)
    WHILE           reduce using rule 3 (indentacion -> TABULACION indentacion .)
    PRINT           reduce using rule 3 (indentacion -> TABULACION indentacion .)
    READ            reduce using rule 3 (indentacion -> TABULACION indentacion .)
    DECVARIABLE     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    NOMBRE          reduce using rule 3 (indentacion -> TABULACION indentacion .)
    RETURN          reduce using rule 3 (indentacion -> TABULACION indentacion .)
    COMENTARIO      reduce using rule 3 (indentacion -> TABULACION indentacion .)
    INCREMENTAR     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    DECREMENTAR     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    NEWLINE         reduce using rule 3 (indentacion -> TABULACION indentacion .)


state 50

    (4) indentacion -> vacio .

    IF              reduce using rule 4 (indentacion -> vacio .)
    ELSE            reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    RETURN          reduce using rule 4 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    NEWLINE         reduce using rule 4 (indentacion -> vacio .)


state 51

    (11) parametro -> NOMBRE . parametro_extra
    (12) parametro_extra -> . COMA NOMBRE parametro_extra
    (13) parametro_extra -> . vacio
    (96) vacio -> .

    COMA            shift and go to state 101
    PARDER          reduce using rule 96 (vacio -> .)

    parametro_extra                shift and go to state 100
    vacio                          shift and go to state 102

state 52

    (5) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro . PARDER

    PARDER          shift and go to state 103


state 53

    (10) parametro -> vacio .

    PARDER          reduce using rule 10 (parametro -> vacio .)


state 54

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE . Niark NEWLINE
    (1) Niark -> . definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE
    (2) Niark -> . vacio
    (5) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (96) vacio -> .
    (6) dominio -> . PRIVATE
    (7) dominio -> . PUBLIC

    NEWLINE         reduce using rule 96 (vacio -> .)
    PRIVATE         shift and go to state 5
    PUBLIC          shift and go to state 6

    definicion_funcion             shift and go to state 2
    Niark                          shift and go to state 104
    vacio                          shift and go to state 3
    dominio                        shift and go to state 4

state 55

    (37) concat_instruccion -> indentacion . instruccion concat_instruccion
    (19) instruccion -> . condicion_if comentario NEWLINE
    (20) instruccion -> . condicion_else comentario NEWLINE
    (21) instruccion -> . ciclo_for comentario NEWLINE
    (22) instruccion -> . ciclo_while comentario NEWLINE
    (23) instruccion -> . imprimir comentario NEWLINE
    (24) instruccion -> . leer comentario NEWLINE
    (25) instruccion -> . incdec comentario NEWLINE
    (26) instruccion -> . dec_variable comentario NEWLINE
    (27) instruccion -> . dec_vector comentario NEWLINE
    (28) instruccion -> . asigna comentario NEWLINE
    (29) instruccion -> . asignacion_vector comentario NEWLINE
    (30) instruccion -> . llamado_funcion comentario NEWLINE
    (31) instruccion -> . retorno comentario NEWLINE
    (32) instruccion -> . comentario NEWLINE
    (39) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
    (40) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER
    (41) condicion_else -> . ELSE condicion_if
    (42) ciclo_for -> . FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE
    (49) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ
    (50) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (51) leer -> . READ PARIZQ NOMBRE PARDER
    (43) incdec -> . pre_incdec
    (44) incdec -> . post_incdec
    (52) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (53) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (54) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (55) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (56) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (60) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (61) asigna -> . NOMBRE ASIGNACION tipo_variable
    (62) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (63) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (64) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (65) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (66) retorno -> . RETURN tipo_variable
    (67) retorno -> . RETURN op_aritmetica
    (33) comentario -> . COMENTARIO
    (34) comentario -> . vacio
    (45) pre_incdec -> . INCREMENTAR NOMBRE
    (46) pre_incdec -> . DECREMENTAR NOMBRE
    (47) post_incdec -> . NOMBRE INCREMENTAR
    (48) post_incdec -> . NOMBRE DECREMENTAR
    (96) vacio -> .

    IF              shift and go to state 34
    ELSE            shift and go to state 35
    FOR             shift and go to state 36
    WHILE           shift and go to state 38
    PRINT           shift and go to state 39
    READ            shift and go to state 40
    DECVARIABLE     shift and go to state 37
    NOMBRE          shift and go to state 41
    RETURN          shift and go to state 44
    COMENTARIO      shift and go to state 45
    INCREMENTAR     shift and go to state 47
    DECREMENTAR     shift and go to state 48
    NEWLINE         reduce using rule 96 (vacio -> .)

    instruccion                    shift and go to state 105
    condicion_if                   shift and go to state 20
    comentario                     shift and go to state 21
    condicion_else                 shift and go to state 22
    ciclo_for                      shift and go to state 23
    ciclo_while                    shift and go to state 24
    imprimir                       shift and go to state 25
    leer                           shift and go to state 26
    incdec                         shift and go to state 27
    dec_variable                   shift and go to state 28
    dec_vector                     shift and go to state 29
    asigna                         shift and go to state 30
    asignacion_vector              shift and go to state 31
    llamado_funcion                shift and go to state 32
    retorno                        shift and go to state 33
    pre_incdec                     shift and go to state 42
    post_incdec                    shift and go to state 43
    vacio                          shift and go to state 46

state 56

    (35) instrucciones -> indentacion instruccion concat_instruccion .

    LLAVEDER        reduce using rule 35 (instrucciones -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 35 (instrucciones -> indentacion instruccion concat_instruccion .)


state 57

    (38) concat_instruccion -> vacio .
    (4) indentacion -> vacio .

  ! reduce/reduce conflict for NEWLINE resolved using rule 4 (indentacion -> vacio .)
    LLAVEDER        reduce using rule 38 (concat_instruccion -> vacio .)
    IF              reduce using rule 4 (indentacion -> vacio .)
    ELSE            reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    RETURN          reduce using rule 4 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    NEWLINE         reduce using rule 4 (indentacion -> vacio .)

  ! NEWLINE         [ reduce using rule 38 (concat_instruccion -> vacio .) ]


state 58

    (19) instruccion -> condicion_if comentario . NEWLINE

    NEWLINE         shift and go to state 106


state 59

    (32) instruccion -> comentario NEWLINE .

    TABULACION      reduce using rule 32 (instruccion -> comentario NEWLINE .)
    IF              reduce using rule 32 (instruccion -> comentario NEWLINE .)
    ELSE            reduce using rule 32 (instruccion -> comentario NEWLINE .)
    FOR             reduce using rule 32 (instruccion -> comentario NEWLINE .)
    WHILE           reduce using rule 32 (instruccion -> comentario NEWLINE .)
    PRINT           reduce using rule 32 (instruccion -> comentario NEWLINE .)
    READ            reduce using rule 32 (instruccion -> comentario NEWLINE .)
    DECVARIABLE     reduce using rule 32 (instruccion -> comentario NEWLINE .)
    NOMBRE          reduce using rule 32 (instruccion -> comentario NEWLINE .)
    RETURN          reduce using rule 32 (instruccion -> comentario NEWLINE .)
    COMENTARIO      reduce using rule 32 (instruccion -> comentario NEWLINE .)
    INCREMENTAR     reduce using rule 32 (instruccion -> comentario NEWLINE .)
    DECREMENTAR     reduce using rule 32 (instruccion -> comentario NEWLINE .)
    NEWLINE         reduce using rule 32 (instruccion -> comentario NEWLINE .)
    LLAVEDER        reduce using rule 32 (instruccion -> comentario NEWLINE .)


state 60

    (20) instruccion -> condicion_else comentario . NEWLINE

    NEWLINE         shift and go to state 107


state 61

    (21) instruccion -> ciclo_for comentario . NEWLINE

    NEWLINE         shift and go to state 108


state 62

    (22) instruccion -> ciclo_while comentario . NEWLINE

    NEWLINE         shift and go to state 109


state 63

    (23) instruccion -> imprimir comentario . NEWLINE

    NEWLINE         shift and go to state 110


state 64

    (24) instruccion -> leer comentario . NEWLINE

    NEWLINE         shift and go to state 111


state 65

    (25) instruccion -> incdec comentario . NEWLINE

    NEWLINE         shift and go to state 112


state 66

    (26) instruccion -> dec_variable comentario . NEWLINE

    NEWLINE         shift and go to state 113


state 67

    (27) instruccion -> dec_vector comentario . NEWLINE

    NEWLINE         shift and go to state 114


state 68

    (28) instruccion -> asigna comentario . NEWLINE

    NEWLINE         shift and go to state 115


state 69

    (29) instruccion -> asignacion_vector comentario . NEWLINE

    NEWLINE         shift and go to state 116


state 70

    (30) instruccion -> llamado_funcion comentario . NEWLINE

    NEWLINE         shift and go to state 117


state 71

    (31) instruccion -> retorno comentario . NEWLINE

    NEWLINE         shift and go to state 118


state 72

    (39) condicion_if -> IF PARIZQ . condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER
    (74) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    condicion                      shift and go to state 119
    tipo_variable                  shift and go to state 120
    llamado_funcion                shift and go to state 94

state 73

    (40) condicion_else -> ELSE LLAVEIZQ . NEWLINE instrucciones NEWLINE LLAVEDER

    NEWLINE         shift and go to state 121


state 74

    (41) condicion_else -> ELSE condicion_if .

    COMENTARIO      reduce using rule 41 (condicion_else -> ELSE condicion_if .)
    NEWLINE         reduce using rule 41 (condicion_else -> ELSE condicion_if .)


state 75

    (42) ciclo_for -> FOR PARIZQ . DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    DECVARIABLE     shift and go to state 122


state 76

    (52) dec_variable -> DECVARIABLE ASIGNACION . op_aritmetica
    (53) dec_variable -> DECVARIABLE ASIGNACION . tipo_variable
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (96) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica                  shift and go to state 123
    tipo_variable                  shift and go to state 124
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 94
    vacio                          shift and go to state 97

state 77

    (54) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER
    (55) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER
    (56) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (57) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable

    NOMBRE          shift and go to state 125
    INT             shift and go to state 126


state 78

    (49) ciclo_while -> WHILE PARIZQ . condicion PARDER LLAVEIZQ
    (74) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    condicion                      shift and go to state 127
    tipo_variable                  shift and go to state 120
    llamado_funcion                shift and go to state 94

state 79

    (50) imprimir -> PRINT PARIZQ . tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 128
    llamado_funcion                shift and go to state 94

state 80

    (51) leer -> READ PARIZQ . NOMBRE PARDER

    NOMBRE          shift and go to state 129


state 81

    (60) asigna -> NOMBRE ASIGNACION . op_aritmetica
    (61) asigna -> NOMBRE ASIGNACION . tipo_variable
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (96) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica                  shift and go to state 130
    tipo_variable                  shift and go to state 131
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 94
    vacio                          shift and go to state 97

state 82

    (62) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (63) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (64) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (65) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable

    NOMBRE          shift and go to state 132
    INT             shift and go to state 133


state 83

    (14) llamado_funcion -> NOMBRE PARIZQ . parametro_llamado PARDER
    (15) parametro_llamado -> . vacio
    (16) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (96) vacio -> .
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    PARDER          reduce using rule 96 (vacio -> .)
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    parametro_llamado              shift and go to state 134
    vacio                          shift and go to state 135
    tipo_variable                  shift and go to state 136
    llamado_funcion                shift and go to state 94

state 84

    (47) post_incdec -> NOMBRE INCREMENTAR .

    COMENTARIO      reduce using rule 47 (post_incdec -> NOMBRE INCREMENTAR .)
    NEWLINE         reduce using rule 47 (post_incdec -> NOMBRE INCREMENTAR .)
    PARDER          reduce using rule 47 (post_incdec -> NOMBRE INCREMENTAR .)


state 85

    (48) post_incdec -> NOMBRE DECREMENTAR .

    COMENTARIO      reduce using rule 48 (post_incdec -> NOMBRE DECREMENTAR .)
    NEWLINE         reduce using rule 48 (post_incdec -> NOMBRE DECREMENTAR .)
    PARDER          reduce using rule 48 (post_incdec -> NOMBRE DECREMENTAR .)


state 86

    (66) retorno -> RETURN tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 66 (retorno -> RETURN tipo_variable .)
    NEWLINE         reduce using rule 66 (retorno -> RETURN tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 87

    (67) retorno -> RETURN op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 67 (retorno -> RETURN op_aritmetica .)
    NEWLINE         reduce using rule 67 (retorno -> RETURN op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 88

    (77) tipo_variable -> NOMBRE .
    (14) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER

    COMENTARIO      reduce using rule 77 (tipo_variable -> NOMBRE .)
    NEWLINE         reduce using rule 77 (tipo_variable -> NOMBRE .)
    SUMA            reduce using rule 77 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 77 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 77 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 77 (tipo_variable -> NOMBRE .)
    DIFERENTE       reduce using rule 77 (tipo_variable -> NOMBRE .)
    IGUAL           reduce using rule 77 (tipo_variable -> NOMBRE .)
    MAYOR           reduce using rule 77 (tipo_variable -> NOMBRE .)
    MAYORIGUAL      reduce using rule 77 (tipo_variable -> NOMBRE .)
    MENOR           reduce using rule 77 (tipo_variable -> NOMBRE .)
    MENORIGUAL      reduce using rule 77 (tipo_variable -> NOMBRE .)
    PARDER          reduce using rule 77 (tipo_variable -> NOMBRE .)
    COMA            reduce using rule 77 (tipo_variable -> NOMBRE .)
    AND             reduce using rule 77 (tipo_variable -> NOMBRE .)
    OR              reduce using rule 77 (tipo_variable -> NOMBRE .)
    PUNTOYCOMA      reduce using rule 77 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 83


state 89

    (78) tipo_variable -> DOUBLE .

    COMENTARIO      reduce using rule 78 (tipo_variable -> DOUBLE .)
    NEWLINE         reduce using rule 78 (tipo_variable -> DOUBLE .)
    SUMA            reduce using rule 78 (tipo_variable -> DOUBLE .)
    RESTA           reduce using rule 78 (tipo_variable -> DOUBLE .)
    MULT            reduce using rule 78 (tipo_variable -> DOUBLE .)
    DIV             reduce using rule 78 (tipo_variable -> DOUBLE .)
    DIFERENTE       reduce using rule 78 (tipo_variable -> DOUBLE .)
    IGUAL           reduce using rule 78 (tipo_variable -> DOUBLE .)
    MAYOR           reduce using rule 78 (tipo_variable -> DOUBLE .)
    MAYORIGUAL      reduce using rule 78 (tipo_variable -> DOUBLE .)
    MENOR           reduce using rule 78 (tipo_variable -> DOUBLE .)
    MENORIGUAL      reduce using rule 78 (tipo_variable -> DOUBLE .)
    PARDER          reduce using rule 78 (tipo_variable -> DOUBLE .)
    COMA            reduce using rule 78 (tipo_variable -> DOUBLE .)
    AND             reduce using rule 78 (tipo_variable -> DOUBLE .)
    OR              reduce using rule 78 (tipo_variable -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 78 (tipo_variable -> DOUBLE .)


state 90

    (79) tipo_variable -> INT .

    COMENTARIO      reduce using rule 79 (tipo_variable -> INT .)
    NEWLINE         reduce using rule 79 (tipo_variable -> INT .)
    SUMA            reduce using rule 79 (tipo_variable -> INT .)
    RESTA           reduce using rule 79 (tipo_variable -> INT .)
    MULT            reduce using rule 79 (tipo_variable -> INT .)
    DIV             reduce using rule 79 (tipo_variable -> INT .)
    DIFERENTE       reduce using rule 79 (tipo_variable -> INT .)
    IGUAL           reduce using rule 79 (tipo_variable -> INT .)
    MAYOR           reduce using rule 79 (tipo_variable -> INT .)
    MAYORIGUAL      reduce using rule 79 (tipo_variable -> INT .)
    MENOR           reduce using rule 79 (tipo_variable -> INT .)
    MENORIGUAL      reduce using rule 79 (tipo_variable -> INT .)
    PARDER          reduce using rule 79 (tipo_variable -> INT .)
    COMA            reduce using rule 79 (tipo_variable -> INT .)
    AND             reduce using rule 79 (tipo_variable -> INT .)
    OR              reduce using rule 79 (tipo_variable -> INT .)
    PUNTOYCOMA      reduce using rule 79 (tipo_variable -> INT .)


state 91

    (80) tipo_variable -> STRING .

    COMENTARIO      reduce using rule 80 (tipo_variable -> STRING .)
    NEWLINE         reduce using rule 80 (tipo_variable -> STRING .)
    SUMA            reduce using rule 80 (tipo_variable -> STRING .)
    RESTA           reduce using rule 80 (tipo_variable -> STRING .)
    MULT            reduce using rule 80 (tipo_variable -> STRING .)
    DIV             reduce using rule 80 (tipo_variable -> STRING .)
    DIFERENTE       reduce using rule 80 (tipo_variable -> STRING .)
    IGUAL           reduce using rule 80 (tipo_variable -> STRING .)
    MAYOR           reduce using rule 80 (tipo_variable -> STRING .)
    MAYORIGUAL      reduce using rule 80 (tipo_variable -> STRING .)
    MENOR           reduce using rule 80 (tipo_variable -> STRING .)
    MENORIGUAL      reduce using rule 80 (tipo_variable -> STRING .)
    PARDER          reduce using rule 80 (tipo_variable -> STRING .)
    COMA            reduce using rule 80 (tipo_variable -> STRING .)
    AND             reduce using rule 80 (tipo_variable -> STRING .)
    OR              reduce using rule 80 (tipo_variable -> STRING .)
    PUNTOYCOMA      reduce using rule 80 (tipo_variable -> STRING .)


state 92

    (81) tipo_variable -> FALSE .

    COMENTARIO      reduce using rule 81 (tipo_variable -> FALSE .)
    NEWLINE         reduce using rule 81 (tipo_variable -> FALSE .)
    SUMA            reduce using rule 81 (tipo_variable -> FALSE .)
    RESTA           reduce using rule 81 (tipo_variable -> FALSE .)
    MULT            reduce using rule 81 (tipo_variable -> FALSE .)
    DIV             reduce using rule 81 (tipo_variable -> FALSE .)
    DIFERENTE       reduce using rule 81 (tipo_variable -> FALSE .)
    IGUAL           reduce using rule 81 (tipo_variable -> FALSE .)
    MAYOR           reduce using rule 81 (tipo_variable -> FALSE .)
    MAYORIGUAL      reduce using rule 81 (tipo_variable -> FALSE .)
    MENOR           reduce using rule 81 (tipo_variable -> FALSE .)
    MENORIGUAL      reduce using rule 81 (tipo_variable -> FALSE .)
    PARDER          reduce using rule 81 (tipo_variable -> FALSE .)
    COMA            reduce using rule 81 (tipo_variable -> FALSE .)
    AND             reduce using rule 81 (tipo_variable -> FALSE .)
    OR              reduce using rule 81 (tipo_variable -> FALSE .)
    PUNTOYCOMA      reduce using rule 81 (tipo_variable -> FALSE .)


state 93

    (82) tipo_variable -> TRUE .

    COMENTARIO      reduce using rule 82 (tipo_variable -> TRUE .)
    NEWLINE         reduce using rule 82 (tipo_variable -> TRUE .)
    SUMA            reduce using rule 82 (tipo_variable -> TRUE .)
    RESTA           reduce using rule 82 (tipo_variable -> TRUE .)
    MULT            reduce using rule 82 (tipo_variable -> TRUE .)
    DIV             reduce using rule 82 (tipo_variable -> TRUE .)
    DIFERENTE       reduce using rule 82 (tipo_variable -> TRUE .)
    IGUAL           reduce using rule 82 (tipo_variable -> TRUE .)
    MAYOR           reduce using rule 82 (tipo_variable -> TRUE .)
    MAYORIGUAL      reduce using rule 82 (tipo_variable -> TRUE .)
    MENOR           reduce using rule 82 (tipo_variable -> TRUE .)
    MENORIGUAL      reduce using rule 82 (tipo_variable -> TRUE .)
    PARDER          reduce using rule 82 (tipo_variable -> TRUE .)
    COMA            reduce using rule 82 (tipo_variable -> TRUE .)
    AND             reduce using rule 82 (tipo_variable -> TRUE .)
    OR              reduce using rule 82 (tipo_variable -> TRUE .)
    PUNTOYCOMA      reduce using rule 82 (tipo_variable -> TRUE .)


state 94

    (83) tipo_variable -> llamado_funcion .

    COMENTARIO      reduce using rule 83 (tipo_variable -> llamado_funcion .)
    NEWLINE         reduce using rule 83 (tipo_variable -> llamado_funcion .)
    SUMA            reduce using rule 83 (tipo_variable -> llamado_funcion .)
    RESTA           reduce using rule 83 (tipo_variable -> llamado_funcion .)
    MULT            reduce using rule 83 (tipo_variable -> llamado_funcion .)
    DIV             reduce using rule 83 (tipo_variable -> llamado_funcion .)
    DIFERENTE       reduce using rule 83 (tipo_variable -> llamado_funcion .)
    IGUAL           reduce using rule 83 (tipo_variable -> llamado_funcion .)
    MAYOR           reduce using rule 83 (tipo_variable -> llamado_funcion .)
    MAYORIGUAL      reduce using rule 83 (tipo_variable -> llamado_funcion .)
    MENOR           reduce using rule 83 (tipo_variable -> llamado_funcion .)
    MENORIGUAL      reduce using rule 83 (tipo_variable -> llamado_funcion .)
    PARDER          reduce using rule 83 (tipo_variable -> llamado_funcion .)
    COMA            reduce using rule 83 (tipo_variable -> llamado_funcion .)
    AND             reduce using rule 83 (tipo_variable -> llamado_funcion .)
    OR              reduce using rule 83 (tipo_variable -> llamado_funcion .)
    PUNTOYCOMA      reduce using rule 83 (tipo_variable -> llamado_funcion .)


state 95

    (84) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (85) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (90) operador_aritmetico -> . SUMA
    (91) operador_aritmetico -> . RESTA
    (92) operador_aritmetico -> . MULT
    (93) operador_aritmetico -> . DIV

    SUMA            shift and go to state 138
    RESTA           shift and go to state 139
    MULT            shift and go to state 140
    DIV             shift and go to state 141

    operador_aritmetico            shift and go to state 137

state 96

    (86) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) vacio -> .
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica_extra            shift and go to state 142
    tipo_variable                  shift and go to state 143
    op_aritmetica                  shift and go to state 144
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 94

state 97

    (89) op_aritmetica_extra -> vacio .

    SUMA            reduce using rule 89 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 89 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 89 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 89 (op_aritmetica_extra -> vacio .)


state 98

    (45) pre_incdec -> INCREMENTAR NOMBRE .

    COMENTARIO      reduce using rule 45 (pre_incdec -> INCREMENTAR NOMBRE .)
    NEWLINE         reduce using rule 45 (pre_incdec -> INCREMENTAR NOMBRE .)
    PARDER          reduce using rule 45 (pre_incdec -> INCREMENTAR NOMBRE .)


state 99

    (46) pre_incdec -> DECREMENTAR NOMBRE .

    COMENTARIO      reduce using rule 46 (pre_incdec -> DECREMENTAR NOMBRE .)
    NEWLINE         reduce using rule 46 (pre_incdec -> DECREMENTAR NOMBRE .)
    PARDER          reduce using rule 46 (pre_incdec -> DECREMENTAR NOMBRE .)


state 100

    (11) parametro -> NOMBRE parametro_extra .

    PARDER          reduce using rule 11 (parametro -> NOMBRE parametro_extra .)


state 101

    (12) parametro_extra -> COMA . NOMBRE parametro_extra

    NOMBRE          shift and go to state 145


state 102

    (13) parametro_extra -> vacio .

    PARDER          reduce using rule 13 (parametro_extra -> vacio .)


state 103

    (5) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .

    LLAVEIZQ        reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)


state 104

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark . NEWLINE

    NEWLINE         shift and go to state 146


state 105

    (37) concat_instruccion -> indentacion instruccion . concat_instruccion
    (37) concat_instruccion -> . indentacion instruccion concat_instruccion
    (38) concat_instruccion -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    LLAVEDER        reduce using rule 96 (vacio -> .)
    NEWLINE         reduce using rule 96 (vacio -> .)
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)

    indentacion                    shift and go to state 55
    concat_instruccion             shift and go to state 147
    vacio                          shift and go to state 57

state 106

    (19) instruccion -> condicion_if comentario NEWLINE .

    TABULACION      reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    IF              reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    ELSE            reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    FOR             reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    WHILE           reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    PRINT           reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    READ            reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    DECVARIABLE     reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    NOMBRE          reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    RETURN          reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    COMENTARIO      reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    INCREMENTAR     reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    DECREMENTAR     reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    NEWLINE         reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)
    LLAVEDER        reduce using rule 19 (instruccion -> condicion_if comentario NEWLINE .)


state 107

    (20) instruccion -> condicion_else comentario NEWLINE .

    TABULACION      reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    IF              reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    ELSE            reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    FOR             reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    WHILE           reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    PRINT           reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    READ            reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    DECVARIABLE     reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    NOMBRE          reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    RETURN          reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    COMENTARIO      reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    INCREMENTAR     reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    DECREMENTAR     reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    NEWLINE         reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)
    LLAVEDER        reduce using rule 20 (instruccion -> condicion_else comentario NEWLINE .)


state 108

    (21) instruccion -> ciclo_for comentario NEWLINE .

    TABULACION      reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    IF              reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    ELSE            reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    FOR             reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    WHILE           reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    PRINT           reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    READ            reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    DECVARIABLE     reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    NOMBRE          reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    RETURN          reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    COMENTARIO      reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    INCREMENTAR     reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    DECREMENTAR     reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    NEWLINE         reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)
    LLAVEDER        reduce using rule 21 (instruccion -> ciclo_for comentario NEWLINE .)


state 109

    (22) instruccion -> ciclo_while comentario NEWLINE .

    TABULACION      reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    IF              reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    ELSE            reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    FOR             reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    WHILE           reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    PRINT           reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    READ            reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    DECVARIABLE     reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    NOMBRE          reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    RETURN          reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    COMENTARIO      reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    INCREMENTAR     reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    DECREMENTAR     reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    NEWLINE         reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)
    LLAVEDER        reduce using rule 22 (instruccion -> ciclo_while comentario NEWLINE .)


state 110

    (23) instruccion -> imprimir comentario NEWLINE .

    TABULACION      reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    IF              reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    ELSE            reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    FOR             reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    WHILE           reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    PRINT           reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    READ            reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    DECVARIABLE     reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    NOMBRE          reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    RETURN          reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    COMENTARIO      reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    INCREMENTAR     reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    DECREMENTAR     reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    NEWLINE         reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)
    LLAVEDER        reduce using rule 23 (instruccion -> imprimir comentario NEWLINE .)


state 111

    (24) instruccion -> leer comentario NEWLINE .

    TABULACION      reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    IF              reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    ELSE            reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    FOR             reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    WHILE           reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    PRINT           reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    READ            reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    DECVARIABLE     reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    NOMBRE          reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    RETURN          reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    COMENTARIO      reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    INCREMENTAR     reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    DECREMENTAR     reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    NEWLINE         reduce using rule 24 (instruccion -> leer comentario NEWLINE .)
    LLAVEDER        reduce using rule 24 (instruccion -> leer comentario NEWLINE .)


state 112

    (25) instruccion -> incdec comentario NEWLINE .

    TABULACION      reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    IF              reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    ELSE            reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    FOR             reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    WHILE           reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    PRINT           reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    READ            reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    DECVARIABLE     reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    NOMBRE          reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    RETURN          reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    COMENTARIO      reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    INCREMENTAR     reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    DECREMENTAR     reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    NEWLINE         reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)
    LLAVEDER        reduce using rule 25 (instruccion -> incdec comentario NEWLINE .)


state 113

    (26) instruccion -> dec_variable comentario NEWLINE .

    TABULACION      reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    IF              reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    ELSE            reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    FOR             reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    WHILE           reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    PRINT           reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    READ            reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    DECVARIABLE     reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    NOMBRE          reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    RETURN          reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    COMENTARIO      reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    INCREMENTAR     reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    DECREMENTAR     reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    NEWLINE         reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)
    LLAVEDER        reduce using rule 26 (instruccion -> dec_variable comentario NEWLINE .)


state 114

    (27) instruccion -> dec_vector comentario NEWLINE .

    TABULACION      reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    IF              reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    ELSE            reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    FOR             reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    WHILE           reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    PRINT           reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    READ            reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    RETURN          reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 27 (instruccion -> dec_vector comentario NEWLINE .)


state 115

    (28) instruccion -> asigna comentario NEWLINE .

    TABULACION      reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    IF              reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    ELSE            reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    FOR             reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    WHILE           reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    PRINT           reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    READ            reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    DECVARIABLE     reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    NOMBRE          reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    RETURN          reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    COMENTARIO      reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    INCREMENTAR     reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    DECREMENTAR     reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    NEWLINE         reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)
    LLAVEDER        reduce using rule 28 (instruccion -> asigna comentario NEWLINE .)


state 116

    (29) instruccion -> asignacion_vector comentario NEWLINE .

    TABULACION      reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    IF              reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    ELSE            reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    FOR             reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    WHILE           reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    PRINT           reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    READ            reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    RETURN          reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 29 (instruccion -> asignacion_vector comentario NEWLINE .)


state 117

    (30) instruccion -> llamado_funcion comentario NEWLINE .

    TABULACION      reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    IF              reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    ELSE            reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    FOR             reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    WHILE           reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    PRINT           reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    READ            reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    DECVARIABLE     reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    NOMBRE          reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    RETURN          reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    COMENTARIO      reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    INCREMENTAR     reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    DECREMENTAR     reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    NEWLINE         reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)
    LLAVEDER        reduce using rule 30 (instruccion -> llamado_funcion comentario NEWLINE .)


state 118

    (31) instruccion -> retorno comentario NEWLINE .

    TABULACION      reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    IF              reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    ELSE            reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    FOR             reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    WHILE           reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    PRINT           reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    READ            reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    DECVARIABLE     reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    NOMBRE          reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    RETURN          reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    COMENTARIO      reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    INCREMENTAR     reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    DECREMENTAR     reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    NEWLINE         reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)
    LLAVEDER        reduce using rule 31 (instruccion -> retorno comentario NEWLINE .)


state 119

    (39) condicion_if -> IF PARIZQ condicion . PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER

    PARDER          shift and go to state 148


state 120

    (74) condicion -> tipo_variable . operador_condicional tipo_variable condicion_extra
    (68) operador_condicional -> . DIFERENTE
    (69) operador_condicional -> . IGUAL
    (70) operador_condicional -> . MAYOR
    (71) operador_condicional -> . MAYORIGUAL
    (72) operador_condicional -> . MENOR
    (73) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 150
    IGUAL           shift and go to state 151
    MAYOR           shift and go to state 152
    MAYORIGUAL      shift and go to state 153
    MENOR           shift and go to state 154
    MENORIGUAL      shift and go to state 155

    operador_condicional           shift and go to state 149

state 121

    (40) condicion_else -> ELSE LLAVEIZQ NEWLINE . instrucciones NEWLINE LLAVEDER
    (35) instrucciones -> . indentacion instruccion concat_instruccion
    (36) instrucciones -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    NEWLINE         reduce using rule 96 (vacio -> .)
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)

    instrucciones                  shift and go to state 156
    indentacion                    shift and go to state 14
    vacio                          shift and go to state 15

state 122

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE . ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    ASIGNACION      shift and go to state 157


state 123

    (52) dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 52 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 52 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 124

    (53) dec_variable -> DECVARIABLE ASIGNACION tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 53 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 53 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 125

    (54) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER
    (56) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 158


state 126

    (55) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER
    (57) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 159


state 127

    (49) ciclo_while -> WHILE PARIZQ condicion . PARDER LLAVEIZQ

    PARDER          shift and go to state 160


state 128

    (50) imprimir -> PRINT PARIZQ tipo_variable . PARDER

    PARDER          shift and go to state 161


state 129

    (51) leer -> READ PARIZQ NOMBRE . PARDER

    PARDER          shift and go to state 162


state 130

    (60) asigna -> NOMBRE ASIGNACION op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 60 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 60 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 131

    (61) asigna -> NOMBRE ASIGNACION tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 61 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 61 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 132

    (62) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 163


state 133

    (63) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 164


state 134

    (14) llamado_funcion -> NOMBRE PARIZQ parametro_llamado . PARDER

    PARDER          shift and go to state 165


state 135

    (15) parametro_llamado -> vacio .

    PARDER          reduce using rule 15 (parametro_llamado -> vacio .)


state 136

    (16) parametro_llamado -> tipo_variable . parametro_llamado_extra
    (17) parametro_llamado_extra -> . COMA parametro_llamado
    (18) parametro_llamado_extra -> . vacio
    (96) vacio -> .

    COMA            shift and go to state 167
    PARDER          reduce using rule 96 (vacio -> .)

    parametro_llamado_extra        shift and go to state 166
    vacio                          shift and go to state 168

state 137

    (84) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    PARIZQ          shift and go to state 170
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 169
    llamado_funcion                shift and go to state 94

state 138

    (90) operador_aritmetico -> SUMA .

    PARIZQ          reduce using rule 90 (operador_aritmetico -> SUMA .)
    NOMBRE          reduce using rule 90 (operador_aritmetico -> SUMA .)
    DOUBLE          reduce using rule 90 (operador_aritmetico -> SUMA .)
    INT             reduce using rule 90 (operador_aritmetico -> SUMA .)
    STRING          reduce using rule 90 (operador_aritmetico -> SUMA .)
    FALSE           reduce using rule 90 (operador_aritmetico -> SUMA .)
    TRUE            reduce using rule 90 (operador_aritmetico -> SUMA .)


state 139

    (91) operador_aritmetico -> RESTA .

    PARIZQ          reduce using rule 91 (operador_aritmetico -> RESTA .)
    NOMBRE          reduce using rule 91 (operador_aritmetico -> RESTA .)
    DOUBLE          reduce using rule 91 (operador_aritmetico -> RESTA .)
    INT             reduce using rule 91 (operador_aritmetico -> RESTA .)
    STRING          reduce using rule 91 (operador_aritmetico -> RESTA .)
    FALSE           reduce using rule 91 (operador_aritmetico -> RESTA .)
    TRUE            reduce using rule 91 (operador_aritmetico -> RESTA .)


state 140

    (92) operador_aritmetico -> MULT .

    PARIZQ          reduce using rule 92 (operador_aritmetico -> MULT .)
    NOMBRE          reduce using rule 92 (operador_aritmetico -> MULT .)
    DOUBLE          reduce using rule 92 (operador_aritmetico -> MULT .)
    INT             reduce using rule 92 (operador_aritmetico -> MULT .)
    STRING          reduce using rule 92 (operador_aritmetico -> MULT .)
    FALSE           reduce using rule 92 (operador_aritmetico -> MULT .)
    TRUE            reduce using rule 92 (operador_aritmetico -> MULT .)


state 141

    (93) operador_aritmetico -> DIV .

    PARIZQ          reduce using rule 93 (operador_aritmetico -> DIV .)
    NOMBRE          reduce using rule 93 (operador_aritmetico -> DIV .)
    DOUBLE          reduce using rule 93 (operador_aritmetico -> DIV .)
    INT             reduce using rule 93 (operador_aritmetico -> DIV .)
    STRING          reduce using rule 93 (operador_aritmetico -> DIV .)
    FALSE           reduce using rule 93 (operador_aritmetico -> DIV .)
    TRUE            reduce using rule 93 (operador_aritmetico -> DIV .)


state 142

    (86) op_aritmetica -> PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (84) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (85) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (90) operador_aritmetico -> . SUMA
    (91) operador_aritmetico -> . RESTA
    (92) operador_aritmetico -> . MULT
    (93) operador_aritmetico -> . DIV

    SUMA            shift and go to state 138
    RESTA           shift and go to state 139
    MULT            shift and go to state 140
    DIV             shift and go to state 141

    operador_aritmetico            shift and go to state 171

state 143

    (87) op_aritmetica_extra -> tipo_variable .

    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 144

    (88) op_aritmetica_extra -> op_aritmetica .

    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 145

    (12) parametro_extra -> COMA NOMBRE . parametro_extra
    (12) parametro_extra -> . COMA NOMBRE parametro_extra
    (13) parametro_extra -> . vacio
    (96) vacio -> .

    COMA            shift and go to state 101
    PARDER          reduce using rule 96 (vacio -> .)

    parametro_extra                shift and go to state 172
    vacio                          shift and go to state 102

state 146

    (1) Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE .

    $end            reduce using rule 1 (Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE .)
    NEWLINE         reduce using rule 1 (Niark -> definicion_funcion LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE Niark NEWLINE .)


state 147

    (37) concat_instruccion -> indentacion instruccion concat_instruccion .

    LLAVEDER        reduce using rule 37 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 37 (concat_instruccion -> indentacion instruccion concat_instruccion .)


state 148

    (39) condicion_if -> IF PARIZQ condicion PARDER . LLAVEIZQ NEWLINE instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 173


state 149

    (74) condicion -> tipo_variable operador_condicional . tipo_variable condicion_extra
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 174
    llamado_funcion                shift and go to state 94

state 150

    (68) operador_condicional -> DIFERENTE .

    NOMBRE          reduce using rule 68 (operador_condicional -> DIFERENTE .)
    DOUBLE          reduce using rule 68 (operador_condicional -> DIFERENTE .)
    INT             reduce using rule 68 (operador_condicional -> DIFERENTE .)
    STRING          reduce using rule 68 (operador_condicional -> DIFERENTE .)
    FALSE           reduce using rule 68 (operador_condicional -> DIFERENTE .)
    TRUE            reduce using rule 68 (operador_condicional -> DIFERENTE .)


state 151

    (69) operador_condicional -> IGUAL .

    NOMBRE          reduce using rule 69 (operador_condicional -> IGUAL .)
    DOUBLE          reduce using rule 69 (operador_condicional -> IGUAL .)
    INT             reduce using rule 69 (operador_condicional -> IGUAL .)
    STRING          reduce using rule 69 (operador_condicional -> IGUAL .)
    FALSE           reduce using rule 69 (operador_condicional -> IGUAL .)
    TRUE            reduce using rule 69 (operador_condicional -> IGUAL .)


state 152

    (70) operador_condicional -> MAYOR .

    NOMBRE          reduce using rule 70 (operador_condicional -> MAYOR .)
    DOUBLE          reduce using rule 70 (operador_condicional -> MAYOR .)
    INT             reduce using rule 70 (operador_condicional -> MAYOR .)
    STRING          reduce using rule 70 (operador_condicional -> MAYOR .)
    FALSE           reduce using rule 70 (operador_condicional -> MAYOR .)
    TRUE            reduce using rule 70 (operador_condicional -> MAYOR .)


state 153

    (71) operador_condicional -> MAYORIGUAL .

    NOMBRE          reduce using rule 71 (operador_condicional -> MAYORIGUAL .)
    DOUBLE          reduce using rule 71 (operador_condicional -> MAYORIGUAL .)
    INT             reduce using rule 71 (operador_condicional -> MAYORIGUAL .)
    STRING          reduce using rule 71 (operador_condicional -> MAYORIGUAL .)
    FALSE           reduce using rule 71 (operador_condicional -> MAYORIGUAL .)
    TRUE            reduce using rule 71 (operador_condicional -> MAYORIGUAL .)


state 154

    (72) operador_condicional -> MENOR .

    NOMBRE          reduce using rule 72 (operador_condicional -> MENOR .)
    DOUBLE          reduce using rule 72 (operador_condicional -> MENOR .)
    INT             reduce using rule 72 (operador_condicional -> MENOR .)
    STRING          reduce using rule 72 (operador_condicional -> MENOR .)
    FALSE           reduce using rule 72 (operador_condicional -> MENOR .)
    TRUE            reduce using rule 72 (operador_condicional -> MENOR .)


state 155

    (73) operador_condicional -> MENORIGUAL .

    NOMBRE          reduce using rule 73 (operador_condicional -> MENORIGUAL .)
    DOUBLE          reduce using rule 73 (operador_condicional -> MENORIGUAL .)
    INT             reduce using rule 73 (operador_condicional -> MENORIGUAL .)
    STRING          reduce using rule 73 (operador_condicional -> MENORIGUAL .)
    FALSE           reduce using rule 73 (operador_condicional -> MENORIGUAL .)
    TRUE            reduce using rule 73 (operador_condicional -> MENORIGUAL .)


state 156

    (40) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones . NEWLINE LLAVEDER

    NEWLINE         shift and go to state 175


state 157

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION . INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    INT             shift and go to state 176


state 158

    (54) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .
    (56) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable

    COMENTARIO      reduce using rule 54 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)
    NEWLINE         reduce using rule 54 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)
    ASIGNACION      shift and go to state 177


state 159

    (55) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .
    (57) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable

    COMENTARIO      reduce using rule 55 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)
    NEWLINE         reduce using rule 55 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)
    ASIGNACION      shift and go to state 178


state 160

    (49) ciclo_while -> WHILE PARIZQ condicion PARDER . LLAVEIZQ

    LLAVEIZQ        shift and go to state 179


state 161

    (50) imprimir -> PRINT PARIZQ tipo_variable PARDER .

    COMENTARIO      reduce using rule 50 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)
    NEWLINE         reduce using rule 50 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)


state 162

    (51) leer -> READ PARIZQ NOMBRE PARDER .

    COMENTARIO      reduce using rule 51 (leer -> READ PARIZQ NOMBRE PARDER .)
    NEWLINE         reduce using rule 51 (leer -> READ PARIZQ NOMBRE PARDER .)


state 163

    (62) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 180


state 164

    (63) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 181


state 165

    (14) llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .

    COMENTARIO      reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    NEWLINE         reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    SUMA            reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    RESTA           reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MULT            reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIV             reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIFERENTE       reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    IGUAL           reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYOR           reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYORIGUAL      reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENOR           reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENORIGUAL      reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PARDER          reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    COMA            reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    AND             reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    OR              reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PUNTOYCOMA      reduce using rule 14 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)


state 166

    (16) parametro_llamado -> tipo_variable parametro_llamado_extra .

    PARDER          reduce using rule 16 (parametro_llamado -> tipo_variable parametro_llamado_extra .)


state 167

    (17) parametro_llamado_extra -> COMA . parametro_llamado
    (15) parametro_llamado -> . vacio
    (16) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (96) vacio -> .
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    PARDER          reduce using rule 96 (vacio -> .)
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    parametro_llamado              shift and go to state 182
    vacio                          shift and go to state 135
    tipo_variable                  shift and go to state 136
    llamado_funcion                shift and go to state 94

state 168

    (18) parametro_llamado_extra -> vacio .

    PARDER          reduce using rule 18 (parametro_llamado_extra -> vacio .)


state 169

    (84) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    COMENTARIO      reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    NEWLINE         reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    SUMA            reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 170

    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (96) vacio -> .
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    PARIZQ          shift and go to state 96
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica_extra            shift and go to state 183
    tipo_variable                  shift and go to state 143
    op_aritmetica                  shift and go to state 144
    vacio                          shift and go to state 97
    llamado_funcion                shift and go to state 94

state 171

    (86) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (84) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    PARIZQ          shift and go to state 170
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 184
    llamado_funcion                shift and go to state 94

state 172

    (12) parametro_extra -> COMA NOMBRE parametro_extra .

    PARDER          reduce using rule 12 (parametro_extra -> COMA NOMBRE parametro_extra .)


state 173

    (39) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ . NEWLINE instrucciones LLAVEDER

    NEWLINE         shift and go to state 185


state 174

    (74) condicion -> tipo_variable operador_condicional tipo_variable . condicion_extra
    (75) condicion_extra -> . operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
    (76) condicion_extra -> . vacio
    (94) operador_logico -> . AND
    (95) operador_logico -> . OR
    (96) vacio -> .

    AND             shift and go to state 189
    OR              shift and go to state 190
    PARDER          reduce using rule 96 (vacio -> .)
    PUNTOYCOMA      reduce using rule 96 (vacio -> .)

    condicion_extra                shift and go to state 186
    operador_logico                shift and go to state 187
    vacio                          shift and go to state 188

state 175

    (40) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE . LLAVEDER

    LLAVEDER        shift and go to state 191


state 176

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT . PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    PUNTOYCOMA      shift and go to state 192


state 177

    (56) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (96) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica                  shift and go to state 193
    tipo_variable                  shift and go to state 194
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 94
    vacio                          shift and go to state 97

state 178

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (96) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica                  shift and go to state 195
    tipo_variable                  shift and go to state 196
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 94
    vacio                          shift and go to state 97

state 179

    (49) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .

    COMENTARIO      reduce using rule 49 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .)
    NEWLINE         reduce using rule 49 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .)


state 180

    (62) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (96) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica                  shift and go to state 197
    tipo_variable                  shift and go to state 198
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 94
    vacio                          shift and go to state 97

state 181

    (63) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (84) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (85) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (86) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (87) op_aritmetica_extra -> . tipo_variable
    (88) op_aritmetica_extra -> . op_aritmetica
    (89) op_aritmetica_extra -> . vacio
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (96) vacio -> .

    PARIZQ          shift and go to state 96
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93
    SUMA            reduce using rule 96 (vacio -> .)
    RESTA           reduce using rule 96 (vacio -> .)
    MULT            reduce using rule 96 (vacio -> .)
    DIV             reduce using rule 96 (vacio -> .)

    op_aritmetica                  shift and go to state 199
    tipo_variable                  shift and go to state 200
    op_aritmetica_extra            shift and go to state 95
    llamado_funcion                shift and go to state 94
    vacio                          shift and go to state 97

state 182

    (17) parametro_llamado_extra -> COMA parametro_llamado .

    PARDER          reduce using rule 17 (parametro_llamado_extra -> COMA parametro_llamado .)


state 183

    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (84) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (85) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (90) operador_aritmetico -> . SUMA
    (91) operador_aritmetico -> . RESTA
    (92) operador_aritmetico -> . MULT
    (93) operador_aritmetico -> . DIV

    SUMA            shift and go to state 138
    RESTA           shift and go to state 139
    MULT            shift and go to state 140
    DIV             shift and go to state 141

    operador_aritmetico            shift and go to state 201

state 184

    (86) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (84) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 202
    SUMA            reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 185

    (39) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE . instrucciones LLAVEDER
    (35) instrucciones -> . indentacion instruccion concat_instruccion
    (36) instrucciones -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    LLAVEDER        reduce using rule 96 (vacio -> .)
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)
    NEWLINE         reduce using rule 96 (vacio -> .)

    instrucciones                  shift and go to state 203
    indentacion                    shift and go to state 14
    vacio                          shift and go to state 15

state 186

    (74) condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .

    PARDER          reduce using rule 74 (condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .)
    PUNTOYCOMA      reduce using rule 74 (condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .)


state 187

    (75) condicion_extra -> operador_logico . tipo_variable operador_condicional tipo_variable condicion_extra
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 204
    llamado_funcion                shift and go to state 94

state 188

    (76) condicion_extra -> vacio .

    PARDER          reduce using rule 76 (condicion_extra -> vacio .)
    PUNTOYCOMA      reduce using rule 76 (condicion_extra -> vacio .)


state 189

    (94) operador_logico -> AND .

    NOMBRE          reduce using rule 94 (operador_logico -> AND .)
    DOUBLE          reduce using rule 94 (operador_logico -> AND .)
    INT             reduce using rule 94 (operador_logico -> AND .)
    STRING          reduce using rule 94 (operador_logico -> AND .)
    FALSE           reduce using rule 94 (operador_logico -> AND .)
    TRUE            reduce using rule 94 (operador_logico -> AND .)


state 190

    (95) operador_logico -> OR .

    NOMBRE          reduce using rule 95 (operador_logico -> OR .)
    DOUBLE          reduce using rule 95 (operador_logico -> OR .)
    INT             reduce using rule 95 (operador_logico -> OR .)
    STRING          reduce using rule 95 (operador_logico -> OR .)
    FALSE           reduce using rule 95 (operador_logico -> OR .)
    TRUE            reduce using rule 95 (operador_logico -> OR .)


state 191

    (40) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER .

    COMENTARIO      reduce using rule 40 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER .)
    NEWLINE         reduce using rule 40 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones NEWLINE LLAVEDER .)


state 192

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA . condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE
    (74) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    condicion                      shift and go to state 205
    tipo_variable                  shift and go to state 120
    llamado_funcion                shift and go to state 94

state 193

    (56) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 56 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 56 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 194

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 195

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 196

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 197

    (62) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 62 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 62 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 198

    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 64 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 64 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 199

    (63) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .
    (88) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 63 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 63 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 88 (op_aritmetica_extra -> op_aritmetica .)


state 200

    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (87) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 65 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 65 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 87 (op_aritmetica_extra -> tipo_variable .)


state 201

    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (84) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    PARIZQ          shift and go to state 170
    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 206
    llamado_funcion                shift and go to state 94

state 202

    (86) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    COMENTARIO      reduce using rule 86 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    NEWLINE         reduce using rule 86 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 86 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 86 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 86 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 86 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 203

    (39) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones . LLAVEDER

    LLAVEDER        shift and go to state 207


state 204

    (75) condicion_extra -> operador_logico tipo_variable . operador_condicional tipo_variable condicion_extra
    (68) operador_condicional -> . DIFERENTE
    (69) operador_condicional -> . IGUAL
    (70) operador_condicional -> . MAYOR
    (71) operador_condicional -> . MAYORIGUAL
    (72) operador_condicional -> . MENOR
    (73) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 150
    IGUAL           shift and go to state 151
    MAYOR           shift and go to state 152
    MAYORIGUAL      shift and go to state 153
    MENOR           shift and go to state 154
    MENORIGUAL      shift and go to state 155

    operador_condicional           shift and go to state 208

state 205

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion . PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    PUNTOYCOMA      shift and go to state 209


state 206

    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (84) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 210
    SUMA            reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 84 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 207

    (39) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER .

    COMENTARIO      reduce using rule 39 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER .)
    NEWLINE         reduce using rule 39 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER .)


state 208

    (75) condicion_extra -> operador_logico tipo_variable operador_condicional . tipo_variable condicion_extra
    (77) tipo_variable -> . NOMBRE
    (78) tipo_variable -> . DOUBLE
    (79) tipo_variable -> . INT
    (80) tipo_variable -> . STRING
    (81) tipo_variable -> . FALSE
    (82) tipo_variable -> . TRUE
    (83) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 88
    DOUBLE          shift and go to state 89
    INT             shift and go to state 90
    STRING          shift and go to state 91
    FALSE           shift and go to state 92
    TRUE            shift and go to state 93

    tipo_variable                  shift and go to state 211
    llamado_funcion                shift and go to state 94

state 209

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA . incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE
    (43) incdec -> . pre_incdec
    (44) incdec -> . post_incdec
    (45) pre_incdec -> . INCREMENTAR NOMBRE
    (46) pre_incdec -> . DECREMENTAR NOMBRE
    (47) post_incdec -> . NOMBRE INCREMENTAR
    (48) post_incdec -> . NOMBRE DECREMENTAR

    INCREMENTAR     shift and go to state 47
    DECREMENTAR     shift and go to state 48
    NOMBRE          shift and go to state 213

    incdec                         shift and go to state 212
    pre_incdec                     shift and go to state 42
    post_incdec                    shift and go to state 43

state 210

    (85) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    COMENTARIO      reduce using rule 85 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    NEWLINE         reduce using rule 85 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 85 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 85 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 85 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 85 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 211

    (75) condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable . condicion_extra
    (75) condicion_extra -> . operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
    (76) condicion_extra -> . vacio
    (94) operador_logico -> . AND
    (95) operador_logico -> . OR
    (96) vacio -> .

    AND             shift and go to state 189
    OR              shift and go to state 190
    PARDER          reduce using rule 96 (vacio -> .)
    PUNTOYCOMA      reduce using rule 96 (vacio -> .)

    operador_logico                shift and go to state 187
    condicion_extra                shift and go to state 214
    vacio                          shift and go to state 188

state 212

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec . PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    PARDER          shift and go to state 215


state 213

    (47) post_incdec -> NOMBRE . INCREMENTAR
    (48) post_incdec -> NOMBRE . DECREMENTAR

    INCREMENTAR     shift and go to state 84
    DECREMENTAR     shift and go to state 85


state 214

    (75) condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .

    PARDER          reduce using rule 75 (condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .)
    PUNTOYCOMA      reduce using rule 75 (condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .)


state 215

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER . LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE

    LLAVEIZQ        shift and go to state 216


state 216

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ . NEWLINE instrucciones LLAVEDER NEWLINE

    NEWLINE         shift and go to state 217


state 217

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE . instrucciones LLAVEDER NEWLINE
    (35) instrucciones -> . indentacion instruccion concat_instruccion
    (36) instrucciones -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (96) vacio -> .

    TABULACION      shift and go to state 16
    LLAVEDER        reduce using rule 96 (vacio -> .)
    IF              reduce using rule 96 (vacio -> .)
    ELSE            reduce using rule 96 (vacio -> .)
    FOR             reduce using rule 96 (vacio -> .)
    WHILE           reduce using rule 96 (vacio -> .)
    PRINT           reduce using rule 96 (vacio -> .)
    READ            reduce using rule 96 (vacio -> .)
    DECVARIABLE     reduce using rule 96 (vacio -> .)
    NOMBRE          reduce using rule 96 (vacio -> .)
    RETURN          reduce using rule 96 (vacio -> .)
    COMENTARIO      reduce using rule 96 (vacio -> .)
    INCREMENTAR     reduce using rule 96 (vacio -> .)
    DECREMENTAR     reduce using rule 96 (vacio -> .)
    NEWLINE         reduce using rule 96 (vacio -> .)

    instrucciones                  shift and go to state 218
    indentacion                    shift and go to state 14
    vacio                          shift and go to state 15

state 218

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones . LLAVEDER NEWLINE

    LLAVEDER        shift and go to state 219


state 219

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER . NEWLINE

    NEWLINE         shift and go to state 220


state 220

    (42) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE .

    COMENTARIO      reduce using rule 42 (ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE .)
    NEWLINE         reduce using rule 42 (ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ NEWLINE instrucciones LLAVEDER NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 15 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 15
WARNING: reduce/reduce conflict in state 57 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (concat_instruccion -> vacio) in state 57
