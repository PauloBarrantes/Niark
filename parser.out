Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    IMPORT
    SWITCH

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
Rule 2     Niark -> instrucciones Niark
Rule 3     Niark -> vacio
Rule 4     indentacion -> TABULACION indentacion
Rule 5     indentacion -> vacio
Rule 6     definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER
Rule 7     dominio -> PRIVATE
Rule 8     dominio -> PUBLIC
Rule 9     tipo_return -> VOID
Rule 10    tipo_return -> FUNCTION
Rule 11    parametro -> vacio
Rule 12    parametro -> NOMBRE parametro_extra
Rule 13    parametro_extra -> COMA NOMBRE parametro_extra
Rule 14    parametro_extra -> vacio
Rule 15    llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER
Rule 16    llamado_funcion -> NOMBRE PARIZQ vacio PARDER
Rule 17    parametro_llamado -> tipo_variable parametro_llamado_extra
Rule 18    parametro_llamado -> op_aritmetica parametro_llamado_extra
Rule 19    parametro_llamado_extra -> COMA parametro_llamado
Rule 20    parametro_llamado_extra -> vacio
Rule 21    instruccion -> condicion_if comentario NEWLINE
Rule 22    instruccion -> condicion_else comentario NEWLINE
Rule 23    instruccion -> ciclo_for comentario NEWLINE
Rule 24    instruccion -> ciclo_while comentario NEWLINE
Rule 25    instruccion -> imprimir comentario NEWLINE
Rule 26    instruccion -> leer comentario NEWLINE
Rule 27    instruccion -> incdec comentario NEWLINE
Rule 28    instruccion -> dec_variable comentario NEWLINE
Rule 29    instruccion -> dec_vector comentario NEWLINE
Rule 30    instruccion -> asigna comentario NEWLINE
Rule 31    instruccion -> asignacion_vector comentario NEWLINE
Rule 32    instruccion -> llamado_funcion comentario NEWLINE
Rule 33    instruccion -> retorno comentario NEWLINE
Rule 34    instruccion -> comentario NEWLINE
Rule 35    comentario -> COMENTARIO
Rule 36    comentario -> vacio
Rule 37    instrucciones -> indentacion instruccion concat_instruccion
Rule 38    instrucciones -> vacio
Rule 39    concat_instruccion -> indentacion instruccion concat_instruccion
Rule 40    concat_instruccion -> vacio
Rule 41    condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
Rule 42    condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
Rule 43    condicion_else -> ELSE condicion_if
Rule 44    ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 45    incdec -> pre_incdec
Rule 46    incdec -> post_incdec
Rule 47    pre_incdec -> INCREMENTAR NOMBRE
Rule 48    pre_incdec -> DECREMENTAR NOMBRE
Rule 49    post_incdec -> NOMBRE INCREMENTAR
Rule 50    post_incdec -> NOMBRE DECREMENTAR
Rule 51    ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ
Rule 52    imprimir -> PRINT PARIZQ tipo_variable PARDER
Rule 53    leer -> READ PARIZQ NOMBRE PARDER
Rule 54    dec_variable -> DECVARIABLE ASIGNACION op_aritmetica
Rule 55    dec_variable -> DECVARIABLE ASIGNACION tipo_variable
Rule 56    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
Rule 57    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER
Rule 58    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 59    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 60    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 61    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 62    asigna -> NOMBRE ASIGNACION op_aritmetica
Rule 63    asigna -> NOMBRE ASIGNACION tipo_variable
Rule 64    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 65    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 66    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 67    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 68    retorno -> RETURN tipo_variable
Rule 69    retorno -> RETURN op_aritmetica
Rule 70    operador_condicional -> DIFERENTE
Rule 71    operador_condicional -> IGUAL
Rule 72    operador_condicional -> MAYOR
Rule 73    operador_condicional -> MAYORIGUAL
Rule 74    operador_condicional -> MENOR
Rule 75    operador_condicional -> MENORIGUAL
Rule 76    condicion -> comparables operador_condicional comparables condicion_extra
Rule 77    condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
Rule 78    condicion_extra -> operador_logico condicion
Rule 79    condicion_extra -> vacio
Rule 80    comparables -> tipo_variable
Rule 81    comparables -> op_aritmetica
Rule 82    tipo_variable -> NOMBRE
Rule 83    tipo_variable -> DOUBLE
Rule 84    tipo_variable -> INT
Rule 85    tipo_variable -> STRING
Rule 86    tipo_variable -> FALSE
Rule 87    tipo_variable -> TRUE
Rule 88    tipo_variable -> llamado_funcion
Rule 89    op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable
Rule 90    op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 91    op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
Rule 92    op_aritmetica_extra -> tipo_variable
Rule 93    op_aritmetica_extra -> op_aritmetica
Rule 94    op_aritmetica_extra -> vacio
Rule 95    operador_aritmetico -> SUMA
Rule 96    operador_aritmetico -> RESTA
Rule 97    operador_aritmetico -> MULT
Rule 98    operador_aritmetico -> DIV
Rule 99    operador_logico -> AND
Rule 100   operador_logico -> OR
Rule 101   vacio -> <empty>

Terminals, with rules where they appear

AND                  : 99
ASIGNACION           : 54 55 58 59 60 61 62 63 64 65 66 67
BREAK                : 
CASE                 : 
COMA                 : 13 19
COMENTARIO           : 35
CORCHETEDER          : 56 57 58 59 60 61 64 65 66 67
CORCHETEIZQ          : 56 57 58 59 60 61 64 65 66 67
DECREMENTAR          : 48 50
DECVARIABLE          : 54 55 56 57 58 59 60 61
DIFERENTE            : 70
DIV                  : 98
DOUBLE               : 83
ELSE                 : 42 43
FALSE                : 86
FOR                  : 44
FUNCTION             : 10
IF                   : 41
IGUAL                : 71
IMPORT               : 
INCREMENTAR          : 47 49
INT                  : 57 59 61 65 67 84
LLAVEDER             : 1 41 42 44
LLAVEIZQ             : 1 41 42 44 51
MAYOR                : 72
MAYORIGUAL           : 73
MENOR                : 74
MENORIGUAL           : 75
MULT                 : 97
NEWLINE              : 21 22 23 24 25 26 27 28 29 30 31 32 33 34 41 42
NOMBRE               : 6 12 13 15 16 47 48 49 50 53 56 58 60 62 63 64 64 65 66 66 67 82
OR                   : 100
PARDER               : 6 15 16 41 44 51 52 53 77 90 91
PARIZQ               : 6 15 16 41 44 51 52 53 77 90 91
PRINT                : 52
PRIVATE              : 7
PUBLIC               : 8
PUNTOYCOMA           : 44 44
READ                 : 53
RESTA                : 96
RETURN               : 68 69
STRING               : 85
SUMA                 : 95
SWITCH               : 
TABULACION           : 4
TRUE                 : 87
VOID                 : 9
WHILE                : 51
error                : 

Nonterminals, with rules where they appear

Niark                : 1 2 0
asigna               : 30
asignacion_vector    : 31
ciclo_for            : 23
ciclo_while          : 24
comentario           : 21 22 23 24 25 26 27 28 29 30 31 32 33 34
comparables          : 76 76 77 77
concat_instruccion   : 37 39
condicion            : 41 44 51 78
condicion_else       : 22
condicion_extra      : 76 77 77
condicion_if         : 21 43
dec_variable         : 28 44
dec_vector           : 29
definicion_funcion   : 1
dominio              : 6
imprimir             : 25
incdec               : 27 44
indentacion          : 4 37 39 41 42
instruccion          : 37 39
instrucciones        : 1 2 41 42 44
leer                 : 26
llamado_funcion      : 32 88
op_aritmetica        : 18 54 58 59 62 64 65 69 81 93
op_aritmetica_extra  : 89 90 90 91
operador_aritmetico  : 89 90 90 91
operador_condicional : 76 77
operador_logico      : 78
parametro            : 6
parametro_extra      : 12 13
parametro_llamado    : 15 19
parametro_llamado_extra : 17 18
post_incdec          : 46
pre_incdec           : 45
retorno              : 33
tipo_return          : 6
tipo_variable        : 17 52 55 60 61 63 66 67 68 80 89 90 91 92
vacio                : 3 5 11 14 16 20 36 38 40 79 94

Parsing method: LALR

state 0

    (0) S' -> . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (6) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (101) vacio -> .
    (7) dominio -> . PRIVATE
    (8) dominio -> . PUBLIC
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 101 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 101 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    Niark                          shift and go to state 1
    definicion_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 1

    (0) S' -> Niark .



state 2

    (1) Niark -> definicion_funcion . LLAVEIZQ instrucciones LLAVEDER Niark

    LLAVEIZQ        shift and go to state 10


state 3

    (2) Niark -> instrucciones . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (6) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (101) vacio -> .
    (7) dominio -> . PRIVATE
    (8) dominio -> . PUBLIC
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 101 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 101 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    instrucciones                  shift and go to state 3
    Niark                          shift and go to state 11
    definicion_funcion             shift and go to state 2
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 4

    (3) Niark -> vacio .
    (38) instrucciones -> vacio .
    (5) indentacion -> vacio .

  ! reduce/reduce conflict for $end resolved using rule 3 (Niark -> vacio .)
  ! reduce/reduce conflict for IF resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECVARIABLE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NOMBRE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for INCREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 5 (indentacion -> vacio .)
    $end            reduce using rule 3 (Niark -> vacio .)
    PRIVATE         reduce using rule 38 (instrucciones -> vacio .)
    PUBLIC          reduce using rule 38 (instrucciones -> vacio .)
    TABULACION      reduce using rule 38 (instrucciones -> vacio .)
    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)

  ! IF              [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! ELSE            [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! FOR             [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! WHILE           [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! PRINT           [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! READ            [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! DECVARIABLE     [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! NOMBRE          [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! RETURN          [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! COMENTARIO      [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! INCREMENTAR     [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! DECREMENTAR     [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! NEWLINE         [ reduce using rule 38 (instrucciones -> vacio .) ]
  ! $end            [ reduce using rule 38 (instrucciones -> vacio .) ]


state 5

    (6) definicion_funcion -> dominio . tipo_return NOMBRE PARIZQ parametro PARDER
    (9) tipo_return -> . VOID
    (10) tipo_return -> . FUNCTION

    VOID            shift and go to state 13
    FUNCTION        shift and go to state 14

    tipo_return                    shift and go to state 12

state 6

    (37) instrucciones -> indentacion . instruccion concat_instruccion
    (21) instruccion -> . condicion_if comentario NEWLINE
    (22) instruccion -> . condicion_else comentario NEWLINE
    (23) instruccion -> . ciclo_for comentario NEWLINE
    (24) instruccion -> . ciclo_while comentario NEWLINE
    (25) instruccion -> . imprimir comentario NEWLINE
    (26) instruccion -> . leer comentario NEWLINE
    (27) instruccion -> . incdec comentario NEWLINE
    (28) instruccion -> . dec_variable comentario NEWLINE
    (29) instruccion -> . dec_vector comentario NEWLINE
    (30) instruccion -> . asigna comentario NEWLINE
    (31) instruccion -> . asignacion_vector comentario NEWLINE
    (32) instruccion -> . llamado_funcion comentario NEWLINE
    (33) instruccion -> . retorno comentario NEWLINE
    (34) instruccion -> . comentario NEWLINE
    (41) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (42) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (43) condicion_else -> . ELSE condicion_if
    (44) ciclo_for -> . FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (51) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ
    (52) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (53) leer -> . READ PARIZQ NOMBRE PARDER
    (45) incdec -> . pre_incdec
    (46) incdec -> . post_incdec
    (54) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (55) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (56) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (60) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (61) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (62) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (63) asigna -> . NOMBRE ASIGNACION tipo_variable
    (64) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (65) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (66) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (67) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (68) retorno -> . RETURN tipo_variable
    (69) retorno -> . RETURN op_aritmetica
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (47) pre_incdec -> . INCREMENTAR NOMBRE
    (48) pre_incdec -> . DECREMENTAR NOMBRE
    (49) post_incdec -> . NOMBRE INCREMENTAR
    (50) post_incdec -> . NOMBRE DECREMENTAR
    (101) vacio -> .

    IF              shift and go to state 30
    ELSE            shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    PRINT           shift and go to state 34
    READ            shift and go to state 35
    DECVARIABLE     shift and go to state 39
    NOMBRE          shift and go to state 36
    RETURN          shift and go to state 41
    COMENTARIO      shift and go to state 42
    INCREMENTAR     shift and go to state 43
    DECREMENTAR     shift and go to state 44
    NEWLINE         reduce using rule 101 (vacio -> .)

    instruccion                    shift and go to state 15
    condicion_if                   shift and go to state 16
    comentario                     shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    asigna                         shift and go to state 26
    asignacion_vector              shift and go to state 27
    llamado_funcion                shift and go to state 28
    retorno                        shift and go to state 29
    pre_incdec                     shift and go to state 37
    post_incdec                    shift and go to state 38
    vacio                          shift and go to state 40

state 7

    (7) dominio -> PRIVATE .

    VOID            reduce using rule 7 (dominio -> PRIVATE .)
    FUNCTION        reduce using rule 7 (dominio -> PRIVATE .)


state 8

    (8) dominio -> PUBLIC .

    VOID            reduce using rule 8 (dominio -> PUBLIC .)
    FUNCTION        reduce using rule 8 (dominio -> PUBLIC .)


state 9

    (4) indentacion -> TABULACION . indentacion
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

    TABULACION      shift and go to state 9
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)
    LLAVEDER        reduce using rule 101 (vacio -> .)

    indentacion                    shift and go to state 45
    vacio                          shift and go to state 46

state 10

    (1) Niark -> definicion_funcion LLAVEIZQ . instrucciones LLAVEDER Niark
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)

    instrucciones                  shift and go to state 47
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 48

state 11

    (2) Niark -> instrucciones Niark .

    $end            reduce using rule 2 (Niark -> instrucciones Niark .)


state 12

    (6) definicion_funcion -> dominio tipo_return . NOMBRE PARIZQ parametro PARDER

    NOMBRE          shift and go to state 49


state 13

    (9) tipo_return -> VOID .

    NOMBRE          reduce using rule 9 (tipo_return -> VOID .)


state 14

    (10) tipo_return -> FUNCTION .

    NOMBRE          reduce using rule 10 (tipo_return -> FUNCTION .)


state 15

    (37) instrucciones -> indentacion instruccion . concat_instruccion
    (39) concat_instruccion -> . indentacion instruccion concat_instruccion
    (40) concat_instruccion -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    PRIVATE         reduce using rule 101 (vacio -> .)
    PUBLIC          reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)
    $end            reduce using rule 101 (vacio -> .)
    LLAVEDER        reduce using rule 101 (vacio -> .)

  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    indentacion                    shift and go to state 50
    concat_instruccion             shift and go to state 51
    vacio                          shift and go to state 52

state 16

    (21) instruccion -> condicion_if . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 53
    vacio                          shift and go to state 40

state 17

    (34) instruccion -> comentario . NEWLINE

    NEWLINE         shift and go to state 54


state 18

    (22) instruccion -> condicion_else . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 55
    vacio                          shift and go to state 40

state 19

    (23) instruccion -> ciclo_for . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 56
    vacio                          shift and go to state 40

state 20

    (24) instruccion -> ciclo_while . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 57
    vacio                          shift and go to state 40

state 21

    (25) instruccion -> imprimir . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 58
    vacio                          shift and go to state 40

state 22

    (26) instruccion -> leer . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 59
    vacio                          shift and go to state 40

state 23

    (27) instruccion -> incdec . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 60
    vacio                          shift and go to state 40

state 24

    (28) instruccion -> dec_variable . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 61
    vacio                          shift and go to state 40

state 25

    (29) instruccion -> dec_vector . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 62
    vacio                          shift and go to state 40

state 26

    (30) instruccion -> asigna . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 63
    vacio                          shift and go to state 40

state 27

    (31) instruccion -> asignacion_vector . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 64
    vacio                          shift and go to state 40

state 28

    (32) instruccion -> llamado_funcion . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 65
    vacio                          shift and go to state 40

state 29

    (33) instruccion -> retorno . comentario NEWLINE
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (101) vacio -> .

    COMENTARIO      shift and go to state 42
    NEWLINE         reduce using rule 101 (vacio -> .)

    comentario                     shift and go to state 66
    vacio                          shift and go to state 40

state 30

    (41) condicion_if -> IF . PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PARIZQ          shift and go to state 67


state 31

    (42) condicion_else -> ELSE . LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (43) condicion_else -> ELSE . condicion_if
    (41) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    LLAVEIZQ        shift and go to state 68
    IF              shift and go to state 30

    condicion_if                   shift and go to state 69

state 32

    (44) ciclo_for -> FOR . PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 70


state 33

    (51) ciclo_while -> WHILE . PARIZQ condicion PARDER LLAVEIZQ

    PARIZQ          shift and go to state 71


state 34

    (52) imprimir -> PRINT . PARIZQ tipo_variable PARDER

    PARIZQ          shift and go to state 72


state 35

    (53) leer -> READ . PARIZQ NOMBRE PARDER

    PARIZQ          shift and go to state 73


state 36

    (62) asigna -> NOMBRE . ASIGNACION op_aritmetica
    (63) asigna -> NOMBRE . ASIGNACION tipo_variable
    (64) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (65) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (66) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (67) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER
    (49) post_incdec -> NOMBRE . INCREMENTAR
    (50) post_incdec -> NOMBRE . DECREMENTAR

    ASIGNACION      shift and go to state 74
    CORCHETEIZQ     shift and go to state 75
    PARIZQ          shift and go to state 76
    INCREMENTAR     shift and go to state 77
    DECREMENTAR     shift and go to state 78


state 37

    (45) incdec -> pre_incdec .

    COMENTARIO      reduce using rule 45 (incdec -> pre_incdec .)
    NEWLINE         reduce using rule 45 (incdec -> pre_incdec .)
    PARDER          reduce using rule 45 (incdec -> pre_incdec .)


state 38

    (46) incdec -> post_incdec .

    COMENTARIO      reduce using rule 46 (incdec -> post_incdec .)
    NEWLINE         reduce using rule 46 (incdec -> post_incdec .)
    PARDER          reduce using rule 46 (incdec -> post_incdec .)


state 39

    (54) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (55) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable
    (56) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER
    (57) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER
    (58) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (59) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (60) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (61) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 79
    CORCHETEIZQ     shift and go to state 80


state 40

    (36) comentario -> vacio .

    NEWLINE         reduce using rule 36 (comentario -> vacio .)


state 41

    (68) retorno -> RETURN . tipo_variable
    (69) retorno -> RETURN . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    tipo_variable                  shift and go to state 81
    op_aritmetica                  shift and go to state 82
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 42

    (35) comentario -> COMENTARIO .

    NEWLINE         reduce using rule 35 (comentario -> COMENTARIO .)


state 43

    (47) pre_incdec -> INCREMENTAR . NOMBRE

    NOMBRE          shift and go to state 93


state 44

    (48) pre_incdec -> DECREMENTAR . NOMBRE

    NOMBRE          shift and go to state 94


state 45

    (4) indentacion -> TABULACION indentacion .

    IF              reduce using rule 4 (indentacion -> TABULACION indentacion .)
    ELSE            reduce using rule 4 (indentacion -> TABULACION indentacion .)
    FOR             reduce using rule 4 (indentacion -> TABULACION indentacion .)
    WHILE           reduce using rule 4 (indentacion -> TABULACION indentacion .)
    PRINT           reduce using rule 4 (indentacion -> TABULACION indentacion .)
    READ            reduce using rule 4 (indentacion -> TABULACION indentacion .)
    DECVARIABLE     reduce using rule 4 (indentacion -> TABULACION indentacion .)
    NOMBRE          reduce using rule 4 (indentacion -> TABULACION indentacion .)
    RETURN          reduce using rule 4 (indentacion -> TABULACION indentacion .)
    COMENTARIO      reduce using rule 4 (indentacion -> TABULACION indentacion .)
    INCREMENTAR     reduce using rule 4 (indentacion -> TABULACION indentacion .)
    DECREMENTAR     reduce using rule 4 (indentacion -> TABULACION indentacion .)
    NEWLINE         reduce using rule 4 (indentacion -> TABULACION indentacion .)
    LLAVEDER        reduce using rule 4 (indentacion -> TABULACION indentacion .)


state 46

    (5) indentacion -> vacio .

    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)
    LLAVEDER        reduce using rule 5 (indentacion -> vacio .)


state 47

    (1) Niark -> definicion_funcion LLAVEIZQ instrucciones . LLAVEDER Niark

    LLAVEDER        shift and go to state 95


state 48

    (38) instrucciones -> vacio .
    (5) indentacion -> vacio .

    LLAVEDER        reduce using rule 38 (instrucciones -> vacio .)
    TABULACION      reduce using rule 38 (instrucciones -> vacio .)
    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)


state 49

    (6) definicion_funcion -> dominio tipo_return NOMBRE . PARIZQ parametro PARDER

    PARIZQ          shift and go to state 96


state 50

    (39) concat_instruccion -> indentacion . instruccion concat_instruccion
    (21) instruccion -> . condicion_if comentario NEWLINE
    (22) instruccion -> . condicion_else comentario NEWLINE
    (23) instruccion -> . ciclo_for comentario NEWLINE
    (24) instruccion -> . ciclo_while comentario NEWLINE
    (25) instruccion -> . imprimir comentario NEWLINE
    (26) instruccion -> . leer comentario NEWLINE
    (27) instruccion -> . incdec comentario NEWLINE
    (28) instruccion -> . dec_variable comentario NEWLINE
    (29) instruccion -> . dec_vector comentario NEWLINE
    (30) instruccion -> . asigna comentario NEWLINE
    (31) instruccion -> . asignacion_vector comentario NEWLINE
    (32) instruccion -> . llamado_funcion comentario NEWLINE
    (33) instruccion -> . retorno comentario NEWLINE
    (34) instruccion -> . comentario NEWLINE
    (41) condicion_if -> . IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (42) condicion_else -> . ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (43) condicion_else -> . ELSE condicion_if
    (44) ciclo_for -> . FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (51) ciclo_while -> . WHILE PARIZQ condicion PARDER LLAVEIZQ
    (52) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (53) leer -> . READ PARIZQ NOMBRE PARDER
    (45) incdec -> . pre_incdec
    (46) incdec -> . post_incdec
    (54) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (55) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (56) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER
    (57) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER
    (58) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (59) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (60) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (61) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (62) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (63) asigna -> . NOMBRE ASIGNACION tipo_variable
    (64) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (65) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (66) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (67) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (68) retorno -> . RETURN tipo_variable
    (69) retorno -> . RETURN op_aritmetica
    (35) comentario -> . COMENTARIO
    (36) comentario -> . vacio
    (47) pre_incdec -> . INCREMENTAR NOMBRE
    (48) pre_incdec -> . DECREMENTAR NOMBRE
    (49) post_incdec -> . NOMBRE INCREMENTAR
    (50) post_incdec -> . NOMBRE DECREMENTAR
    (101) vacio -> .

    IF              shift and go to state 30
    ELSE            shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 33
    PRINT           shift and go to state 34
    READ            shift and go to state 35
    DECVARIABLE     shift and go to state 39
    NOMBRE          shift and go to state 36
    RETURN          shift and go to state 41
    COMENTARIO      shift and go to state 42
    INCREMENTAR     shift and go to state 43
    DECREMENTAR     shift and go to state 44
    NEWLINE         reduce using rule 101 (vacio -> .)

    instruccion                    shift and go to state 97
    condicion_if                   shift and go to state 16
    comentario                     shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    asigna                         shift and go to state 26
    asignacion_vector              shift and go to state 27
    llamado_funcion                shift and go to state 28
    retorno                        shift and go to state 29
    pre_incdec                     shift and go to state 37
    post_incdec                    shift and go to state 38
    vacio                          shift and go to state 40

state 51

    (37) instrucciones -> indentacion instruccion concat_instruccion .

    PRIVATE         reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    PUBLIC          reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    TABULACION      reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    IF              reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    ELSE            reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    FOR             reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    WHILE           reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    PRINT           reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    READ            reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    DECVARIABLE     reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    NOMBRE          reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    RETURN          reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    COMENTARIO      reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    INCREMENTAR     reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    DECREMENTAR     reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    $end            reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)
    LLAVEDER        reduce using rule 37 (instrucciones -> indentacion instruccion concat_instruccion .)


state 52

    (40) concat_instruccion -> vacio .
    (5) indentacion -> vacio .

  ! reduce/reduce conflict for IF resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for FOR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for READ resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECVARIABLE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NOMBRE resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for COMENTARIO resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for INCREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for DECREMENTAR resolved using rule 5 (indentacion -> vacio .)
  ! reduce/reduce conflict for NEWLINE resolved using rule 5 (indentacion -> vacio .)
    PRIVATE         reduce using rule 40 (concat_instruccion -> vacio .)
    PUBLIC          reduce using rule 40 (concat_instruccion -> vacio .)
    TABULACION      reduce using rule 40 (concat_instruccion -> vacio .)
    $end            reduce using rule 40 (concat_instruccion -> vacio .)
    LLAVEDER        reduce using rule 40 (concat_instruccion -> vacio .)
    IF              reduce using rule 5 (indentacion -> vacio .)
    ELSE            reduce using rule 5 (indentacion -> vacio .)
    FOR             reduce using rule 5 (indentacion -> vacio .)
    WHILE           reduce using rule 5 (indentacion -> vacio .)
    PRINT           reduce using rule 5 (indentacion -> vacio .)
    READ            reduce using rule 5 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 5 (indentacion -> vacio .)
    NOMBRE          reduce using rule 5 (indentacion -> vacio .)
    RETURN          reduce using rule 5 (indentacion -> vacio .)
    COMENTARIO      reduce using rule 5 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 5 (indentacion -> vacio .)
    NEWLINE         reduce using rule 5 (indentacion -> vacio .)

  ! IF              [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! ELSE            [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! FOR             [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! WHILE           [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! PRINT           [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! READ            [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! DECVARIABLE     [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! NOMBRE          [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! RETURN          [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! COMENTARIO      [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! INCREMENTAR     [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! DECREMENTAR     [ reduce using rule 40 (concat_instruccion -> vacio .) ]
  ! NEWLINE         [ reduce using rule 40 (concat_instruccion -> vacio .) ]


state 53

    (21) instruccion -> condicion_if comentario . NEWLINE

    NEWLINE         shift and go to state 98


state 54

    (34) instruccion -> comentario NEWLINE .

    TABULACION      reduce using rule 34 (instruccion -> comentario NEWLINE .)
    IF              reduce using rule 34 (instruccion -> comentario NEWLINE .)
    ELSE            reduce using rule 34 (instruccion -> comentario NEWLINE .)
    FOR             reduce using rule 34 (instruccion -> comentario NEWLINE .)
    WHILE           reduce using rule 34 (instruccion -> comentario NEWLINE .)
    PRINT           reduce using rule 34 (instruccion -> comentario NEWLINE .)
    READ            reduce using rule 34 (instruccion -> comentario NEWLINE .)
    DECVARIABLE     reduce using rule 34 (instruccion -> comentario NEWLINE .)
    NOMBRE          reduce using rule 34 (instruccion -> comentario NEWLINE .)
    RETURN          reduce using rule 34 (instruccion -> comentario NEWLINE .)
    COMENTARIO      reduce using rule 34 (instruccion -> comentario NEWLINE .)
    INCREMENTAR     reduce using rule 34 (instruccion -> comentario NEWLINE .)
    DECREMENTAR     reduce using rule 34 (instruccion -> comentario NEWLINE .)
    NEWLINE         reduce using rule 34 (instruccion -> comentario NEWLINE .)
    PRIVATE         reduce using rule 34 (instruccion -> comentario NEWLINE .)
    PUBLIC          reduce using rule 34 (instruccion -> comentario NEWLINE .)
    $end            reduce using rule 34 (instruccion -> comentario NEWLINE .)
    LLAVEDER        reduce using rule 34 (instruccion -> comentario NEWLINE .)


state 55

    (22) instruccion -> condicion_else comentario . NEWLINE

    NEWLINE         shift and go to state 99


state 56

    (23) instruccion -> ciclo_for comentario . NEWLINE

    NEWLINE         shift and go to state 100


state 57

    (24) instruccion -> ciclo_while comentario . NEWLINE

    NEWLINE         shift and go to state 101


state 58

    (25) instruccion -> imprimir comentario . NEWLINE

    NEWLINE         shift and go to state 102


state 59

    (26) instruccion -> leer comentario . NEWLINE

    NEWLINE         shift and go to state 103


state 60

    (27) instruccion -> incdec comentario . NEWLINE

    NEWLINE         shift and go to state 104


state 61

    (28) instruccion -> dec_variable comentario . NEWLINE

    NEWLINE         shift and go to state 105


state 62

    (29) instruccion -> dec_vector comentario . NEWLINE

    NEWLINE         shift and go to state 106


state 63

    (30) instruccion -> asigna comentario . NEWLINE

    NEWLINE         shift and go to state 107


state 64

    (31) instruccion -> asignacion_vector comentario . NEWLINE

    NEWLINE         shift and go to state 108


state 65

    (32) instruccion -> llamado_funcion comentario . NEWLINE

    NEWLINE         shift and go to state 109


state 66

    (33) instruccion -> retorno comentario . NEWLINE

    NEWLINE         shift and go to state 110


state 67

    (41) condicion_if -> IF PARIZQ . condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER
    (76) condicion -> . comparables operador_condicional comparables condicion_extra
    (77) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    PARIZQ          shift and go to state 111
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    condicion                      shift and go to state 112
    comparables                    shift and go to state 113
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 68

    (42) condicion_else -> ELSE LLAVEIZQ . NEWLINE instrucciones indentacion LLAVEDER

    NEWLINE         shift and go to state 116


state 69

    (43) condicion_else -> ELSE condicion_if .

    COMENTARIO      reduce using rule 43 (condicion_else -> ELSE condicion_if .)
    NEWLINE         reduce using rule 43 (condicion_else -> ELSE condicion_if .)


state 70

    (44) ciclo_for -> FOR PARIZQ . dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (54) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (55) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable

    DECVARIABLE     shift and go to state 118

    dec_variable                   shift and go to state 117

state 71

    (51) ciclo_while -> WHILE PARIZQ . condicion PARDER LLAVEIZQ
    (76) condicion -> . comparables operador_condicional comparables condicion_extra
    (77) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    PARIZQ          shift and go to state 111
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    condicion                      shift and go to state 119
    comparables                    shift and go to state 113
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 72

    (52) imprimir -> PRINT PARIZQ . tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88

    tipo_variable                  shift and go to state 120
    llamado_funcion                shift and go to state 89

state 73

    (53) leer -> READ PARIZQ . NOMBRE PARDER

    NOMBRE          shift and go to state 121


state 74

    (62) asigna -> NOMBRE ASIGNACION . op_aritmetica
    (63) asigna -> NOMBRE ASIGNACION . tipo_variable
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (101) vacio -> .

    PARIZQ          shift and go to state 91
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica                  shift and go to state 122
    tipo_variable                  shift and go to state 123
    op_aritmetica_extra            shift and go to state 90
    llamado_funcion                shift and go to state 89
    vacio                          shift and go to state 92

state 75

    (64) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (65) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (66) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (67) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable

    NOMBRE          shift and go to state 124
    INT             shift and go to state 125


state 76

    (15) llamado_funcion -> NOMBRE PARIZQ . parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE PARIZQ . vacio PARDER
    (17) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (18) parametro_llamado -> . op_aritmetica parametro_llamado_extra
    (101) vacio -> .
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio

    PARDER          reduce using rule 101 (vacio -> .)
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91

    parametro_llamado              shift and go to state 126
    vacio                          shift and go to state 127
    tipo_variable                  shift and go to state 128
    op_aritmetica                  shift and go to state 129
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90

state 77

    (49) post_incdec -> NOMBRE INCREMENTAR .

    COMENTARIO      reduce using rule 49 (post_incdec -> NOMBRE INCREMENTAR .)
    NEWLINE         reduce using rule 49 (post_incdec -> NOMBRE INCREMENTAR .)
    PARDER          reduce using rule 49 (post_incdec -> NOMBRE INCREMENTAR .)


state 78

    (50) post_incdec -> NOMBRE DECREMENTAR .

    COMENTARIO      reduce using rule 50 (post_incdec -> NOMBRE DECREMENTAR .)
    NEWLINE         reduce using rule 50 (post_incdec -> NOMBRE DECREMENTAR .)
    PARDER          reduce using rule 50 (post_incdec -> NOMBRE DECREMENTAR .)


state 79

    (54) dec_variable -> DECVARIABLE ASIGNACION . op_aritmetica
    (55) dec_variable -> DECVARIABLE ASIGNACION . tipo_variable
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (101) vacio -> .

    PARIZQ          shift and go to state 91
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica                  shift and go to state 130
    tipo_variable                  shift and go to state 131
    op_aritmetica_extra            shift and go to state 90
    llamado_funcion                shift and go to state 89
    vacio                          shift and go to state 92

state 80

    (56) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER
    (57) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (60) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (61) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable

    NOMBRE          shift and go to state 132
    INT             shift and go to state 133


state 81

    (68) retorno -> RETURN tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 68 (retorno -> RETURN tipo_variable .)
    NEWLINE         reduce using rule 68 (retorno -> RETURN tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 82

    (69) retorno -> RETURN op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 69 (retorno -> RETURN op_aritmetica .)
    NEWLINE         reduce using rule 69 (retorno -> RETURN op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 83

    (82) tipo_variable -> NOMBRE .
    (15) llamado_funcion -> NOMBRE . PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> NOMBRE . PARIZQ vacio PARDER

    COMENTARIO      reduce using rule 82 (tipo_variable -> NOMBRE .)
    NEWLINE         reduce using rule 82 (tipo_variable -> NOMBRE .)
    SUMA            reduce using rule 82 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 82 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 82 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 82 (tipo_variable -> NOMBRE .)
    DIFERENTE       reduce using rule 82 (tipo_variable -> NOMBRE .)
    IGUAL           reduce using rule 82 (tipo_variable -> NOMBRE .)
    MAYOR           reduce using rule 82 (tipo_variable -> NOMBRE .)
    MAYORIGUAL      reduce using rule 82 (tipo_variable -> NOMBRE .)
    MENOR           reduce using rule 82 (tipo_variable -> NOMBRE .)
    MENORIGUAL      reduce using rule 82 (tipo_variable -> NOMBRE .)
    PARDER          reduce using rule 82 (tipo_variable -> NOMBRE .)
    COMA            reduce using rule 82 (tipo_variable -> NOMBRE .)
    PUNTOYCOMA      reduce using rule 82 (tipo_variable -> NOMBRE .)
    AND             reduce using rule 82 (tipo_variable -> NOMBRE .)
    OR              reduce using rule 82 (tipo_variable -> NOMBRE .)
    PARIZQ          shift and go to state 76


state 84

    (83) tipo_variable -> DOUBLE .

    COMENTARIO      reduce using rule 83 (tipo_variable -> DOUBLE .)
    NEWLINE         reduce using rule 83 (tipo_variable -> DOUBLE .)
    SUMA            reduce using rule 83 (tipo_variable -> DOUBLE .)
    RESTA           reduce using rule 83 (tipo_variable -> DOUBLE .)
    MULT            reduce using rule 83 (tipo_variable -> DOUBLE .)
    DIV             reduce using rule 83 (tipo_variable -> DOUBLE .)
    DIFERENTE       reduce using rule 83 (tipo_variable -> DOUBLE .)
    IGUAL           reduce using rule 83 (tipo_variable -> DOUBLE .)
    MAYOR           reduce using rule 83 (tipo_variable -> DOUBLE .)
    MAYORIGUAL      reduce using rule 83 (tipo_variable -> DOUBLE .)
    MENOR           reduce using rule 83 (tipo_variable -> DOUBLE .)
    MENORIGUAL      reduce using rule 83 (tipo_variable -> DOUBLE .)
    PARDER          reduce using rule 83 (tipo_variable -> DOUBLE .)
    COMA            reduce using rule 83 (tipo_variable -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 83 (tipo_variable -> DOUBLE .)
    AND             reduce using rule 83 (tipo_variable -> DOUBLE .)
    OR              reduce using rule 83 (tipo_variable -> DOUBLE .)


state 85

    (84) tipo_variable -> INT .

    COMENTARIO      reduce using rule 84 (tipo_variable -> INT .)
    NEWLINE         reduce using rule 84 (tipo_variable -> INT .)
    SUMA            reduce using rule 84 (tipo_variable -> INT .)
    RESTA           reduce using rule 84 (tipo_variable -> INT .)
    MULT            reduce using rule 84 (tipo_variable -> INT .)
    DIV             reduce using rule 84 (tipo_variable -> INT .)
    DIFERENTE       reduce using rule 84 (tipo_variable -> INT .)
    IGUAL           reduce using rule 84 (tipo_variable -> INT .)
    MAYOR           reduce using rule 84 (tipo_variable -> INT .)
    MAYORIGUAL      reduce using rule 84 (tipo_variable -> INT .)
    MENOR           reduce using rule 84 (tipo_variable -> INT .)
    MENORIGUAL      reduce using rule 84 (tipo_variable -> INT .)
    PARDER          reduce using rule 84 (tipo_variable -> INT .)
    COMA            reduce using rule 84 (tipo_variable -> INT .)
    PUNTOYCOMA      reduce using rule 84 (tipo_variable -> INT .)
    AND             reduce using rule 84 (tipo_variable -> INT .)
    OR              reduce using rule 84 (tipo_variable -> INT .)


state 86

    (85) tipo_variable -> STRING .

    COMENTARIO      reduce using rule 85 (tipo_variable -> STRING .)
    NEWLINE         reduce using rule 85 (tipo_variable -> STRING .)
    SUMA            reduce using rule 85 (tipo_variable -> STRING .)
    RESTA           reduce using rule 85 (tipo_variable -> STRING .)
    MULT            reduce using rule 85 (tipo_variable -> STRING .)
    DIV             reduce using rule 85 (tipo_variable -> STRING .)
    DIFERENTE       reduce using rule 85 (tipo_variable -> STRING .)
    IGUAL           reduce using rule 85 (tipo_variable -> STRING .)
    MAYOR           reduce using rule 85 (tipo_variable -> STRING .)
    MAYORIGUAL      reduce using rule 85 (tipo_variable -> STRING .)
    MENOR           reduce using rule 85 (tipo_variable -> STRING .)
    MENORIGUAL      reduce using rule 85 (tipo_variable -> STRING .)
    PARDER          reduce using rule 85 (tipo_variable -> STRING .)
    COMA            reduce using rule 85 (tipo_variable -> STRING .)
    PUNTOYCOMA      reduce using rule 85 (tipo_variable -> STRING .)
    AND             reduce using rule 85 (tipo_variable -> STRING .)
    OR              reduce using rule 85 (tipo_variable -> STRING .)


state 87

    (86) tipo_variable -> FALSE .

    COMENTARIO      reduce using rule 86 (tipo_variable -> FALSE .)
    NEWLINE         reduce using rule 86 (tipo_variable -> FALSE .)
    SUMA            reduce using rule 86 (tipo_variable -> FALSE .)
    RESTA           reduce using rule 86 (tipo_variable -> FALSE .)
    MULT            reduce using rule 86 (tipo_variable -> FALSE .)
    DIV             reduce using rule 86 (tipo_variable -> FALSE .)
    DIFERENTE       reduce using rule 86 (tipo_variable -> FALSE .)
    IGUAL           reduce using rule 86 (tipo_variable -> FALSE .)
    MAYOR           reduce using rule 86 (tipo_variable -> FALSE .)
    MAYORIGUAL      reduce using rule 86 (tipo_variable -> FALSE .)
    MENOR           reduce using rule 86 (tipo_variable -> FALSE .)
    MENORIGUAL      reduce using rule 86 (tipo_variable -> FALSE .)
    PARDER          reduce using rule 86 (tipo_variable -> FALSE .)
    COMA            reduce using rule 86 (tipo_variable -> FALSE .)
    PUNTOYCOMA      reduce using rule 86 (tipo_variable -> FALSE .)
    AND             reduce using rule 86 (tipo_variable -> FALSE .)
    OR              reduce using rule 86 (tipo_variable -> FALSE .)


state 88

    (87) tipo_variable -> TRUE .

    COMENTARIO      reduce using rule 87 (tipo_variable -> TRUE .)
    NEWLINE         reduce using rule 87 (tipo_variable -> TRUE .)
    SUMA            reduce using rule 87 (tipo_variable -> TRUE .)
    RESTA           reduce using rule 87 (tipo_variable -> TRUE .)
    MULT            reduce using rule 87 (tipo_variable -> TRUE .)
    DIV             reduce using rule 87 (tipo_variable -> TRUE .)
    DIFERENTE       reduce using rule 87 (tipo_variable -> TRUE .)
    IGUAL           reduce using rule 87 (tipo_variable -> TRUE .)
    MAYOR           reduce using rule 87 (tipo_variable -> TRUE .)
    MAYORIGUAL      reduce using rule 87 (tipo_variable -> TRUE .)
    MENOR           reduce using rule 87 (tipo_variable -> TRUE .)
    MENORIGUAL      reduce using rule 87 (tipo_variable -> TRUE .)
    PARDER          reduce using rule 87 (tipo_variable -> TRUE .)
    COMA            reduce using rule 87 (tipo_variable -> TRUE .)
    PUNTOYCOMA      reduce using rule 87 (tipo_variable -> TRUE .)
    AND             reduce using rule 87 (tipo_variable -> TRUE .)
    OR              reduce using rule 87 (tipo_variable -> TRUE .)


state 89

    (88) tipo_variable -> llamado_funcion .

    COMENTARIO      reduce using rule 88 (tipo_variable -> llamado_funcion .)
    NEWLINE         reduce using rule 88 (tipo_variable -> llamado_funcion .)
    SUMA            reduce using rule 88 (tipo_variable -> llamado_funcion .)
    RESTA           reduce using rule 88 (tipo_variable -> llamado_funcion .)
    MULT            reduce using rule 88 (tipo_variable -> llamado_funcion .)
    DIV             reduce using rule 88 (tipo_variable -> llamado_funcion .)
    DIFERENTE       reduce using rule 88 (tipo_variable -> llamado_funcion .)
    IGUAL           reduce using rule 88 (tipo_variable -> llamado_funcion .)
    MAYOR           reduce using rule 88 (tipo_variable -> llamado_funcion .)
    MAYORIGUAL      reduce using rule 88 (tipo_variable -> llamado_funcion .)
    MENOR           reduce using rule 88 (tipo_variable -> llamado_funcion .)
    MENORIGUAL      reduce using rule 88 (tipo_variable -> llamado_funcion .)
    PARDER          reduce using rule 88 (tipo_variable -> llamado_funcion .)
    COMA            reduce using rule 88 (tipo_variable -> llamado_funcion .)
    PUNTOYCOMA      reduce using rule 88 (tipo_variable -> llamado_funcion .)
    AND             reduce using rule 88 (tipo_variable -> llamado_funcion .)
    OR              reduce using rule 88 (tipo_variable -> llamado_funcion .)


state 90

    (89) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (90) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) operador_aritmetico -> . SUMA
    (96) operador_aritmetico -> . RESTA
    (97) operador_aritmetico -> . MULT
    (98) operador_aritmetico -> . DIV

    SUMA            shift and go to state 135
    RESTA           shift and go to state 136
    MULT            shift and go to state 137
    DIV             shift and go to state 138

    operador_aritmetico            shift and go to state 134

state 91

    (91) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (101) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica_extra            shift and go to state 139
    tipo_variable                  shift and go to state 140
    op_aritmetica                  shift and go to state 141
    vacio                          shift and go to state 92
    llamado_funcion                shift and go to state 89

state 92

    (94) op_aritmetica_extra -> vacio .

    SUMA            reduce using rule 94 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 94 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 94 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 94 (op_aritmetica_extra -> vacio .)


state 93

    (47) pre_incdec -> INCREMENTAR NOMBRE .

    COMENTARIO      reduce using rule 47 (pre_incdec -> INCREMENTAR NOMBRE .)
    NEWLINE         reduce using rule 47 (pre_incdec -> INCREMENTAR NOMBRE .)
    PARDER          reduce using rule 47 (pre_incdec -> INCREMENTAR NOMBRE .)


state 94

    (48) pre_incdec -> DECREMENTAR NOMBRE .

    COMENTARIO      reduce using rule 48 (pre_incdec -> DECREMENTAR NOMBRE .)
    NEWLINE         reduce using rule 48 (pre_incdec -> DECREMENTAR NOMBRE .)
    PARDER          reduce using rule 48 (pre_incdec -> DECREMENTAR NOMBRE .)


state 95

    (1) Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER . Niark
    (1) Niark -> . definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark
    (2) Niark -> . instrucciones Niark
    (3) Niark -> . vacio
    (6) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (101) vacio -> .
    (7) dominio -> . PRIVATE
    (8) dominio -> . PUBLIC
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio

  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for TABULACION resolved as shift
    $end            reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)
    PRIVATE         shift and go to state 7
    PUBLIC          shift and go to state 8
    TABULACION      shift and go to state 9

  ! PRIVATE         [ reduce using rule 101 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 101 (vacio -> .) ]
  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    definicion_funcion             shift and go to state 2
    instrucciones                  shift and go to state 3
    Niark                          shift and go to state 142
    vacio                          shift and go to state 4
    dominio                        shift and go to state 5
    indentacion                    shift and go to state 6

state 96

    (6) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ . parametro PARDER
    (11) parametro -> . vacio
    (12) parametro -> . NOMBRE parametro_extra
    (101) vacio -> .

    NOMBRE          shift and go to state 143
    PARDER          reduce using rule 101 (vacio -> .)

    parametro                      shift and go to state 144
    vacio                          shift and go to state 145

state 97

    (39) concat_instruccion -> indentacion instruccion . concat_instruccion
    (39) concat_instruccion -> . indentacion instruccion concat_instruccion
    (40) concat_instruccion -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    PRIVATE         reduce using rule 101 (vacio -> .)
    PUBLIC          reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)
    $end            reduce using rule 101 (vacio -> .)
    LLAVEDER        reduce using rule 101 (vacio -> .)

  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    indentacion                    shift and go to state 50
    concat_instruccion             shift and go to state 146
    vacio                          shift and go to state 52

state 98

    (21) instruccion -> condicion_if comentario NEWLINE .

    TABULACION      reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    IF              reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    ELSE            reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    FOR             reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    WHILE           reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    PRINT           reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    READ            reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    DECVARIABLE     reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    NOMBRE          reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    RETURN          reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    COMENTARIO      reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    INCREMENTAR     reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    DECREMENTAR     reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    NEWLINE         reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    PRIVATE         reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    PUBLIC          reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    $end            reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)
    LLAVEDER        reduce using rule 21 (instruccion -> condicion_if comentario NEWLINE .)


state 99

    (22) instruccion -> condicion_else comentario NEWLINE .

    TABULACION      reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    IF              reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    ELSE            reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    FOR             reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    WHILE           reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    PRINT           reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    READ            reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    DECVARIABLE     reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    NOMBRE          reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    RETURN          reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    COMENTARIO      reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    INCREMENTAR     reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    DECREMENTAR     reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    NEWLINE         reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    PRIVATE         reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    PUBLIC          reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    $end            reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)
    LLAVEDER        reduce using rule 22 (instruccion -> condicion_else comentario NEWLINE .)


state 100

    (23) instruccion -> ciclo_for comentario NEWLINE .

    TABULACION      reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    IF              reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    ELSE            reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    FOR             reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    WHILE           reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    PRINT           reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    READ            reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    DECVARIABLE     reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    NOMBRE          reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    RETURN          reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    COMENTARIO      reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    INCREMENTAR     reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    DECREMENTAR     reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    NEWLINE         reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    PRIVATE         reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    PUBLIC          reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    $end            reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)
    LLAVEDER        reduce using rule 23 (instruccion -> ciclo_for comentario NEWLINE .)


state 101

    (24) instruccion -> ciclo_while comentario NEWLINE .

    TABULACION      reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    IF              reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    ELSE            reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    FOR             reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    WHILE           reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    PRINT           reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    READ            reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    DECVARIABLE     reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    NOMBRE          reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    RETURN          reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    COMENTARIO      reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    INCREMENTAR     reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    DECREMENTAR     reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    NEWLINE         reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    PRIVATE         reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    PUBLIC          reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    $end            reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)
    LLAVEDER        reduce using rule 24 (instruccion -> ciclo_while comentario NEWLINE .)


state 102

    (25) instruccion -> imprimir comentario NEWLINE .

    TABULACION      reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    IF              reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    ELSE            reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    FOR             reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    WHILE           reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    PRINT           reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    READ            reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    DECVARIABLE     reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    NOMBRE          reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    RETURN          reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    COMENTARIO      reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    INCREMENTAR     reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    DECREMENTAR     reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    NEWLINE         reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    PRIVATE         reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    PUBLIC          reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    $end            reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)
    LLAVEDER        reduce using rule 25 (instruccion -> imprimir comentario NEWLINE .)


state 103

    (26) instruccion -> leer comentario NEWLINE .

    TABULACION      reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    IF              reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    ELSE            reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    FOR             reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    WHILE           reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    PRINT           reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    READ            reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    DECVARIABLE     reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    NOMBRE          reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    RETURN          reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    COMENTARIO      reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    INCREMENTAR     reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    DECREMENTAR     reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    NEWLINE         reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    PRIVATE         reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    PUBLIC          reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    $end            reduce using rule 26 (instruccion -> leer comentario NEWLINE .)
    LLAVEDER        reduce using rule 26 (instruccion -> leer comentario NEWLINE .)


state 104

    (27) instruccion -> incdec comentario NEWLINE .

    TABULACION      reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    IF              reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    ELSE            reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    FOR             reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    WHILE           reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    PRINT           reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    READ            reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    DECVARIABLE     reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    NOMBRE          reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    RETURN          reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    COMENTARIO      reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    INCREMENTAR     reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    DECREMENTAR     reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    NEWLINE         reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    PRIVATE         reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    PUBLIC          reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    $end            reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)
    LLAVEDER        reduce using rule 27 (instruccion -> incdec comentario NEWLINE .)


state 105

    (28) instruccion -> dec_variable comentario NEWLINE .

    TABULACION      reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    IF              reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    ELSE            reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    FOR             reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    WHILE           reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    PRINT           reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    READ            reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    DECVARIABLE     reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    NOMBRE          reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    RETURN          reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    COMENTARIO      reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    INCREMENTAR     reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    DECREMENTAR     reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    NEWLINE         reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    PRIVATE         reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    PUBLIC          reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    $end            reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)
    LLAVEDER        reduce using rule 28 (instruccion -> dec_variable comentario NEWLINE .)


state 106

    (29) instruccion -> dec_vector comentario NEWLINE .

    TABULACION      reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    IF              reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    ELSE            reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    FOR             reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    WHILE           reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    PRINT           reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    READ            reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    RETURN          reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    PRIVATE         reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    PUBLIC          reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    $end            reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 29 (instruccion -> dec_vector comentario NEWLINE .)


state 107

    (30) instruccion -> asigna comentario NEWLINE .

    TABULACION      reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    IF              reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    ELSE            reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    FOR             reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    WHILE           reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    PRINT           reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    READ            reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    DECVARIABLE     reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    NOMBRE          reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    RETURN          reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    COMENTARIO      reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    INCREMENTAR     reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    DECREMENTAR     reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    NEWLINE         reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    PRIVATE         reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    PUBLIC          reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    $end            reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)
    LLAVEDER        reduce using rule 30 (instruccion -> asigna comentario NEWLINE .)


state 108

    (31) instruccion -> asignacion_vector comentario NEWLINE .

    TABULACION      reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    IF              reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    ELSE            reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    FOR             reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    WHILE           reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    PRINT           reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    READ            reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    DECVARIABLE     reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    NOMBRE          reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    RETURN          reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    COMENTARIO      reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    INCREMENTAR     reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    DECREMENTAR     reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    NEWLINE         reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    PRIVATE         reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    PUBLIC          reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    $end            reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)
    LLAVEDER        reduce using rule 31 (instruccion -> asignacion_vector comentario NEWLINE .)


state 109

    (32) instruccion -> llamado_funcion comentario NEWLINE .

    TABULACION      reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    IF              reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    ELSE            reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    FOR             reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    WHILE           reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    PRINT           reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    READ            reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    DECVARIABLE     reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    NOMBRE          reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    RETURN          reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    COMENTARIO      reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    INCREMENTAR     reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    DECREMENTAR     reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    NEWLINE         reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    PRIVATE         reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    PUBLIC          reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    $end            reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)
    LLAVEDER        reduce using rule 32 (instruccion -> llamado_funcion comentario NEWLINE .)


state 110

    (33) instruccion -> retorno comentario NEWLINE .

    TABULACION      reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    IF              reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    ELSE            reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    FOR             reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    WHILE           reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    PRINT           reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    READ            reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    DECVARIABLE     reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    NOMBRE          reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    RETURN          reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    COMENTARIO      reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    INCREMENTAR     reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    DECREMENTAR     reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    NEWLINE         reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    PRIVATE         reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    PUBLIC          reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    $end            reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)
    LLAVEDER        reduce using rule 33 (instruccion -> retorno comentario NEWLINE .)


state 111

    (77) condicion -> PARIZQ . comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (91) op_aritmetica -> PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (101) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    comparables                    shift and go to state 147
    op_aritmetica_extra            shift and go to state 139
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    vacio                          shift and go to state 92
    llamado_funcion                shift and go to state 89

state 112

    (41) condicion_if -> IF PARIZQ condicion . PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    PARDER          shift and go to state 148


state 113

    (76) condicion -> comparables . operador_condicional comparables condicion_extra
    (70) operador_condicional -> . DIFERENTE
    (71) operador_condicional -> . IGUAL
    (72) operador_condicional -> . MAYOR
    (73) operador_condicional -> . MAYORIGUAL
    (74) operador_condicional -> . MENOR
    (75) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 150
    IGUAL           shift and go to state 151
    MAYOR           shift and go to state 152
    MAYORIGUAL      shift and go to state 153
    MENOR           shift and go to state 154
    MENORIGUAL      shift and go to state 155

    operador_condicional           shift and go to state 149

state 114

    (80) comparables -> tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    DIFERENTE       reduce using rule 80 (comparables -> tipo_variable .)
    IGUAL           reduce using rule 80 (comparables -> tipo_variable .)
    MAYOR           reduce using rule 80 (comparables -> tipo_variable .)
    MAYORIGUAL      reduce using rule 80 (comparables -> tipo_variable .)
    MENOR           reduce using rule 80 (comparables -> tipo_variable .)
    MENORIGUAL      reduce using rule 80 (comparables -> tipo_variable .)
    AND             reduce using rule 80 (comparables -> tipo_variable .)
    OR              reduce using rule 80 (comparables -> tipo_variable .)
    PARDER          reduce using rule 80 (comparables -> tipo_variable .)
    PUNTOYCOMA      reduce using rule 80 (comparables -> tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 115

    (81) comparables -> op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    DIFERENTE       reduce using rule 81 (comparables -> op_aritmetica .)
    IGUAL           reduce using rule 81 (comparables -> op_aritmetica .)
    MAYOR           reduce using rule 81 (comparables -> op_aritmetica .)
    MAYORIGUAL      reduce using rule 81 (comparables -> op_aritmetica .)
    MENOR           reduce using rule 81 (comparables -> op_aritmetica .)
    MENORIGUAL      reduce using rule 81 (comparables -> op_aritmetica .)
    AND             reduce using rule 81 (comparables -> op_aritmetica .)
    OR              reduce using rule 81 (comparables -> op_aritmetica .)
    PARDER          reduce using rule 81 (comparables -> op_aritmetica .)
    PUNTOYCOMA      reduce using rule 81 (comparables -> op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 116

    (42) condicion_else -> ELSE LLAVEIZQ NEWLINE . instrucciones indentacion LLAVEDER
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)

  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    instrucciones                  shift and go to state 156
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 48

state 117

    (44) ciclo_for -> FOR PARIZQ dec_variable . PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER

    PUNTOYCOMA      shift and go to state 157


state 118

    (54) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (55) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 79


state 119

    (51) ciclo_while -> WHILE PARIZQ condicion . PARDER LLAVEIZQ

    PARDER          shift and go to state 158


state 120

    (52) imprimir -> PRINT PARIZQ tipo_variable . PARDER

    PARDER          shift and go to state 159


state 121

    (53) leer -> READ PARIZQ NOMBRE . PARDER

    PARDER          shift and go to state 160


state 122

    (62) asigna -> NOMBRE ASIGNACION op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 62 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 62 (asigna -> NOMBRE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 123

    (63) asigna -> NOMBRE ASIGNACION tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 63 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 63 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 124

    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (66) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 161


state 125

    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (67) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 162


state 126

    (15) llamado_funcion -> NOMBRE PARIZQ parametro_llamado . PARDER

    PARDER          shift and go to state 163


state 127

    (16) llamado_funcion -> NOMBRE PARIZQ vacio . PARDER
    (94) op_aritmetica_extra -> vacio .

    PARDER          shift and go to state 164
    SUMA            reduce using rule 94 (op_aritmetica_extra -> vacio .)
    RESTA           reduce using rule 94 (op_aritmetica_extra -> vacio .)
    MULT            reduce using rule 94 (op_aritmetica_extra -> vacio .)
    DIV             reduce using rule 94 (op_aritmetica_extra -> vacio .)


state 128

    (17) parametro_llamado -> tipo_variable . parametro_llamado_extra
    (92) op_aritmetica_extra -> tipo_variable .
    (19) parametro_llamado_extra -> . COMA parametro_llamado
    (20) parametro_llamado_extra -> . vacio
    (101) vacio -> .

    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    COMA            shift and go to state 166
    PARDER          reduce using rule 101 (vacio -> .)

    parametro_llamado_extra        shift and go to state 165
    vacio                          shift and go to state 167

state 129

    (18) parametro_llamado -> op_aritmetica . parametro_llamado_extra
    (93) op_aritmetica_extra -> op_aritmetica .
    (19) parametro_llamado_extra -> . COMA parametro_llamado
    (20) parametro_llamado_extra -> . vacio
    (101) vacio -> .

    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    COMA            shift and go to state 166
    PARDER          reduce using rule 101 (vacio -> .)

    parametro_llamado_extra        shift and go to state 168
    vacio                          shift and go to state 167

state 130

    (54) dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 54 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 54 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    PUNTOYCOMA      reduce using rule 54 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 131

    (55) dec_variable -> DECVARIABLE ASIGNACION tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    PUNTOYCOMA      reduce using rule 55 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 132

    (56) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (60) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 169


state 133

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (61) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 170


state 134

    (89) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    PARIZQ          shift and go to state 172
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88

    tipo_variable                  shift and go to state 171
    llamado_funcion                shift and go to state 89

state 135

    (95) operador_aritmetico -> SUMA .

    PARIZQ          reduce using rule 95 (operador_aritmetico -> SUMA .)
    NOMBRE          reduce using rule 95 (operador_aritmetico -> SUMA .)
    DOUBLE          reduce using rule 95 (operador_aritmetico -> SUMA .)
    INT             reduce using rule 95 (operador_aritmetico -> SUMA .)
    STRING          reduce using rule 95 (operador_aritmetico -> SUMA .)
    FALSE           reduce using rule 95 (operador_aritmetico -> SUMA .)
    TRUE            reduce using rule 95 (operador_aritmetico -> SUMA .)


state 136

    (96) operador_aritmetico -> RESTA .

    PARIZQ          reduce using rule 96 (operador_aritmetico -> RESTA .)
    NOMBRE          reduce using rule 96 (operador_aritmetico -> RESTA .)
    DOUBLE          reduce using rule 96 (operador_aritmetico -> RESTA .)
    INT             reduce using rule 96 (operador_aritmetico -> RESTA .)
    STRING          reduce using rule 96 (operador_aritmetico -> RESTA .)
    FALSE           reduce using rule 96 (operador_aritmetico -> RESTA .)
    TRUE            reduce using rule 96 (operador_aritmetico -> RESTA .)


state 137

    (97) operador_aritmetico -> MULT .

    PARIZQ          reduce using rule 97 (operador_aritmetico -> MULT .)
    NOMBRE          reduce using rule 97 (operador_aritmetico -> MULT .)
    DOUBLE          reduce using rule 97 (operador_aritmetico -> MULT .)
    INT             reduce using rule 97 (operador_aritmetico -> MULT .)
    STRING          reduce using rule 97 (operador_aritmetico -> MULT .)
    FALSE           reduce using rule 97 (operador_aritmetico -> MULT .)
    TRUE            reduce using rule 97 (operador_aritmetico -> MULT .)


state 138

    (98) operador_aritmetico -> DIV .

    PARIZQ          reduce using rule 98 (operador_aritmetico -> DIV .)
    NOMBRE          reduce using rule 98 (operador_aritmetico -> DIV .)
    DOUBLE          reduce using rule 98 (operador_aritmetico -> DIV .)
    INT             reduce using rule 98 (operador_aritmetico -> DIV .)
    STRING          reduce using rule 98 (operador_aritmetico -> DIV .)
    FALSE           reduce using rule 98 (operador_aritmetico -> DIV .)
    TRUE            reduce using rule 98 (operador_aritmetico -> DIV .)


state 139

    (91) op_aritmetica -> PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (89) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (90) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) operador_aritmetico -> . SUMA
    (96) operador_aritmetico -> . RESTA
    (97) operador_aritmetico -> . MULT
    (98) operador_aritmetico -> . DIV

    SUMA            shift and go to state 135
    RESTA           shift and go to state 136
    MULT            shift and go to state 137
    DIV             shift and go to state 138

    operador_aritmetico            shift and go to state 173

state 140

    (92) op_aritmetica_extra -> tipo_variable .

    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 141

    (93) op_aritmetica_extra -> op_aritmetica .

    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 142

    (1) Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark .

    $end            reduce using rule 1 (Niark -> definicion_funcion LLAVEIZQ instrucciones LLAVEDER Niark .)


state 143

    (12) parametro -> NOMBRE . parametro_extra
    (13) parametro_extra -> . COMA NOMBRE parametro_extra
    (14) parametro_extra -> . vacio
    (101) vacio -> .

    COMA            shift and go to state 175
    PARDER          reduce using rule 101 (vacio -> .)

    parametro_extra                shift and go to state 174
    vacio                          shift and go to state 176

state 144

    (6) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro . PARDER

    PARDER          shift and go to state 177


state 145

    (11) parametro -> vacio .

    PARDER          reduce using rule 11 (parametro -> vacio .)


state 146

    (39) concat_instruccion -> indentacion instruccion concat_instruccion .

    PRIVATE         reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    PUBLIC          reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    TABULACION      reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    IF              reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    ELSE            reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    FOR             reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    WHILE           reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    PRINT           reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    READ            reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    DECVARIABLE     reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    NOMBRE          reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    RETURN          reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    COMENTARIO      reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    INCREMENTAR     reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    DECREMENTAR     reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    $end            reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)
    LLAVEDER        reduce using rule 39 (concat_instruccion -> indentacion instruccion concat_instruccion .)


state 147

    (77) condicion -> PARIZQ comparables . operador_condicional comparables condicion_extra PARDER condicion_extra
    (70) operador_condicional -> . DIFERENTE
    (71) operador_condicional -> . IGUAL
    (72) operador_condicional -> . MAYOR
    (73) operador_condicional -> . MAYORIGUAL
    (74) operador_condicional -> . MENOR
    (75) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 150
    IGUAL           shift and go to state 151
    MAYOR           shift and go to state 152
    MAYORIGUAL      shift and go to state 153
    MENOR           shift and go to state 154
    MENORIGUAL      shift and go to state 155

    operador_condicional           shift and go to state 178

state 148

    (41) condicion_if -> IF PARIZQ condicion PARDER . LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER

    LLAVEIZQ        shift and go to state 179


state 149

    (76) condicion -> comparables operador_condicional . comparables condicion_extra
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    comparables                    shift and go to state 180
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 150

    (70) operador_condicional -> DIFERENTE .

    NOMBRE          reduce using rule 70 (operador_condicional -> DIFERENTE .)
    DOUBLE          reduce using rule 70 (operador_condicional -> DIFERENTE .)
    INT             reduce using rule 70 (operador_condicional -> DIFERENTE .)
    STRING          reduce using rule 70 (operador_condicional -> DIFERENTE .)
    FALSE           reduce using rule 70 (operador_condicional -> DIFERENTE .)
    TRUE            reduce using rule 70 (operador_condicional -> DIFERENTE .)
    PARIZQ          reduce using rule 70 (operador_condicional -> DIFERENTE .)
    SUMA            reduce using rule 70 (operador_condicional -> DIFERENTE .)
    RESTA           reduce using rule 70 (operador_condicional -> DIFERENTE .)
    MULT            reduce using rule 70 (operador_condicional -> DIFERENTE .)
    DIV             reduce using rule 70 (operador_condicional -> DIFERENTE .)


state 151

    (71) operador_condicional -> IGUAL .

    NOMBRE          reduce using rule 71 (operador_condicional -> IGUAL .)
    DOUBLE          reduce using rule 71 (operador_condicional -> IGUAL .)
    INT             reduce using rule 71 (operador_condicional -> IGUAL .)
    STRING          reduce using rule 71 (operador_condicional -> IGUAL .)
    FALSE           reduce using rule 71 (operador_condicional -> IGUAL .)
    TRUE            reduce using rule 71 (operador_condicional -> IGUAL .)
    PARIZQ          reduce using rule 71 (operador_condicional -> IGUAL .)
    SUMA            reduce using rule 71 (operador_condicional -> IGUAL .)
    RESTA           reduce using rule 71 (operador_condicional -> IGUAL .)
    MULT            reduce using rule 71 (operador_condicional -> IGUAL .)
    DIV             reduce using rule 71 (operador_condicional -> IGUAL .)


state 152

    (72) operador_condicional -> MAYOR .

    NOMBRE          reduce using rule 72 (operador_condicional -> MAYOR .)
    DOUBLE          reduce using rule 72 (operador_condicional -> MAYOR .)
    INT             reduce using rule 72 (operador_condicional -> MAYOR .)
    STRING          reduce using rule 72 (operador_condicional -> MAYOR .)
    FALSE           reduce using rule 72 (operador_condicional -> MAYOR .)
    TRUE            reduce using rule 72 (operador_condicional -> MAYOR .)
    PARIZQ          reduce using rule 72 (operador_condicional -> MAYOR .)
    SUMA            reduce using rule 72 (operador_condicional -> MAYOR .)
    RESTA           reduce using rule 72 (operador_condicional -> MAYOR .)
    MULT            reduce using rule 72 (operador_condicional -> MAYOR .)
    DIV             reduce using rule 72 (operador_condicional -> MAYOR .)


state 153

    (73) operador_condicional -> MAYORIGUAL .

    NOMBRE          reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    DOUBLE          reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    INT             reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    STRING          reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    FALSE           reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    TRUE            reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    PARIZQ          reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    SUMA            reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    RESTA           reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    MULT            reduce using rule 73 (operador_condicional -> MAYORIGUAL .)
    DIV             reduce using rule 73 (operador_condicional -> MAYORIGUAL .)


state 154

    (74) operador_condicional -> MENOR .

    NOMBRE          reduce using rule 74 (operador_condicional -> MENOR .)
    DOUBLE          reduce using rule 74 (operador_condicional -> MENOR .)
    INT             reduce using rule 74 (operador_condicional -> MENOR .)
    STRING          reduce using rule 74 (operador_condicional -> MENOR .)
    FALSE           reduce using rule 74 (operador_condicional -> MENOR .)
    TRUE            reduce using rule 74 (operador_condicional -> MENOR .)
    PARIZQ          reduce using rule 74 (operador_condicional -> MENOR .)
    SUMA            reduce using rule 74 (operador_condicional -> MENOR .)
    RESTA           reduce using rule 74 (operador_condicional -> MENOR .)
    MULT            reduce using rule 74 (operador_condicional -> MENOR .)
    DIV             reduce using rule 74 (operador_condicional -> MENOR .)


state 155

    (75) operador_condicional -> MENORIGUAL .

    NOMBRE          reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    DOUBLE          reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    INT             reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    STRING          reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    FALSE           reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    TRUE            reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    PARIZQ          reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    SUMA            reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    RESTA           reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    MULT            reduce using rule 75 (operador_condicional -> MENORIGUAL .)
    DIV             reduce using rule 75 (operador_condicional -> MENORIGUAL .)


state 156

    (42) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones . indentacion LLAVEDER
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 101 (vacio -> .)

    indentacion                    shift and go to state 181
    vacio                          shift and go to state 46

state 157

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA . condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (76) condicion -> . comparables operador_condicional comparables condicion_extra
    (77) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    PARIZQ          shift and go to state 111
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    condicion                      shift and go to state 182
    comparables                    shift and go to state 113
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 158

    (51) ciclo_while -> WHILE PARIZQ condicion PARDER . LLAVEIZQ

    LLAVEIZQ        shift and go to state 183


state 159

    (52) imprimir -> PRINT PARIZQ tipo_variable PARDER .

    COMENTARIO      reduce using rule 52 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)
    NEWLINE         reduce using rule 52 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)


state 160

    (53) leer -> READ PARIZQ NOMBRE PARDER .

    COMENTARIO      reduce using rule 53 (leer -> READ PARIZQ NOMBRE PARDER .)
    NEWLINE         reduce using rule 53 (leer -> READ PARIZQ NOMBRE PARDER .)


state 161

    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (66) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 184


state 162

    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (67) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 185


state 163

    (15) llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .

    COMENTARIO      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    NEWLINE         reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    SUMA            reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    RESTA           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MULT            reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIV             reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    DIFERENTE       reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    IGUAL           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYOR           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYORIGUAL      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENOR           reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    MENORIGUAL      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PARDER          reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    COMA            reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    PUNTOYCOMA      reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    AND             reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)
    OR              reduce using rule 15 (llamado_funcion -> NOMBRE PARIZQ parametro_llamado PARDER .)


state 164

    (16) llamado_funcion -> NOMBRE PARIZQ vacio PARDER .

    COMENTARIO      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    NEWLINE         reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    SUMA            reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    RESTA           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MULT            reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    DIV             reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    DIFERENTE       reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    IGUAL           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MAYOR           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MAYORIGUAL      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MENOR           reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    MENORIGUAL      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    PARDER          reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    COMA            reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    PUNTOYCOMA      reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    AND             reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)
    OR              reduce using rule 16 (llamado_funcion -> NOMBRE PARIZQ vacio PARDER .)


state 165

    (17) parametro_llamado -> tipo_variable parametro_llamado_extra .

    PARDER          reduce using rule 17 (parametro_llamado -> tipo_variable parametro_llamado_extra .)


state 166

    (19) parametro_llamado_extra -> COMA . parametro_llamado
    (17) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (18) parametro_llamado -> . op_aritmetica parametro_llamado_extra
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    parametro_llamado              shift and go to state 186
    tipo_variable                  shift and go to state 128
    op_aritmetica                  shift and go to state 129
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 167

    (20) parametro_llamado_extra -> vacio .

    PARDER          reduce using rule 20 (parametro_llamado_extra -> vacio .)


state 168

    (18) parametro_llamado -> op_aritmetica parametro_llamado_extra .

    PARDER          reduce using rule 18 (parametro_llamado -> op_aritmetica parametro_llamado_extra .)


state 169

    (56) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .
    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (60) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable

    COMENTARIO      reduce using rule 56 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)
    NEWLINE         reduce using rule 56 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER .)
    ASIGNACION      shift and go to state 187


state 170

    (57) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .
    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (61) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable

    COMENTARIO      reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)
    NEWLINE         reduce using rule 57 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER .)
    ASIGNACION      shift and go to state 188


state 171

    (89) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    COMENTARIO      reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    NEWLINE         reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    SUMA            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIFERENTE       reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    IGUAL           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYOR           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYORIGUAL      reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENOR           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENORIGUAL      reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    COMA            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    PARDER          reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    PUNTOYCOMA      reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    AND             reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    OR              reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 172

    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ . op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (101) vacio -> .
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica_extra            shift and go to state 189
    tipo_variable                  shift and go to state 140
    op_aritmetica                  shift and go to state 141
    vacio                          shift and go to state 92
    llamado_funcion                shift and go to state 89

state 173

    (91) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (89) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    PARIZQ          shift and go to state 172
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88

    tipo_variable                  shift and go to state 190
    llamado_funcion                shift and go to state 89

state 174

    (12) parametro -> NOMBRE parametro_extra .

    PARDER          reduce using rule 12 (parametro -> NOMBRE parametro_extra .)


state 175

    (13) parametro_extra -> COMA . NOMBRE parametro_extra

    NOMBRE          shift and go to state 191


state 176

    (14) parametro_extra -> vacio .

    PARDER          reduce using rule 14 (parametro_extra -> vacio .)


state 177

    (6) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .

    LLAVEIZQ        reduce using rule 6 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)


state 178

    (77) condicion -> PARIZQ comparables operador_condicional . comparables condicion_extra PARDER condicion_extra
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    PARIZQ          shift and go to state 91
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    comparables                    shift and go to state 192
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 179

    (41) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ . NEWLINE instrucciones indentacion LLAVEDER

    NEWLINE         shift and go to state 193


state 180

    (76) condicion -> comparables operador_condicional comparables . condicion_extra
    (78) condicion_extra -> . operador_logico condicion
    (79) condicion_extra -> . vacio
    (99) operador_logico -> . AND
    (100) operador_logico -> . OR
    (101) vacio -> .

    AND             shift and go to state 197
    OR              shift and go to state 198
    PARDER          reduce using rule 101 (vacio -> .)
    PUNTOYCOMA      reduce using rule 101 (vacio -> .)

    condicion_extra                shift and go to state 194
    operador_logico                shift and go to state 195
    vacio                          shift and go to state 196

state 181

    (42) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 199


state 182

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion . PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER

    PUNTOYCOMA      shift and go to state 200


state 183

    (51) ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .

    COMENTARIO      reduce using rule 51 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .)
    NEWLINE         reduce using rule 51 (ciclo_while -> WHILE PARIZQ condicion PARDER LLAVEIZQ .)


state 184

    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (66) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (101) vacio -> .

    PARIZQ          shift and go to state 91
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica                  shift and go to state 201
    tipo_variable                  shift and go to state 202
    op_aritmetica_extra            shift and go to state 90
    llamado_funcion                shift and go to state 89
    vacio                          shift and go to state 92

state 185

    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (67) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (101) vacio -> .

    PARIZQ          shift and go to state 91
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica                  shift and go to state 203
    tipo_variable                  shift and go to state 204
    op_aritmetica_extra            shift and go to state 90
    llamado_funcion                shift and go to state 89
    vacio                          shift and go to state 92

state 186

    (19) parametro_llamado_extra -> COMA parametro_llamado .

    PARDER          reduce using rule 19 (parametro_llamado_extra -> COMA parametro_llamado .)


state 187

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (60) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (101) vacio -> .

    PARIZQ          shift and go to state 91
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica                  shift and go to state 205
    tipo_variable                  shift and go to state 206
    op_aritmetica_extra            shift and go to state 90
    llamado_funcion                shift and go to state 89
    vacio                          shift and go to state 92

state 188

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (61) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (101) vacio -> .

    PARIZQ          shift and go to state 91
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    op_aritmetica                  shift and go to state 207
    tipo_variable                  shift and go to state 208
    op_aritmetica_extra            shift and go to state 90
    llamado_funcion                shift and go to state 89
    vacio                          shift and go to state 92

state 189

    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra . operador_aritmetico tipo_variable PARDER
    (89) op_aritmetica -> op_aritmetica_extra . operador_aritmetico tipo_variable
    (90) op_aritmetica -> op_aritmetica_extra . operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (95) operador_aritmetico -> . SUMA
    (96) operador_aritmetico -> . RESTA
    (97) operador_aritmetico -> . MULT
    (98) operador_aritmetico -> . DIV

    SUMA            shift and go to state 135
    RESTA           shift and go to state 136
    MULT            shift and go to state 137
    DIV             shift and go to state 138

    operador_aritmetico            shift and go to state 209

state 190

    (91) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (89) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 210
    SUMA            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIFERENTE       reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    IGUAL           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYOR           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MAYORIGUAL      reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENOR           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MENORIGUAL      reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 191

    (13) parametro_extra -> COMA NOMBRE . parametro_extra
    (13) parametro_extra -> . COMA NOMBRE parametro_extra
    (14) parametro_extra -> . vacio
    (101) vacio -> .

    COMA            shift and go to state 175
    PARDER          reduce using rule 101 (vacio -> .)

    parametro_extra                shift and go to state 211
    vacio                          shift and go to state 176

state 192

    (77) condicion -> PARIZQ comparables operador_condicional comparables . condicion_extra PARDER condicion_extra
    (78) condicion_extra -> . operador_logico condicion
    (79) condicion_extra -> . vacio
    (99) operador_logico -> . AND
    (100) operador_logico -> . OR
    (101) vacio -> .

    AND             shift and go to state 197
    OR              shift and go to state 198
    PARDER          reduce using rule 101 (vacio -> .)

    condicion_extra                shift and go to state 212
    operador_logico                shift and go to state 195
    vacio                          shift and go to state 196

state 193

    (41) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE . instrucciones indentacion LLAVEDER
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)

  ! TABULACION      [ reduce using rule 101 (vacio -> .) ]

    instrucciones                  shift and go to state 213
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 48

state 194

    (76) condicion -> comparables operador_condicional comparables condicion_extra .

    PARDER          reduce using rule 76 (condicion -> comparables operador_condicional comparables condicion_extra .)
    PUNTOYCOMA      reduce using rule 76 (condicion -> comparables operador_condicional comparables condicion_extra .)


state 195

    (78) condicion_extra -> operador_logico . condicion
    (76) condicion -> . comparables operador_condicional comparables condicion_extra
    (77) condicion -> . PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra
    (80) comparables -> . tipo_variable
    (81) comparables -> . op_aritmetica
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (89) op_aritmetica -> . op_aritmetica_extra operador_aritmetico tipo_variable
    (90) op_aritmetica -> . op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (91) op_aritmetica -> . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER
    (92) op_aritmetica_extra -> . tipo_variable
    (93) op_aritmetica_extra -> . op_aritmetica
    (94) op_aritmetica_extra -> . vacio
    (101) vacio -> .

    PARIZQ          shift and go to state 111
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88
    SUMA            reduce using rule 101 (vacio -> .)
    RESTA           reduce using rule 101 (vacio -> .)
    MULT            reduce using rule 101 (vacio -> .)
    DIV             reduce using rule 101 (vacio -> .)

    condicion                      shift and go to state 214
    comparables                    shift and go to state 113
    tipo_variable                  shift and go to state 114
    op_aritmetica                  shift and go to state 115
    llamado_funcion                shift and go to state 89
    op_aritmetica_extra            shift and go to state 90
    vacio                          shift and go to state 92

state 196

    (79) condicion_extra -> vacio .

    PARDER          reduce using rule 79 (condicion_extra -> vacio .)
    PUNTOYCOMA      reduce using rule 79 (condicion_extra -> vacio .)


state 197

    (99) operador_logico -> AND .

    PARIZQ          reduce using rule 99 (operador_logico -> AND .)
    NOMBRE          reduce using rule 99 (operador_logico -> AND .)
    DOUBLE          reduce using rule 99 (operador_logico -> AND .)
    INT             reduce using rule 99 (operador_logico -> AND .)
    STRING          reduce using rule 99 (operador_logico -> AND .)
    FALSE           reduce using rule 99 (operador_logico -> AND .)
    TRUE            reduce using rule 99 (operador_logico -> AND .)
    SUMA            reduce using rule 99 (operador_logico -> AND .)
    RESTA           reduce using rule 99 (operador_logico -> AND .)
    MULT            reduce using rule 99 (operador_logico -> AND .)
    DIV             reduce using rule 99 (operador_logico -> AND .)


state 198

    (100) operador_logico -> OR .

    PARIZQ          reduce using rule 100 (operador_logico -> OR .)
    NOMBRE          reduce using rule 100 (operador_logico -> OR .)
    DOUBLE          reduce using rule 100 (operador_logico -> OR .)
    INT             reduce using rule 100 (operador_logico -> OR .)
    STRING          reduce using rule 100 (operador_logico -> OR .)
    FALSE           reduce using rule 100 (operador_logico -> OR .)
    TRUE            reduce using rule 100 (operador_logico -> OR .)
    SUMA            reduce using rule 100 (operador_logico -> OR .)
    RESTA           reduce using rule 100 (operador_logico -> OR .)
    MULT            reduce using rule 100 (operador_logico -> OR .)
    DIV             reduce using rule 100 (operador_logico -> OR .)


state 199

    (42) condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .

    COMENTARIO      reduce using rule 42 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)
    NEWLINE         reduce using rule 42 (condicion_else -> ELSE LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)


state 200

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA . incdec PARDER LLAVEIZQ instrucciones LLAVEDER
    (45) incdec -> . pre_incdec
    (46) incdec -> . post_incdec
    (47) pre_incdec -> . INCREMENTAR NOMBRE
    (48) pre_incdec -> . DECREMENTAR NOMBRE
    (49) post_incdec -> . NOMBRE INCREMENTAR
    (50) post_incdec -> . NOMBRE DECREMENTAR

    INCREMENTAR     shift and go to state 43
    DECREMENTAR     shift and go to state 44
    NOMBRE          shift and go to state 216

    incdec                         shift and go to state 215
    pre_incdec                     shift and go to state 37
    post_incdec                    shift and go to state 38

state 201

    (64) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 64 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 64 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 202

    (66) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 66 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 66 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 203

    (65) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 65 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 65 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 204

    (67) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 67 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 67 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 205

    (58) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 58 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 206

    (60) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 60 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 60 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 207

    (59) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .
    (93) op_aritmetica_extra -> op_aritmetica .

    COMENTARIO      reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    NEWLINE         reduce using rule 59 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)
    SUMA            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    RESTA           reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    MULT            reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)
    DIV             reduce using rule 93 (op_aritmetica_extra -> op_aritmetica .)


state 208

    (61) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (92) op_aritmetica_extra -> tipo_variable .

    COMENTARIO      reduce using rule 61 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    NEWLINE         reduce using rule 61 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    RESTA           reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    MULT            reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)
    DIV             reduce using rule 92 (op_aritmetica_extra -> tipo_variable .)


state 209

    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico . tipo_variable PARDER
    (89) op_aritmetica -> op_aritmetica_extra operador_aritmetico . tipo_variable
    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico . PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER
    (82) tipo_variable -> . NOMBRE
    (83) tipo_variable -> . DOUBLE
    (84) tipo_variable -> . INT
    (85) tipo_variable -> . STRING
    (86) tipo_variable -> . FALSE
    (87) tipo_variable -> . TRUE
    (88) tipo_variable -> . llamado_funcion
    (15) llamado_funcion -> . NOMBRE PARIZQ parametro_llamado PARDER
    (16) llamado_funcion -> . NOMBRE PARIZQ vacio PARDER

    PARIZQ          shift and go to state 172
    NOMBRE          shift and go to state 83
    DOUBLE          shift and go to state 84
    INT             shift and go to state 85
    STRING          shift and go to state 86
    FALSE           shift and go to state 87
    TRUE            shift and go to state 88

    tipo_variable                  shift and go to state 217
    llamado_funcion                shift and go to state 89

state 210

    (91) op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    COMENTARIO      reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    NEWLINE         reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIFERENTE       reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    IGUAL           reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYOR           reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYORIGUAL      reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENOR           reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENORIGUAL      reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    COMA            reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PARDER          reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PUNTOYCOMA      reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    AND             reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    OR              reduce using rule 91 (op_aritmetica -> PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 211

    (13) parametro_extra -> COMA NOMBRE parametro_extra .

    PARDER          reduce using rule 13 (parametro_extra -> COMA NOMBRE parametro_extra .)


state 212

    (77) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra . PARDER condicion_extra

    PARDER          shift and go to state 218


state 213

    (41) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones . indentacion LLAVEDER
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 101 (vacio -> .)

    indentacion                    shift and go to state 219
    vacio                          shift and go to state 46

state 214

    (78) condicion_extra -> operador_logico condicion .

    PARDER          reduce using rule 78 (condicion_extra -> operador_logico condicion .)
    PUNTOYCOMA      reduce using rule 78 (condicion_extra -> operador_logico condicion .)


state 215

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec . PARDER LLAVEIZQ instrucciones LLAVEDER

    PARDER          shift and go to state 220


state 216

    (49) post_incdec -> NOMBRE . INCREMENTAR
    (50) post_incdec -> NOMBRE . DECREMENTAR

    INCREMENTAR     shift and go to state 77
    DECREMENTAR     shift and go to state 78


state 217

    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable . PARDER
    (89) op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .

    PARDER          shift and go to state 221
    SUMA            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    RESTA           reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    MULT            reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)
    DIV             reduce using rule 89 (op_aritmetica -> op_aritmetica_extra operador_aritmetico tipo_variable .)


state 218

    (77) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER . condicion_extra
    (78) condicion_extra -> . operador_logico condicion
    (79) condicion_extra -> . vacio
    (99) operador_logico -> . AND
    (100) operador_logico -> . OR
    (101) vacio -> .

    AND             shift and go to state 197
    OR              shift and go to state 198
    PARDER          reduce using rule 101 (vacio -> .)
    PUNTOYCOMA      reduce using rule 101 (vacio -> .)

    condicion_extra                shift and go to state 222
    operador_logico                shift and go to state 195
    vacio                          shift and go to state 196

state 219

    (41) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion . LLAVEDER

    LLAVEDER        shift and go to state 223


state 220

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 224


state 221

    (90) op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .

    COMENTARIO      reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    NEWLINE         reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    SUMA            reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    RESTA           reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MULT            reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIV             reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    DIFERENTE       reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    IGUAL           reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYOR           reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MAYORIGUAL      reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENOR           reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    MENORIGUAL      reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    COMA            reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PARDER          reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    PUNTOYCOMA      reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    AND             reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)
    OR              reduce using rule 90 (op_aritmetica -> op_aritmetica_extra operador_aritmetico PARIZQ op_aritmetica_extra operador_aritmetico tipo_variable PARDER .)


state 222

    (77) condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .

    PARDER          reduce using rule 77 (condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .)
    PUNTOYCOMA      reduce using rule 77 (condicion -> PARIZQ comparables operador_condicional comparables condicion_extra PARDER condicion_extra .)


state 223

    (41) condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .

    COMENTARIO      reduce using rule 41 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)
    NEWLINE         reduce using rule 41 (condicion_if -> IF PARIZQ condicion PARDER LLAVEIZQ NEWLINE instrucciones indentacion LLAVEDER .)


state 224

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ . instrucciones LLAVEDER
    (37) instrucciones -> . indentacion instruccion concat_instruccion
    (38) instrucciones -> . vacio
    (4) indentacion -> . TABULACION indentacion
    (5) indentacion -> . vacio
    (101) vacio -> .

    TABULACION      shift and go to state 9
    LLAVEDER        reduce using rule 101 (vacio -> .)
    IF              reduce using rule 101 (vacio -> .)
    ELSE            reduce using rule 101 (vacio -> .)
    FOR             reduce using rule 101 (vacio -> .)
    WHILE           reduce using rule 101 (vacio -> .)
    PRINT           reduce using rule 101 (vacio -> .)
    READ            reduce using rule 101 (vacio -> .)
    DECVARIABLE     reduce using rule 101 (vacio -> .)
    NOMBRE          reduce using rule 101 (vacio -> .)
    RETURN          reduce using rule 101 (vacio -> .)
    COMENTARIO      reduce using rule 101 (vacio -> .)
    INCREMENTAR     reduce using rule 101 (vacio -> .)
    DECREMENTAR     reduce using rule 101 (vacio -> .)
    NEWLINE         reduce using rule 101 (vacio -> .)

    instrucciones                  shift and go to state 225
    indentacion                    shift and go to state 6
    vacio                          shift and go to state 48

state 225

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones . LLAVEDER

    LLAVEDER        shift and go to state 226


state 226

    (44) ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER .

    COMENTARIO      reduce using rule 44 (ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER .)
    NEWLINE         reduce using rule 44 (ciclo_for -> FOR PARIZQ dec_variable PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER LLAVEIZQ instrucciones LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRIVATE in state 0 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 0 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 0 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 3 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 3 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 3 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 15 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 95 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 95 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 95 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 97 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 116 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 193 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (Niark -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 4
WARNING: reduce/reduce conflict in state 4 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (instrucciones -> vacio) in state 4
WARNING: reduce/reduce conflict in state 52 resolved using rule (indentacion -> vacio)
WARNING: rejected rule (concat_instruccion -> vacio) in state 52
