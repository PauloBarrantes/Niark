Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    COMENTARIO
    IMPORT
    SWITCH

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> definicion_funcion instrucciones Niark NEWLINE
Rule 2     Niark -> vacio
Rule 3     indentacion -> TABULACION indentacion
Rule 4     indentacion -> vacio
Rule 5     definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER
Rule 6     dominio -> PRIVATE
Rule 7     dominio -> PUBLIC
Rule 8     tipo_return -> VOID
Rule 9     tipo_return -> FUNCTION
Rule 10    parametro -> vacio
Rule 11    parametro -> NOMBRE parametro_extra
Rule 12    parametro_extra -> COMA NOMBRE parametro_extra
Rule 13    parametro_extra -> vacio
Rule 14    llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER
Rule 15    parametro_llamado -> vacio
Rule 16    parametro_llamado -> tipo_variable parametro_llamado_extra
Rule 17    parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra
Rule 18    parametro_llamado_extra -> vacio
Rule 19    instruccion -> condicion_if NEWLINE
Rule 20    instruccion -> condicion_else NEWLINE
Rule 21    instruccion -> ciclo_for NEWLINE
Rule 22    instruccion -> ciclo_while NEWLINE
Rule 23    instruccion -> imprimir NEWLINE
Rule 24    instruccion -> leer NEWLINE
Rule 25    instruccion -> incdec NEWLINE
Rule 26    instruccion -> dec_variable NEWLINE
Rule 27    instruccion -> dec_vector NEWLINE
Rule 28    instruccion -> asigna NEWLINE
Rule 29    instruccion -> asignacion_vector NEWLINE
Rule 30    instruccion -> llamado_funcion NEWLINE
Rule 31    instruccion -> retorno NEWLINE
Rule 32    instrucciones -> indentacion instruccion concat_instruccion
Rule 33    instrucciones -> vacio
Rule 34    concat_instruccion -> instruccion concat_instruccion
Rule 35    concat_instruccion -> vacio
Rule 36    condicion_if -> IF PARIZQ condicion PARDER
Rule 37    condicion_else -> ELSE
Rule 38    condicion_else -> ELSE condicion_if
Rule 39    ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
Rule 40    incdec -> pre_incdec
Rule 41    incdec -> post_incdec
Rule 42    pre_incdec -> INCREMENTAR NOMBRE
Rule 43    pre_incdec -> DECREMENTAR NOMBRE
Rule 44    post_incdec -> NOMBRE INCREMENTAR
Rule 45    post_incdec -> NOMBRE DECREMENTAR
Rule 46    ciclo_while -> WHILE PARIZQ condicion PARDER
Rule 47    imprimir -> PRINT PARIZQ tipo_variable PARDER
Rule 48    leer -> READ PARIZQ NOMBRE PARDER
Rule 49    dec_variable -> DECVARIABLE ASIGNACION op_aritmetica
Rule 50    dec_variable -> DECVARIABLE ASIGNACION tipo_variable
Rule 51    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 52    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 53    dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 54    dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 55    asigna -> NOMBRE ASIGNACION op_aritmetica
Rule 56    asigna -> NOMBRE ASIGNACION tipo_variable
Rule 57    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 58    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 59    asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
Rule 60    asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
Rule 61    retorno -> RETURN tipo_variable
Rule 62    retorno -> RETURN op_aritmetica
Rule 63    operador_condicional -> DIFERENTE
Rule 64    operador_condicional -> IGUAL
Rule 65    operador_condicional -> MAYOR
Rule 66    operador_condicional -> MAYORIGUAL
Rule 67    operador_condicional -> MENOR
Rule 68    operador_condicional -> MENORIGUAL
Rule 69    condicion -> tipo_variable operador_condicional tipo_variable condicion_extra
Rule 70    condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
Rule 71    condicion_extra -> vacio
Rule 72    tipo_variable -> NOMBRE
Rule 73    tipo_variable -> DOUBLE
Rule 74    tipo_variable -> INT
Rule 75    tipo_variable -> STRING
Rule 76    tipo_variable -> FALSE
Rule 77    tipo_variable -> TRUE
Rule 78    tipo_variable -> llamado_funcion
Rule 79    op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
Rule 80    op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra
Rule 81    op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
Rule 82    op_aritmetica_extra -> vacio
Rule 83    operador_aritmetico -> SUMA
Rule 84    operador_aritmetico -> RESTA
Rule 85    operador_aritmetico -> MULT
Rule 86    operador_aritmetico -> DIV
Rule 87    operador_logico -> AND
Rule 88    operador_logico -> OR
Rule 89    vacio -> <empty>

Terminals, with rules where they appear

AND                  : 87
ASIGNACION           : 39 49 50 51 52 53 54 55 56 57 58 59 60
BREAK                : 
CASE                 : 
COMA                 : 12 17
COMENTARIO           : 
CORCHETEDER          : 51 52 53 54 57 58 59 60
CORCHETEIZQ          : 51 52 53 54 57 58 59 60
DECREMENTAR          : 43 45
DECVARIABLE          : 39 49 50 51 52 53 54
DIFERENTE            : 63
DIV                  : 86
DOUBLE               : 73
ELSE                 : 37 38
FALSE                : 76
FOR                  : 39
FUNCTION             : 9
IF                   : 36
IGUAL                : 64
IMPORT               : 
INCREMENTAR          : 42 44
INT                  : 39 52 54 58 60 74
MAYOR                : 65
MAYORIGUAL           : 66
MENOR                : 67
MENORIGUAL           : 68
MULT                 : 85
NEWLINE              : 1 19 20 21 22 23 24 25 26 27 28 29 30 31
NOMBRE               : 5 11 12 14 17 42 43 44 45 48 51 53 55 56 57 57 58 59 59 60 72
OR                   : 88
PARDER               : 5 14 36 39 46 47 48 81
PARIZQ               : 5 14 36 39 46 47 48 81
PRINT                : 47
PRIVATE              : 6
PUBLIC               : 7
PUNTOYCOMA           : 39 39
READ                 : 48
RESTA                : 84
RETURN               : 61 62
STRING               : 75
SUMA                 : 83
SWITCH               : 
TABULACION           : 3
TRUE                 : 77
VOID                 : 8
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

Niark                : 1 0
asigna               : 28
asignacion_vector    : 29
ciclo_for            : 21
ciclo_while          : 22
concat_instruccion   : 32 34
condicion            : 36 39 46
condicion_else       : 20
condicion_extra      : 69 70
condicion_if         : 19 38
dec_variable         : 26
dec_vector           : 27
definicion_funcion   : 1
dominio              : 5
imprimir             : 23
incdec               : 25 39
indentacion          : 3 14 32
instruccion          : 32 34
instrucciones        : 1
leer                 : 24
llamado_funcion      : 30 78
op_aritmetica        : 49 51 52 55 57 58 62
op_aritmetica_extra  : 79 80 81
operador_aritmetico  : 79 80 81
operador_condicional : 69 70
operador_logico      : 70
parametro            : 5
parametro_extra      : 11 12
parametro_llamado    : 14
parametro_llamado_extra : 16 17
post_incdec          : 41
pre_incdec           : 40
retorno              : 31
tipo_return          : 5
tipo_variable        : 16 47 50 53 54 56 59 60 61 69 69 70 70 79 79 80 81
vacio                : 2 4 10 13 15 18 33 35 71 82

Parsing method: LALR

state 0

    (0) S' -> . Niark
    (1) Niark -> . definicion_funcion instrucciones Niark NEWLINE
    (2) Niark -> . vacio
    (5) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (89) vacio -> .
    (6) dominio -> . PRIVATE
    (7) dominio -> . PUBLIC

    $end            reduce using rule 89 (vacio -> .)
    PRIVATE         shift and go to state 5
    PUBLIC          shift and go to state 6

    Niark                          shift and go to state 1
    definicion_funcion             shift and go to state 2
    vacio                          shift and go to state 3
    dominio                        shift and go to state 4

state 1

    (0) S' -> Niark .



state 2

    (1) Niark -> definicion_funcion . instrucciones Niark NEWLINE
    (32) instrucciones -> . indentacion instruccion concat_instruccion
    (33) instrucciones -> . vacio
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 10
    PRIVATE         reduce using rule 89 (vacio -> .)
    PUBLIC          reduce using rule 89 (vacio -> .)
    NEWLINE         reduce using rule 89 (vacio -> .)
    IF              reduce using rule 89 (vacio -> .)
    ELSE            reduce using rule 89 (vacio -> .)
    FOR             reduce using rule 89 (vacio -> .)
    WHILE           reduce using rule 89 (vacio -> .)
    PRINT           reduce using rule 89 (vacio -> .)
    READ            reduce using rule 89 (vacio -> .)
    DECVARIABLE     reduce using rule 89 (vacio -> .)
    NOMBRE          reduce using rule 89 (vacio -> .)
    RETURN          reduce using rule 89 (vacio -> .)
    INCREMENTAR     reduce using rule 89 (vacio -> .)
    DECREMENTAR     reduce using rule 89 (vacio -> .)

  ! TABULACION      [ reduce using rule 89 (vacio -> .) ]

    instrucciones                  shift and go to state 7
    indentacion                    shift and go to state 8
    vacio                          shift and go to state 9

state 3

    (2) Niark -> vacio .

    $end            reduce using rule 2 (Niark -> vacio .)
    NEWLINE         reduce using rule 2 (Niark -> vacio .)


state 4

    (5) definicion_funcion -> dominio . tipo_return NOMBRE PARIZQ parametro PARDER
    (8) tipo_return -> . VOID
    (9) tipo_return -> . FUNCTION

    VOID            shift and go to state 12
    FUNCTION        shift and go to state 13

    tipo_return                    shift and go to state 11

state 5

    (6) dominio -> PRIVATE .

    VOID            reduce using rule 6 (dominio -> PRIVATE .)
    FUNCTION        reduce using rule 6 (dominio -> PRIVATE .)


state 6

    (7) dominio -> PUBLIC .

    VOID            reduce using rule 7 (dominio -> PUBLIC .)
    FUNCTION        reduce using rule 7 (dominio -> PUBLIC .)


state 7

    (1) Niark -> definicion_funcion instrucciones . Niark NEWLINE
    (1) Niark -> . definicion_funcion instrucciones Niark NEWLINE
    (2) Niark -> . vacio
    (5) definicion_funcion -> . dominio tipo_return NOMBRE PARIZQ parametro PARDER
    (89) vacio -> .
    (6) dominio -> . PRIVATE
    (7) dominio -> . PUBLIC

    NEWLINE         reduce using rule 89 (vacio -> .)
    PRIVATE         shift and go to state 5
    PUBLIC          shift and go to state 6

    definicion_funcion             shift and go to state 2
    Niark                          shift and go to state 14
    vacio                          shift and go to state 3
    dominio                        shift and go to state 4

state 8

    (32) instrucciones -> indentacion . instruccion concat_instruccion
    (19) instruccion -> . condicion_if NEWLINE
    (20) instruccion -> . condicion_else NEWLINE
    (21) instruccion -> . ciclo_for NEWLINE
    (22) instruccion -> . ciclo_while NEWLINE
    (23) instruccion -> . imprimir NEWLINE
    (24) instruccion -> . leer NEWLINE
    (25) instruccion -> . incdec NEWLINE
    (26) instruccion -> . dec_variable NEWLINE
    (27) instruccion -> . dec_vector NEWLINE
    (28) instruccion -> . asigna NEWLINE
    (29) instruccion -> . asignacion_vector NEWLINE
    (30) instruccion -> . llamado_funcion NEWLINE
    (31) instruccion -> . retorno NEWLINE
    (36) condicion_if -> . IF PARIZQ condicion PARDER
    (37) condicion_else -> . ELSE
    (38) condicion_else -> . ELSE condicion_if
    (39) ciclo_for -> . FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
    (46) ciclo_while -> . WHILE PARIZQ condicion PARDER
    (47) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (48) leer -> . READ PARIZQ NOMBRE PARDER
    (40) incdec -> . pre_incdec
    (41) incdec -> . post_incdec
    (49) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (50) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (51) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (52) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (53) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (54) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (55) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (56) asigna -> . NOMBRE ASIGNACION tipo_variable
    (57) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (58) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (59) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (60) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (61) retorno -> . RETURN tipo_variable
    (62) retorno -> . RETURN op_aritmetica
    (42) pre_incdec -> . INCREMENTAR NOMBRE
    (43) pre_incdec -> . DECREMENTAR NOMBRE
    (44) post_incdec -> . NOMBRE INCREMENTAR
    (45) post_incdec -> . NOMBRE DECREMENTAR
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 34
    PRINT           shift and go to state 35
    READ            shift and go to state 36
    DECVARIABLE     shift and go to state 33
    NOMBRE          shift and go to state 37
    RETURN          shift and go to state 40
    INCREMENTAR     shift and go to state 41
    DECREMENTAR     shift and go to state 42
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    indentacion                    shift and go to state 15
    instruccion                    shift and go to state 16
    condicion_if                   shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    asigna                         shift and go to state 26
    asignacion_vector              shift and go to state 27
    llamado_funcion                shift and go to state 28
    retorno                        shift and go to state 29
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39
    vacio                          shift and go to state 43

state 9

    (33) instrucciones -> vacio .
    (4) indentacion -> vacio .

    PRIVATE         reduce using rule 33 (instrucciones -> vacio .)
    PUBLIC          reduce using rule 33 (instrucciones -> vacio .)
    NEWLINE         reduce using rule 33 (instrucciones -> vacio .)
    IF              reduce using rule 4 (indentacion -> vacio .)
    ELSE            reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    RETURN          reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    TABULACION      reduce using rule 4 (indentacion -> vacio .)


state 10

    (3) indentacion -> TABULACION . indentacion
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for TABULACION resolved as shift
    TABULACION      shift and go to state 10
    IF              reduce using rule 89 (vacio -> .)
    ELSE            reduce using rule 89 (vacio -> .)
    FOR             reduce using rule 89 (vacio -> .)
    WHILE           reduce using rule 89 (vacio -> .)
    PRINT           reduce using rule 89 (vacio -> .)
    READ            reduce using rule 89 (vacio -> .)
    DECVARIABLE     reduce using rule 89 (vacio -> .)
    NOMBRE          reduce using rule 89 (vacio -> .)
    RETURN          reduce using rule 89 (vacio -> .)
    INCREMENTAR     reduce using rule 89 (vacio -> .)
    DECREMENTAR     reduce using rule 89 (vacio -> .)

  ! TABULACION      [ reduce using rule 89 (vacio -> .) ]

    indentacion                    shift and go to state 44
    vacio                          shift and go to state 43

state 11

    (5) definicion_funcion -> dominio tipo_return . NOMBRE PARIZQ parametro PARDER

    NOMBRE          shift and go to state 45


state 12

    (8) tipo_return -> VOID .

    NOMBRE          reduce using rule 8 (tipo_return -> VOID .)


state 13

    (9) tipo_return -> FUNCTION .

    NOMBRE          reduce using rule 9 (tipo_return -> FUNCTION .)


state 14

    (1) Niark -> definicion_funcion instrucciones Niark . NEWLINE

    NEWLINE         shift and go to state 46


state 15

    (14) llamado_funcion -> indentacion . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 47


state 16

    (32) instrucciones -> indentacion instruccion . concat_instruccion
    (34) concat_instruccion -> . instruccion concat_instruccion
    (35) concat_instruccion -> . vacio
    (19) instruccion -> . condicion_if NEWLINE
    (20) instruccion -> . condicion_else NEWLINE
    (21) instruccion -> . ciclo_for NEWLINE
    (22) instruccion -> . ciclo_while NEWLINE
    (23) instruccion -> . imprimir NEWLINE
    (24) instruccion -> . leer NEWLINE
    (25) instruccion -> . incdec NEWLINE
    (26) instruccion -> . dec_variable NEWLINE
    (27) instruccion -> . dec_vector NEWLINE
    (28) instruccion -> . asigna NEWLINE
    (29) instruccion -> . asignacion_vector NEWLINE
    (30) instruccion -> . llamado_funcion NEWLINE
    (31) instruccion -> . retorno NEWLINE
    (89) vacio -> .
    (36) condicion_if -> . IF PARIZQ condicion PARDER
    (37) condicion_else -> . ELSE
    (38) condicion_else -> . ELSE condicion_if
    (39) ciclo_for -> . FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
    (46) ciclo_while -> . WHILE PARIZQ condicion PARDER
    (47) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (48) leer -> . READ PARIZQ NOMBRE PARDER
    (40) incdec -> . pre_incdec
    (41) incdec -> . post_incdec
    (49) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (50) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (51) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (52) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (53) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (54) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (55) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (56) asigna -> . NOMBRE ASIGNACION tipo_variable
    (57) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (58) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (59) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (60) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (61) retorno -> . RETURN tipo_variable
    (62) retorno -> . RETURN op_aritmetica
    (42) pre_incdec -> . INCREMENTAR NOMBRE
    (43) pre_incdec -> . DECREMENTAR NOMBRE
    (44) post_incdec -> . NOMBRE INCREMENTAR
    (45) post_incdec -> . NOMBRE DECREMENTAR
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    PRIVATE         reduce using rule 89 (vacio -> .)
    PUBLIC          reduce using rule 89 (vacio -> .)
    NEWLINE         reduce using rule 89 (vacio -> .)
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 34
    PRINT           shift and go to state 35
    READ            shift and go to state 36
    DECVARIABLE     shift and go to state 33
    NOMBRE          shift and go to state 37
    RETURN          shift and go to state 40
    INCREMENTAR     shift and go to state 41
    DECREMENTAR     shift and go to state 42
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    indentacion                    shift and go to state 15
    instruccion                    shift and go to state 48
    concat_instruccion             shift and go to state 49
    vacio                          shift and go to state 50
    condicion_if                   shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    asigna                         shift and go to state 26
    asignacion_vector              shift and go to state 27
    llamado_funcion                shift and go to state 28
    retorno                        shift and go to state 29
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39

state 17

    (19) instruccion -> condicion_if . NEWLINE

    NEWLINE         shift and go to state 51


state 18

    (20) instruccion -> condicion_else . NEWLINE

    NEWLINE         shift and go to state 52


state 19

    (21) instruccion -> ciclo_for . NEWLINE

    NEWLINE         shift and go to state 53


state 20

    (22) instruccion -> ciclo_while . NEWLINE

    NEWLINE         shift and go to state 54


state 21

    (23) instruccion -> imprimir . NEWLINE

    NEWLINE         shift and go to state 55


state 22

    (24) instruccion -> leer . NEWLINE

    NEWLINE         shift and go to state 56


state 23

    (25) instruccion -> incdec . NEWLINE

    NEWLINE         shift and go to state 57


state 24

    (26) instruccion -> dec_variable . NEWLINE

    NEWLINE         shift and go to state 58


state 25

    (27) instruccion -> dec_vector . NEWLINE

    NEWLINE         shift and go to state 59


state 26

    (28) instruccion -> asigna . NEWLINE

    NEWLINE         shift and go to state 60


state 27

    (29) instruccion -> asignacion_vector . NEWLINE

    NEWLINE         shift and go to state 61


state 28

    (30) instruccion -> llamado_funcion . NEWLINE

    NEWLINE         shift and go to state 62


state 29

    (31) instruccion -> retorno . NEWLINE

    NEWLINE         shift and go to state 63


state 30

    (36) condicion_if -> IF . PARIZQ condicion PARDER

    PARIZQ          shift and go to state 64


state 31

    (37) condicion_else -> ELSE .
    (38) condicion_else -> ELSE . condicion_if
    (36) condicion_if -> . IF PARIZQ condicion PARDER

    NEWLINE         reduce using rule 37 (condicion_else -> ELSE .)
    IF              shift and go to state 30

    condicion_if                   shift and go to state 65

state 32

    (39) ciclo_for -> FOR . PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    PARIZQ          shift and go to state 66


state 33

    (49) dec_variable -> DECVARIABLE . ASIGNACION op_aritmetica
    (50) dec_variable -> DECVARIABLE . ASIGNACION tipo_variable
    (51) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (52) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (53) dec_vector -> DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (54) dec_vector -> DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 67
    CORCHETEIZQ     shift and go to state 68


state 34

    (46) ciclo_while -> WHILE . PARIZQ condicion PARDER

    PARIZQ          shift and go to state 69


state 35

    (47) imprimir -> PRINT . PARIZQ tipo_variable PARDER

    PARIZQ          shift and go to state 70


state 36

    (48) leer -> READ . PARIZQ NOMBRE PARDER

    PARIZQ          shift and go to state 71


state 37

    (55) asigna -> NOMBRE . ASIGNACION op_aritmetica
    (56) asigna -> NOMBRE . ASIGNACION tipo_variable
    (57) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (58) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (59) asignacion_vector -> NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (60) asignacion_vector -> NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (44) post_incdec -> NOMBRE . INCREMENTAR
    (45) post_incdec -> NOMBRE . DECREMENTAR

    ASIGNACION      shift and go to state 72
    CORCHETEIZQ     shift and go to state 73
    INCREMENTAR     shift and go to state 74
    DECREMENTAR     shift and go to state 75


state 38

    (40) incdec -> pre_incdec .

    NEWLINE         reduce using rule 40 (incdec -> pre_incdec .)
    PARDER          reduce using rule 40 (incdec -> pre_incdec .)


state 39

    (41) incdec -> post_incdec .

    NEWLINE         reduce using rule 41 (incdec -> post_incdec .)
    PARDER          reduce using rule 41 (incdec -> post_incdec .)


state 40

    (61) retorno -> RETURN . tipo_variable
    (62) retorno -> RETURN . op_aritmetica
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 76
    op_aritmetica                  shift and go to state 77
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 41

    (42) pre_incdec -> INCREMENTAR . NOMBRE

    NOMBRE          shift and go to state 85


state 42

    (43) pre_incdec -> DECREMENTAR . NOMBRE

    NOMBRE          shift and go to state 86


state 43

    (4) indentacion -> vacio .

    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    IF              reduce using rule 4 (indentacion -> vacio .)
    ELSE            reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    RETURN          reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    TABULACION      reduce using rule 4 (indentacion -> vacio .)


state 44

    (3) indentacion -> TABULACION indentacion .

    IF              reduce using rule 3 (indentacion -> TABULACION indentacion .)
    ELSE            reduce using rule 3 (indentacion -> TABULACION indentacion .)
    FOR             reduce using rule 3 (indentacion -> TABULACION indentacion .)
    WHILE           reduce using rule 3 (indentacion -> TABULACION indentacion .)
    PRINT           reduce using rule 3 (indentacion -> TABULACION indentacion .)
    READ            reduce using rule 3 (indentacion -> TABULACION indentacion .)
    DECVARIABLE     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    NOMBRE          reduce using rule 3 (indentacion -> TABULACION indentacion .)
    RETURN          reduce using rule 3 (indentacion -> TABULACION indentacion .)
    INCREMENTAR     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    DECREMENTAR     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    TABULACION      reduce using rule 3 (indentacion -> TABULACION indentacion .)


state 45

    (5) definicion_funcion -> dominio tipo_return NOMBRE . PARIZQ parametro PARDER

    PARIZQ          shift and go to state 87


state 46

    (1) Niark -> definicion_funcion instrucciones Niark NEWLINE .

    $end            reduce using rule 1 (Niark -> definicion_funcion instrucciones Niark NEWLINE .)
    NEWLINE         reduce using rule 1 (Niark -> definicion_funcion instrucciones Niark NEWLINE .)


state 47

    (14) llamado_funcion -> indentacion NOMBRE . PARIZQ parametro_llamado PARDER

    PARIZQ          shift and go to state 88


state 48

    (34) concat_instruccion -> instruccion . concat_instruccion
    (34) concat_instruccion -> . instruccion concat_instruccion
    (35) concat_instruccion -> . vacio
    (19) instruccion -> . condicion_if NEWLINE
    (20) instruccion -> . condicion_else NEWLINE
    (21) instruccion -> . ciclo_for NEWLINE
    (22) instruccion -> . ciclo_while NEWLINE
    (23) instruccion -> . imprimir NEWLINE
    (24) instruccion -> . leer NEWLINE
    (25) instruccion -> . incdec NEWLINE
    (26) instruccion -> . dec_variable NEWLINE
    (27) instruccion -> . dec_vector NEWLINE
    (28) instruccion -> . asigna NEWLINE
    (29) instruccion -> . asignacion_vector NEWLINE
    (30) instruccion -> . llamado_funcion NEWLINE
    (31) instruccion -> . retorno NEWLINE
    (89) vacio -> .
    (36) condicion_if -> . IF PARIZQ condicion PARDER
    (37) condicion_else -> . ELSE
    (38) condicion_else -> . ELSE condicion_if
    (39) ciclo_for -> . FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
    (46) ciclo_while -> . WHILE PARIZQ condicion PARDER
    (47) imprimir -> . PRINT PARIZQ tipo_variable PARDER
    (48) leer -> . READ PARIZQ NOMBRE PARDER
    (40) incdec -> . pre_incdec
    (41) incdec -> . post_incdec
    (49) dec_variable -> . DECVARIABLE ASIGNACION op_aritmetica
    (50) dec_variable -> . DECVARIABLE ASIGNACION tipo_variable
    (51) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (52) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (53) dec_vector -> . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (54) dec_vector -> . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (55) asigna -> . NOMBRE ASIGNACION op_aritmetica
    (56) asigna -> . NOMBRE ASIGNACION tipo_variable
    (57) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (58) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (59) asignacion_vector -> . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (60) asignacion_vector -> . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (61) retorno -> . RETURN tipo_variable
    (62) retorno -> . RETURN op_aritmetica
    (42) pre_incdec -> . INCREMENTAR NOMBRE
    (43) pre_incdec -> . DECREMENTAR NOMBRE
    (44) post_incdec -> . NOMBRE INCREMENTAR
    (45) post_incdec -> . NOMBRE DECREMENTAR
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    PRIVATE         reduce using rule 89 (vacio -> .)
    PUBLIC          reduce using rule 89 (vacio -> .)
    NEWLINE         reduce using rule 89 (vacio -> .)
    IF              shift and go to state 30
    ELSE            shift and go to state 31
    FOR             shift and go to state 32
    WHILE           shift and go to state 34
    PRINT           shift and go to state 35
    READ            shift and go to state 36
    DECVARIABLE     shift and go to state 33
    NOMBRE          shift and go to state 37
    RETURN          shift and go to state 40
    INCREMENTAR     shift and go to state 41
    DECREMENTAR     shift and go to state 42
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    instruccion                    shift and go to state 48
    concat_instruccion             shift and go to state 89
    vacio                          shift and go to state 50
    condicion_if                   shift and go to state 17
    condicion_else                 shift and go to state 18
    ciclo_for                      shift and go to state 19
    ciclo_while                    shift and go to state 20
    imprimir                       shift and go to state 21
    leer                           shift and go to state 22
    incdec                         shift and go to state 23
    dec_variable                   shift and go to state 24
    dec_vector                     shift and go to state 25
    asigna                         shift and go to state 26
    asignacion_vector              shift and go to state 27
    llamado_funcion                shift and go to state 28
    retorno                        shift and go to state 29
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39
    indentacion                    shift and go to state 15

state 49

    (32) instrucciones -> indentacion instruccion concat_instruccion .

    PRIVATE         reduce using rule 32 (instrucciones -> indentacion instruccion concat_instruccion .)
    PUBLIC          reduce using rule 32 (instrucciones -> indentacion instruccion concat_instruccion .)
    NEWLINE         reduce using rule 32 (instrucciones -> indentacion instruccion concat_instruccion .)


state 50

    (35) concat_instruccion -> vacio .
    (4) indentacion -> vacio .

    PRIVATE         reduce using rule 35 (concat_instruccion -> vacio .)
    PUBLIC          reduce using rule 35 (concat_instruccion -> vacio .)
    NEWLINE         reduce using rule 35 (concat_instruccion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)


state 51

    (19) instruccion -> condicion_if NEWLINE .

    IF              reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    ELSE            reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    FOR             reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    WHILE           reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    PRINT           reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    READ            reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    DECVARIABLE     reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    NOMBRE          reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    RETURN          reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    INCREMENTAR     reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    DECREMENTAR     reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    TABULACION      reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    PRIVATE         reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    PUBLIC          reduce using rule 19 (instruccion -> condicion_if NEWLINE .)
    NEWLINE         reduce using rule 19 (instruccion -> condicion_if NEWLINE .)


state 52

    (20) instruccion -> condicion_else NEWLINE .

    IF              reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    ELSE            reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    FOR             reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    WHILE           reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    PRINT           reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    READ            reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    DECVARIABLE     reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    NOMBRE          reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    RETURN          reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    INCREMENTAR     reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    DECREMENTAR     reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    TABULACION      reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    PRIVATE         reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    PUBLIC          reduce using rule 20 (instruccion -> condicion_else NEWLINE .)
    NEWLINE         reduce using rule 20 (instruccion -> condicion_else NEWLINE .)


state 53

    (21) instruccion -> ciclo_for NEWLINE .

    IF              reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    ELSE            reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    FOR             reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    WHILE           reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    PRINT           reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    READ            reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    DECVARIABLE     reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    NOMBRE          reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    RETURN          reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    INCREMENTAR     reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    DECREMENTAR     reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    TABULACION      reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    PRIVATE         reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    PUBLIC          reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)
    NEWLINE         reduce using rule 21 (instruccion -> ciclo_for NEWLINE .)


state 54

    (22) instruccion -> ciclo_while NEWLINE .

    IF              reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    ELSE            reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    FOR             reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    WHILE           reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    PRINT           reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    READ            reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    DECVARIABLE     reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    NOMBRE          reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    RETURN          reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    INCREMENTAR     reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    DECREMENTAR     reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    TABULACION      reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    PRIVATE         reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    PUBLIC          reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)
    NEWLINE         reduce using rule 22 (instruccion -> ciclo_while NEWLINE .)


state 55

    (23) instruccion -> imprimir NEWLINE .

    IF              reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    ELSE            reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    FOR             reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    WHILE           reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    PRINT           reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    READ            reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    DECVARIABLE     reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    NOMBRE          reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    RETURN          reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    INCREMENTAR     reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    DECREMENTAR     reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    TABULACION      reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    PRIVATE         reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    PUBLIC          reduce using rule 23 (instruccion -> imprimir NEWLINE .)
    NEWLINE         reduce using rule 23 (instruccion -> imprimir NEWLINE .)


state 56

    (24) instruccion -> leer NEWLINE .

    IF              reduce using rule 24 (instruccion -> leer NEWLINE .)
    ELSE            reduce using rule 24 (instruccion -> leer NEWLINE .)
    FOR             reduce using rule 24 (instruccion -> leer NEWLINE .)
    WHILE           reduce using rule 24 (instruccion -> leer NEWLINE .)
    PRINT           reduce using rule 24 (instruccion -> leer NEWLINE .)
    READ            reduce using rule 24 (instruccion -> leer NEWLINE .)
    DECVARIABLE     reduce using rule 24 (instruccion -> leer NEWLINE .)
    NOMBRE          reduce using rule 24 (instruccion -> leer NEWLINE .)
    RETURN          reduce using rule 24 (instruccion -> leer NEWLINE .)
    INCREMENTAR     reduce using rule 24 (instruccion -> leer NEWLINE .)
    DECREMENTAR     reduce using rule 24 (instruccion -> leer NEWLINE .)
    TABULACION      reduce using rule 24 (instruccion -> leer NEWLINE .)
    PRIVATE         reduce using rule 24 (instruccion -> leer NEWLINE .)
    PUBLIC          reduce using rule 24 (instruccion -> leer NEWLINE .)
    NEWLINE         reduce using rule 24 (instruccion -> leer NEWLINE .)


state 57

    (25) instruccion -> incdec NEWLINE .

    IF              reduce using rule 25 (instruccion -> incdec NEWLINE .)
    ELSE            reduce using rule 25 (instruccion -> incdec NEWLINE .)
    FOR             reduce using rule 25 (instruccion -> incdec NEWLINE .)
    WHILE           reduce using rule 25 (instruccion -> incdec NEWLINE .)
    PRINT           reduce using rule 25 (instruccion -> incdec NEWLINE .)
    READ            reduce using rule 25 (instruccion -> incdec NEWLINE .)
    DECVARIABLE     reduce using rule 25 (instruccion -> incdec NEWLINE .)
    NOMBRE          reduce using rule 25 (instruccion -> incdec NEWLINE .)
    RETURN          reduce using rule 25 (instruccion -> incdec NEWLINE .)
    INCREMENTAR     reduce using rule 25 (instruccion -> incdec NEWLINE .)
    DECREMENTAR     reduce using rule 25 (instruccion -> incdec NEWLINE .)
    TABULACION      reduce using rule 25 (instruccion -> incdec NEWLINE .)
    PRIVATE         reduce using rule 25 (instruccion -> incdec NEWLINE .)
    PUBLIC          reduce using rule 25 (instruccion -> incdec NEWLINE .)
    NEWLINE         reduce using rule 25 (instruccion -> incdec NEWLINE .)


state 58

    (26) instruccion -> dec_variable NEWLINE .

    IF              reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    ELSE            reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    FOR             reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    WHILE           reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    PRINT           reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    READ            reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    DECVARIABLE     reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    NOMBRE          reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    RETURN          reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    INCREMENTAR     reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    DECREMENTAR     reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    TABULACION      reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    PRIVATE         reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    PUBLIC          reduce using rule 26 (instruccion -> dec_variable NEWLINE .)
    NEWLINE         reduce using rule 26 (instruccion -> dec_variable NEWLINE .)


state 59

    (27) instruccion -> dec_vector NEWLINE .

    IF              reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    ELSE            reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    FOR             reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    WHILE           reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    PRINT           reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    READ            reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    DECVARIABLE     reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    NOMBRE          reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    RETURN          reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    INCREMENTAR     reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    DECREMENTAR     reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    TABULACION      reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    PRIVATE         reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    PUBLIC          reduce using rule 27 (instruccion -> dec_vector NEWLINE .)
    NEWLINE         reduce using rule 27 (instruccion -> dec_vector NEWLINE .)


state 60

    (28) instruccion -> asigna NEWLINE .

    IF              reduce using rule 28 (instruccion -> asigna NEWLINE .)
    ELSE            reduce using rule 28 (instruccion -> asigna NEWLINE .)
    FOR             reduce using rule 28 (instruccion -> asigna NEWLINE .)
    WHILE           reduce using rule 28 (instruccion -> asigna NEWLINE .)
    PRINT           reduce using rule 28 (instruccion -> asigna NEWLINE .)
    READ            reduce using rule 28 (instruccion -> asigna NEWLINE .)
    DECVARIABLE     reduce using rule 28 (instruccion -> asigna NEWLINE .)
    NOMBRE          reduce using rule 28 (instruccion -> asigna NEWLINE .)
    RETURN          reduce using rule 28 (instruccion -> asigna NEWLINE .)
    INCREMENTAR     reduce using rule 28 (instruccion -> asigna NEWLINE .)
    DECREMENTAR     reduce using rule 28 (instruccion -> asigna NEWLINE .)
    TABULACION      reduce using rule 28 (instruccion -> asigna NEWLINE .)
    PRIVATE         reduce using rule 28 (instruccion -> asigna NEWLINE .)
    PUBLIC          reduce using rule 28 (instruccion -> asigna NEWLINE .)
    NEWLINE         reduce using rule 28 (instruccion -> asigna NEWLINE .)


state 61

    (29) instruccion -> asignacion_vector NEWLINE .

    IF              reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    ELSE            reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    FOR             reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    WHILE           reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    PRINT           reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    READ            reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    DECVARIABLE     reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    NOMBRE          reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    RETURN          reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    INCREMENTAR     reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    DECREMENTAR     reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    TABULACION      reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    PRIVATE         reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    PUBLIC          reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)
    NEWLINE         reduce using rule 29 (instruccion -> asignacion_vector NEWLINE .)


state 62

    (30) instruccion -> llamado_funcion NEWLINE .

    IF              reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    ELSE            reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    FOR             reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    WHILE           reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    PRINT           reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    READ            reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    DECVARIABLE     reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    NOMBRE          reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    RETURN          reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    INCREMENTAR     reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    DECREMENTAR     reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    TABULACION      reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    PRIVATE         reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    PUBLIC          reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)
    NEWLINE         reduce using rule 30 (instruccion -> llamado_funcion NEWLINE .)


state 63

    (31) instruccion -> retorno NEWLINE .

    IF              reduce using rule 31 (instruccion -> retorno NEWLINE .)
    ELSE            reduce using rule 31 (instruccion -> retorno NEWLINE .)
    FOR             reduce using rule 31 (instruccion -> retorno NEWLINE .)
    WHILE           reduce using rule 31 (instruccion -> retorno NEWLINE .)
    PRINT           reduce using rule 31 (instruccion -> retorno NEWLINE .)
    READ            reduce using rule 31 (instruccion -> retorno NEWLINE .)
    DECVARIABLE     reduce using rule 31 (instruccion -> retorno NEWLINE .)
    NOMBRE          reduce using rule 31 (instruccion -> retorno NEWLINE .)
    RETURN          reduce using rule 31 (instruccion -> retorno NEWLINE .)
    INCREMENTAR     reduce using rule 31 (instruccion -> retorno NEWLINE .)
    DECREMENTAR     reduce using rule 31 (instruccion -> retorno NEWLINE .)
    TABULACION      reduce using rule 31 (instruccion -> retorno NEWLINE .)
    PRIVATE         reduce using rule 31 (instruccion -> retorno NEWLINE .)
    PUBLIC          reduce using rule 31 (instruccion -> retorno NEWLINE .)
    NEWLINE         reduce using rule 31 (instruccion -> retorno NEWLINE .)


state 64

    (36) condicion_if -> IF PARIZQ . condicion PARDER
    (69) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    condicion                      shift and go to state 90
    tipo_variable                  shift and go to state 91
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 65

    (38) condicion_else -> ELSE condicion_if .

    NEWLINE         reduce using rule 38 (condicion_else -> ELSE condicion_if .)


state 66

    (39) ciclo_for -> FOR PARIZQ . DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    DECVARIABLE     shift and go to state 92


state 67

    (49) dec_variable -> DECVARIABLE ASIGNACION . op_aritmetica
    (50) dec_variable -> DECVARIABLE ASIGNACION . tipo_variable
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    op_aritmetica                  shift and go to state 93
    tipo_variable                  shift and go to state 94
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 68

    (51) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (52) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (53) dec_vector -> DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (54) dec_vector -> DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable

    NOMBRE          shift and go to state 95
    INT             shift and go to state 96


state 69

    (46) ciclo_while -> WHILE PARIZQ . condicion PARDER
    (69) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    condicion                      shift and go to state 97
    tipo_variable                  shift and go to state 91
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 70

    (47) imprimir -> PRINT PARIZQ . tipo_variable PARDER
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 98
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 71

    (48) leer -> READ PARIZQ . NOMBRE PARDER

    NOMBRE          shift and go to state 99


state 72

    (55) asigna -> NOMBRE ASIGNACION . op_aritmetica
    (56) asigna -> NOMBRE ASIGNACION . tipo_variable
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    op_aritmetica                  shift and go to state 100
    tipo_variable                  shift and go to state 101
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 73

    (57) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (58) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica
    (59) asignacion_vector -> NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION tipo_variable
    (60) asignacion_vector -> NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION tipo_variable

    NOMBRE          shift and go to state 102
    INT             shift and go to state 103


state 74

    (44) post_incdec -> NOMBRE INCREMENTAR .

    NEWLINE         reduce using rule 44 (post_incdec -> NOMBRE INCREMENTAR .)
    PARDER          reduce using rule 44 (post_incdec -> NOMBRE INCREMENTAR .)


state 75

    (45) post_incdec -> NOMBRE DECREMENTAR .

    NEWLINE         reduce using rule 45 (post_incdec -> NOMBRE DECREMENTAR .)
    PARDER          reduce using rule 45 (post_incdec -> NOMBRE DECREMENTAR .)


state 76

    (61) retorno -> RETURN tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 61 (retorno -> RETURN tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 77

    (62) retorno -> RETURN op_aritmetica .

    NEWLINE         reduce using rule 62 (retorno -> RETURN op_aritmetica .)


state 78

    (72) tipo_variable -> NOMBRE .

    SUMA            reduce using rule 72 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 72 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 72 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 72 (tipo_variable -> NOMBRE .)
    NEWLINE         reduce using rule 72 (tipo_variable -> NOMBRE .)
    DIFERENTE       reduce using rule 72 (tipo_variable -> NOMBRE .)
    IGUAL           reduce using rule 72 (tipo_variable -> NOMBRE .)
    MAYOR           reduce using rule 72 (tipo_variable -> NOMBRE .)
    MAYORIGUAL      reduce using rule 72 (tipo_variable -> NOMBRE .)
    MENOR           reduce using rule 72 (tipo_variable -> NOMBRE .)
    MENORIGUAL      reduce using rule 72 (tipo_variable -> NOMBRE .)
    PARDER          reduce using rule 72 (tipo_variable -> NOMBRE .)
    COMA            reduce using rule 72 (tipo_variable -> NOMBRE .)
    AND             reduce using rule 72 (tipo_variable -> NOMBRE .)
    OR              reduce using rule 72 (tipo_variable -> NOMBRE .)
    PUNTOYCOMA      reduce using rule 72 (tipo_variable -> NOMBRE .)


state 79

    (73) tipo_variable -> DOUBLE .

    SUMA            reduce using rule 73 (tipo_variable -> DOUBLE .)
    RESTA           reduce using rule 73 (tipo_variable -> DOUBLE .)
    MULT            reduce using rule 73 (tipo_variable -> DOUBLE .)
    DIV             reduce using rule 73 (tipo_variable -> DOUBLE .)
    NEWLINE         reduce using rule 73 (tipo_variable -> DOUBLE .)
    DIFERENTE       reduce using rule 73 (tipo_variable -> DOUBLE .)
    IGUAL           reduce using rule 73 (tipo_variable -> DOUBLE .)
    MAYOR           reduce using rule 73 (tipo_variable -> DOUBLE .)
    MAYORIGUAL      reduce using rule 73 (tipo_variable -> DOUBLE .)
    MENOR           reduce using rule 73 (tipo_variable -> DOUBLE .)
    MENORIGUAL      reduce using rule 73 (tipo_variable -> DOUBLE .)
    PARDER          reduce using rule 73 (tipo_variable -> DOUBLE .)
    COMA            reduce using rule 73 (tipo_variable -> DOUBLE .)
    AND             reduce using rule 73 (tipo_variable -> DOUBLE .)
    OR              reduce using rule 73 (tipo_variable -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 73 (tipo_variable -> DOUBLE .)


state 80

    (74) tipo_variable -> INT .

    SUMA            reduce using rule 74 (tipo_variable -> INT .)
    RESTA           reduce using rule 74 (tipo_variable -> INT .)
    MULT            reduce using rule 74 (tipo_variable -> INT .)
    DIV             reduce using rule 74 (tipo_variable -> INT .)
    NEWLINE         reduce using rule 74 (tipo_variable -> INT .)
    DIFERENTE       reduce using rule 74 (tipo_variable -> INT .)
    IGUAL           reduce using rule 74 (tipo_variable -> INT .)
    MAYOR           reduce using rule 74 (tipo_variable -> INT .)
    MAYORIGUAL      reduce using rule 74 (tipo_variable -> INT .)
    MENOR           reduce using rule 74 (tipo_variable -> INT .)
    MENORIGUAL      reduce using rule 74 (tipo_variable -> INT .)
    PARDER          reduce using rule 74 (tipo_variable -> INT .)
    COMA            reduce using rule 74 (tipo_variable -> INT .)
    AND             reduce using rule 74 (tipo_variable -> INT .)
    OR              reduce using rule 74 (tipo_variable -> INT .)
    PUNTOYCOMA      reduce using rule 74 (tipo_variable -> INT .)


state 81

    (75) tipo_variable -> STRING .

    SUMA            reduce using rule 75 (tipo_variable -> STRING .)
    RESTA           reduce using rule 75 (tipo_variable -> STRING .)
    MULT            reduce using rule 75 (tipo_variable -> STRING .)
    DIV             reduce using rule 75 (tipo_variable -> STRING .)
    NEWLINE         reduce using rule 75 (tipo_variable -> STRING .)
    DIFERENTE       reduce using rule 75 (tipo_variable -> STRING .)
    IGUAL           reduce using rule 75 (tipo_variable -> STRING .)
    MAYOR           reduce using rule 75 (tipo_variable -> STRING .)
    MAYORIGUAL      reduce using rule 75 (tipo_variable -> STRING .)
    MENOR           reduce using rule 75 (tipo_variable -> STRING .)
    MENORIGUAL      reduce using rule 75 (tipo_variable -> STRING .)
    PARDER          reduce using rule 75 (tipo_variable -> STRING .)
    COMA            reduce using rule 75 (tipo_variable -> STRING .)
    AND             reduce using rule 75 (tipo_variable -> STRING .)
    OR              reduce using rule 75 (tipo_variable -> STRING .)
    PUNTOYCOMA      reduce using rule 75 (tipo_variable -> STRING .)


state 82

    (76) tipo_variable -> FALSE .

    SUMA            reduce using rule 76 (tipo_variable -> FALSE .)
    RESTA           reduce using rule 76 (tipo_variable -> FALSE .)
    MULT            reduce using rule 76 (tipo_variable -> FALSE .)
    DIV             reduce using rule 76 (tipo_variable -> FALSE .)
    NEWLINE         reduce using rule 76 (tipo_variable -> FALSE .)
    DIFERENTE       reduce using rule 76 (tipo_variable -> FALSE .)
    IGUAL           reduce using rule 76 (tipo_variable -> FALSE .)
    MAYOR           reduce using rule 76 (tipo_variable -> FALSE .)
    MAYORIGUAL      reduce using rule 76 (tipo_variable -> FALSE .)
    MENOR           reduce using rule 76 (tipo_variable -> FALSE .)
    MENORIGUAL      reduce using rule 76 (tipo_variable -> FALSE .)
    PARDER          reduce using rule 76 (tipo_variable -> FALSE .)
    COMA            reduce using rule 76 (tipo_variable -> FALSE .)
    AND             reduce using rule 76 (tipo_variable -> FALSE .)
    OR              reduce using rule 76 (tipo_variable -> FALSE .)
    PUNTOYCOMA      reduce using rule 76 (tipo_variable -> FALSE .)


state 83

    (77) tipo_variable -> TRUE .

    SUMA            reduce using rule 77 (tipo_variable -> TRUE .)
    RESTA           reduce using rule 77 (tipo_variable -> TRUE .)
    MULT            reduce using rule 77 (tipo_variable -> TRUE .)
    DIV             reduce using rule 77 (tipo_variable -> TRUE .)
    NEWLINE         reduce using rule 77 (tipo_variable -> TRUE .)
    DIFERENTE       reduce using rule 77 (tipo_variable -> TRUE .)
    IGUAL           reduce using rule 77 (tipo_variable -> TRUE .)
    MAYOR           reduce using rule 77 (tipo_variable -> TRUE .)
    MAYORIGUAL      reduce using rule 77 (tipo_variable -> TRUE .)
    MENOR           reduce using rule 77 (tipo_variable -> TRUE .)
    MENORIGUAL      reduce using rule 77 (tipo_variable -> TRUE .)
    PARDER          reduce using rule 77 (tipo_variable -> TRUE .)
    COMA            reduce using rule 77 (tipo_variable -> TRUE .)
    AND             reduce using rule 77 (tipo_variable -> TRUE .)
    OR              reduce using rule 77 (tipo_variable -> TRUE .)
    PUNTOYCOMA      reduce using rule 77 (tipo_variable -> TRUE .)


state 84

    (78) tipo_variable -> llamado_funcion .

    SUMA            reduce using rule 78 (tipo_variable -> llamado_funcion .)
    RESTA           reduce using rule 78 (tipo_variable -> llamado_funcion .)
    MULT            reduce using rule 78 (tipo_variable -> llamado_funcion .)
    DIV             reduce using rule 78 (tipo_variable -> llamado_funcion .)
    NEWLINE         reduce using rule 78 (tipo_variable -> llamado_funcion .)
    DIFERENTE       reduce using rule 78 (tipo_variable -> llamado_funcion .)
    IGUAL           reduce using rule 78 (tipo_variable -> llamado_funcion .)
    MAYOR           reduce using rule 78 (tipo_variable -> llamado_funcion .)
    MAYORIGUAL      reduce using rule 78 (tipo_variable -> llamado_funcion .)
    MENOR           reduce using rule 78 (tipo_variable -> llamado_funcion .)
    MENORIGUAL      reduce using rule 78 (tipo_variable -> llamado_funcion .)
    PARDER          reduce using rule 78 (tipo_variable -> llamado_funcion .)
    COMA            reduce using rule 78 (tipo_variable -> llamado_funcion .)
    AND             reduce using rule 78 (tipo_variable -> llamado_funcion .)
    OR              reduce using rule 78 (tipo_variable -> llamado_funcion .)
    PUNTOYCOMA      reduce using rule 78 (tipo_variable -> llamado_funcion .)


state 85

    (42) pre_incdec -> INCREMENTAR NOMBRE .

    NEWLINE         reduce using rule 42 (pre_incdec -> INCREMENTAR NOMBRE .)
    PARDER          reduce using rule 42 (pre_incdec -> INCREMENTAR NOMBRE .)


state 86

    (43) pre_incdec -> DECREMENTAR NOMBRE .

    NEWLINE         reduce using rule 43 (pre_incdec -> DECREMENTAR NOMBRE .)
    PARDER          reduce using rule 43 (pre_incdec -> DECREMENTAR NOMBRE .)


state 87

    (5) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ . parametro PARDER
    (10) parametro -> . vacio
    (11) parametro -> . NOMBRE parametro_extra
    (89) vacio -> .

    NOMBRE          shift and go to state 109
    PARDER          reduce using rule 89 (vacio -> .)

    parametro                      shift and go to state 110
    vacio                          shift and go to state 111

state 88

    (14) llamado_funcion -> indentacion NOMBRE PARIZQ . parametro_llamado PARDER
    (15) parametro_llamado -> . vacio
    (16) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (89) vacio -> .
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    PARDER          reduce using rule 89 (vacio -> .)
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    indentacion                    shift and go to state 15
    parametro_llamado              shift and go to state 112
    vacio                          shift and go to state 113
    tipo_variable                  shift and go to state 114
    llamado_funcion                shift and go to state 84

state 89

    (34) concat_instruccion -> instruccion concat_instruccion .

    PRIVATE         reduce using rule 34 (concat_instruccion -> instruccion concat_instruccion .)
    PUBLIC          reduce using rule 34 (concat_instruccion -> instruccion concat_instruccion .)
    NEWLINE         reduce using rule 34 (concat_instruccion -> instruccion concat_instruccion .)


state 90

    (36) condicion_if -> IF PARIZQ condicion . PARDER

    PARDER          shift and go to state 115


state 91

    (69) condicion -> tipo_variable . operador_condicional tipo_variable condicion_extra
    (63) operador_condicional -> . DIFERENTE
    (64) operador_condicional -> . IGUAL
    (65) operador_condicional -> . MAYOR
    (66) operador_condicional -> . MAYORIGUAL
    (67) operador_condicional -> . MENOR
    (68) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 117
    IGUAL           shift and go to state 118
    MAYOR           shift and go to state 119
    MAYORIGUAL      shift and go to state 120
    MENOR           shift and go to state 121
    MENORIGUAL      shift and go to state 122

    operador_condicional           shift and go to state 116

state 92

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE . ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    ASIGNACION      shift and go to state 123


state 93

    (49) dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 49 (dec_variable -> DECVARIABLE ASIGNACION op_aritmetica .)


state 94

    (50) dec_variable -> DECVARIABLE ASIGNACION tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 50 (dec_variable -> DECVARIABLE ASIGNACION tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 95

    (51) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (53) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 124


state 96

    (52) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (54) dec_vector -> DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 125


state 97

    (46) ciclo_while -> WHILE PARIZQ condicion . PARDER

    PARDER          shift and go to state 126


state 98

    (47) imprimir -> PRINT PARIZQ tipo_variable . PARDER

    PARDER          shift and go to state 127


state 99

    (48) leer -> READ PARIZQ NOMBRE . PARDER

    PARDER          shift and go to state 128


state 100

    (55) asigna -> NOMBRE ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 55 (asigna -> NOMBRE ASIGNACION op_aritmetica .)


state 101

    (56) asigna -> NOMBRE ASIGNACION tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 56 (asigna -> NOMBRE ASIGNACION tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 102

    (57) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica
    (59) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 129


state 103

    (58) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica
    (60) asignacion_vector -> NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION tipo_variable

    CORCHETEDER     shift and go to state 130


state 104

    (79) op_aritmetica -> tipo_variable operador_aritmetico . tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 131
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 105

    (83) operador_aritmetico -> SUMA .

    NOMBRE          reduce using rule 83 (operador_aritmetico -> SUMA .)
    DOUBLE          reduce using rule 83 (operador_aritmetico -> SUMA .)
    INT             reduce using rule 83 (operador_aritmetico -> SUMA .)
    STRING          reduce using rule 83 (operador_aritmetico -> SUMA .)
    FALSE           reduce using rule 83 (operador_aritmetico -> SUMA .)
    TRUE            reduce using rule 83 (operador_aritmetico -> SUMA .)
    TABULACION      reduce using rule 83 (operador_aritmetico -> SUMA .)
    PARIZQ          reduce using rule 83 (operador_aritmetico -> SUMA .)


state 106

    (84) operador_aritmetico -> RESTA .

    NOMBRE          reduce using rule 84 (operador_aritmetico -> RESTA .)
    DOUBLE          reduce using rule 84 (operador_aritmetico -> RESTA .)
    INT             reduce using rule 84 (operador_aritmetico -> RESTA .)
    STRING          reduce using rule 84 (operador_aritmetico -> RESTA .)
    FALSE           reduce using rule 84 (operador_aritmetico -> RESTA .)
    TRUE            reduce using rule 84 (operador_aritmetico -> RESTA .)
    TABULACION      reduce using rule 84 (operador_aritmetico -> RESTA .)
    PARIZQ          reduce using rule 84 (operador_aritmetico -> RESTA .)


state 107

    (85) operador_aritmetico -> MULT .

    NOMBRE          reduce using rule 85 (operador_aritmetico -> MULT .)
    DOUBLE          reduce using rule 85 (operador_aritmetico -> MULT .)
    INT             reduce using rule 85 (operador_aritmetico -> MULT .)
    STRING          reduce using rule 85 (operador_aritmetico -> MULT .)
    FALSE           reduce using rule 85 (operador_aritmetico -> MULT .)
    TRUE            reduce using rule 85 (operador_aritmetico -> MULT .)
    TABULACION      reduce using rule 85 (operador_aritmetico -> MULT .)
    PARIZQ          reduce using rule 85 (operador_aritmetico -> MULT .)


state 108

    (86) operador_aritmetico -> DIV .

    NOMBRE          reduce using rule 86 (operador_aritmetico -> DIV .)
    DOUBLE          reduce using rule 86 (operador_aritmetico -> DIV .)
    INT             reduce using rule 86 (operador_aritmetico -> DIV .)
    STRING          reduce using rule 86 (operador_aritmetico -> DIV .)
    FALSE           reduce using rule 86 (operador_aritmetico -> DIV .)
    TRUE            reduce using rule 86 (operador_aritmetico -> DIV .)
    TABULACION      reduce using rule 86 (operador_aritmetico -> DIV .)
    PARIZQ          reduce using rule 86 (operador_aritmetico -> DIV .)


state 109

    (11) parametro -> NOMBRE . parametro_extra
    (12) parametro_extra -> . COMA NOMBRE parametro_extra
    (13) parametro_extra -> . vacio
    (89) vacio -> .

    COMA            shift and go to state 133
    PARDER          reduce using rule 89 (vacio -> .)

    parametro_extra                shift and go to state 132
    vacio                          shift and go to state 134

state 110

    (5) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro . PARDER

    PARDER          shift and go to state 135


state 111

    (10) parametro -> vacio .

    PARDER          reduce using rule 10 (parametro -> vacio .)


state 112

    (14) llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado . PARDER

    PARDER          shift and go to state 136


state 113

    (15) parametro_llamado -> vacio .
    (4) indentacion -> vacio .

    PARDER          reduce using rule 15 (parametro_llamado -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)


state 114

    (16) parametro_llamado -> tipo_variable . parametro_llamado_extra
    (17) parametro_llamado_extra -> . COMA NOMBRE parametro_llamado_extra
    (18) parametro_llamado_extra -> . vacio
    (89) vacio -> .

    COMA            shift and go to state 138
    PARDER          reduce using rule 89 (vacio -> .)

    parametro_llamado_extra        shift and go to state 137
    vacio                          shift and go to state 139

state 115

    (36) condicion_if -> IF PARIZQ condicion PARDER .

    NEWLINE         reduce using rule 36 (condicion_if -> IF PARIZQ condicion PARDER .)


state 116

    (69) condicion -> tipo_variable operador_condicional . tipo_variable condicion_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 140
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 117

    (63) operador_condicional -> DIFERENTE .

    NOMBRE          reduce using rule 63 (operador_condicional -> DIFERENTE .)
    DOUBLE          reduce using rule 63 (operador_condicional -> DIFERENTE .)
    INT             reduce using rule 63 (operador_condicional -> DIFERENTE .)
    STRING          reduce using rule 63 (operador_condicional -> DIFERENTE .)
    FALSE           reduce using rule 63 (operador_condicional -> DIFERENTE .)
    TRUE            reduce using rule 63 (operador_condicional -> DIFERENTE .)
    TABULACION      reduce using rule 63 (operador_condicional -> DIFERENTE .)


state 118

    (64) operador_condicional -> IGUAL .

    NOMBRE          reduce using rule 64 (operador_condicional -> IGUAL .)
    DOUBLE          reduce using rule 64 (operador_condicional -> IGUAL .)
    INT             reduce using rule 64 (operador_condicional -> IGUAL .)
    STRING          reduce using rule 64 (operador_condicional -> IGUAL .)
    FALSE           reduce using rule 64 (operador_condicional -> IGUAL .)
    TRUE            reduce using rule 64 (operador_condicional -> IGUAL .)
    TABULACION      reduce using rule 64 (operador_condicional -> IGUAL .)


state 119

    (65) operador_condicional -> MAYOR .

    NOMBRE          reduce using rule 65 (operador_condicional -> MAYOR .)
    DOUBLE          reduce using rule 65 (operador_condicional -> MAYOR .)
    INT             reduce using rule 65 (operador_condicional -> MAYOR .)
    STRING          reduce using rule 65 (operador_condicional -> MAYOR .)
    FALSE           reduce using rule 65 (operador_condicional -> MAYOR .)
    TRUE            reduce using rule 65 (operador_condicional -> MAYOR .)
    TABULACION      reduce using rule 65 (operador_condicional -> MAYOR .)


state 120

    (66) operador_condicional -> MAYORIGUAL .

    NOMBRE          reduce using rule 66 (operador_condicional -> MAYORIGUAL .)
    DOUBLE          reduce using rule 66 (operador_condicional -> MAYORIGUAL .)
    INT             reduce using rule 66 (operador_condicional -> MAYORIGUAL .)
    STRING          reduce using rule 66 (operador_condicional -> MAYORIGUAL .)
    FALSE           reduce using rule 66 (operador_condicional -> MAYORIGUAL .)
    TRUE            reduce using rule 66 (operador_condicional -> MAYORIGUAL .)
    TABULACION      reduce using rule 66 (operador_condicional -> MAYORIGUAL .)


state 121

    (67) operador_condicional -> MENOR .

    NOMBRE          reduce using rule 67 (operador_condicional -> MENOR .)
    DOUBLE          reduce using rule 67 (operador_condicional -> MENOR .)
    INT             reduce using rule 67 (operador_condicional -> MENOR .)
    STRING          reduce using rule 67 (operador_condicional -> MENOR .)
    FALSE           reduce using rule 67 (operador_condicional -> MENOR .)
    TRUE            reduce using rule 67 (operador_condicional -> MENOR .)
    TABULACION      reduce using rule 67 (operador_condicional -> MENOR .)


state 122

    (68) operador_condicional -> MENORIGUAL .

    NOMBRE          reduce using rule 68 (operador_condicional -> MENORIGUAL .)
    DOUBLE          reduce using rule 68 (operador_condicional -> MENORIGUAL .)
    INT             reduce using rule 68 (operador_condicional -> MENORIGUAL .)
    STRING          reduce using rule 68 (operador_condicional -> MENORIGUAL .)
    FALSE           reduce using rule 68 (operador_condicional -> MENORIGUAL .)
    TRUE            reduce using rule 68 (operador_condicional -> MENORIGUAL .)
    TABULACION      reduce using rule 68 (operador_condicional -> MENORIGUAL .)


state 123

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION . INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    INT             shift and go to state 141


state 124

    (51) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (53) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 142


state 125

    (52) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (54) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 143


state 126

    (46) ciclo_while -> WHILE PARIZQ condicion PARDER .

    NEWLINE         reduce using rule 46 (ciclo_while -> WHILE PARIZQ condicion PARDER .)


state 127

    (47) imprimir -> PRINT PARIZQ tipo_variable PARDER .

    NEWLINE         reduce using rule 47 (imprimir -> PRINT PARIZQ tipo_variable PARDER .)


state 128

    (48) leer -> READ PARIZQ NOMBRE PARDER .

    NEWLINE         reduce using rule 48 (leer -> READ PARIZQ NOMBRE PARDER .)


state 129

    (57) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica
    (59) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 144


state 130

    (58) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica
    (60) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION tipo_variable

    ASIGNACION      shift and go to state 145


state 131

    (79) op_aritmetica -> tipo_variable operador_aritmetico tipo_variable . op_aritmetica_extra
    (80) op_aritmetica_extra -> . operador_aritmetico tipo_variable op_aritmetica_extra
    (81) op_aritmetica_extra -> . operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
    (82) op_aritmetica_extra -> . vacio
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV
    (89) vacio -> .

    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    NEWLINE         reduce using rule 89 (vacio -> .)

    operador_aritmetico            shift and go to state 146
    op_aritmetica_extra            shift and go to state 147
    vacio                          shift and go to state 148

state 132

    (11) parametro -> NOMBRE parametro_extra .

    PARDER          reduce using rule 11 (parametro -> NOMBRE parametro_extra .)


state 133

    (12) parametro_extra -> COMA . NOMBRE parametro_extra

    NOMBRE          shift and go to state 149


state 134

    (13) parametro_extra -> vacio .

    PARDER          reduce using rule 13 (parametro_extra -> vacio .)


state 135

    (5) definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .

    TABULACION      reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    PRIVATE         reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    PUBLIC          reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    NEWLINE         reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    IF              reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    ELSE            reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    FOR             reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    WHILE           reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    PRINT           reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    READ            reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    DECVARIABLE     reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    NOMBRE          reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    RETURN          reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    INCREMENTAR     reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)
    DECREMENTAR     reduce using rule 5 (definicion_funcion -> dominio tipo_return NOMBRE PARIZQ parametro PARDER .)


state 136

    (14) llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .

    NEWLINE         reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    SUMA            reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    RESTA           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MULT            reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    DIV             reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    DIFERENTE       reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    IGUAL           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYOR           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYORIGUAL      reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MENOR           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MENORIGUAL      reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    PARDER          reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    COMA            reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    AND             reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    OR              reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    PUNTOYCOMA      reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)


state 137

    (16) parametro_llamado -> tipo_variable parametro_llamado_extra .

    PARDER          reduce using rule 16 (parametro_llamado -> tipo_variable parametro_llamado_extra .)


state 138

    (17) parametro_llamado_extra -> COMA . NOMBRE parametro_llamado_extra

    NOMBRE          shift and go to state 150


state 139

    (18) parametro_llamado_extra -> vacio .

    PARDER          reduce using rule 18 (parametro_llamado_extra -> vacio .)


state 140

    (69) condicion -> tipo_variable operador_condicional tipo_variable . condicion_extra
    (70) condicion_extra -> . operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
    (71) condicion_extra -> . vacio
    (87) operador_logico -> . AND
    (88) operador_logico -> . OR
    (89) vacio -> .

    AND             shift and go to state 154
    OR              shift and go to state 155
    PARDER          reduce using rule 89 (vacio -> .)
    PUNTOYCOMA      reduce using rule 89 (vacio -> .)

    condicion_extra                shift and go to state 151
    operador_logico                shift and go to state 152
    vacio                          shift and go to state 153

state 141

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT . PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    PUNTOYCOMA      shift and go to state 156


state 142

    (51) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (53) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    op_aritmetica                  shift and go to state 157
    tipo_variable                  shift and go to state 158
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 143

    (52) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (54) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    op_aritmetica                  shift and go to state 159
    tipo_variable                  shift and go to state 160
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 144

    (57) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (59) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . tipo_variable
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    op_aritmetica                  shift and go to state 161
    tipo_variable                  shift and go to state 162
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 145

    (58) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (60) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . tipo_variable
    (79) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    op_aritmetica                  shift and go to state 163
    tipo_variable                  shift and go to state 164
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 146

    (80) op_aritmetica_extra -> operador_aritmetico . tipo_variable op_aritmetica_extra
    (81) op_aritmetica_extra -> operador_aritmetico . PARIZQ tipo_variable op_aritmetica_extra PARDER
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    PARIZQ          shift and go to state 166
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 165
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 147

    (79) op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra .

    NEWLINE         reduce using rule 79 (op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra .)


state 148

    (82) op_aritmetica_extra -> vacio .

    NEWLINE         reduce using rule 82 (op_aritmetica_extra -> vacio .)
    PARDER          reduce using rule 82 (op_aritmetica_extra -> vacio .)


state 149

    (12) parametro_extra -> COMA NOMBRE . parametro_extra
    (12) parametro_extra -> . COMA NOMBRE parametro_extra
    (13) parametro_extra -> . vacio
    (89) vacio -> .

    COMA            shift and go to state 133
    PARDER          reduce using rule 89 (vacio -> .)

    parametro_extra                shift and go to state 167
    vacio                          shift and go to state 134

state 150

    (17) parametro_llamado_extra -> COMA NOMBRE . parametro_llamado_extra
    (17) parametro_llamado_extra -> . COMA NOMBRE parametro_llamado_extra
    (18) parametro_llamado_extra -> . vacio
    (89) vacio -> .

    COMA            shift and go to state 138
    PARDER          reduce using rule 89 (vacio -> .)

    parametro_llamado_extra        shift and go to state 168
    vacio                          shift and go to state 139

state 151

    (69) condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .

    PARDER          reduce using rule 69 (condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .)
    PUNTOYCOMA      reduce using rule 69 (condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .)


state 152

    (70) condicion_extra -> operador_logico . tipo_variable operador_condicional tipo_variable condicion_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 169
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 153

    (71) condicion_extra -> vacio .

    PARDER          reduce using rule 71 (condicion_extra -> vacio .)
    PUNTOYCOMA      reduce using rule 71 (condicion_extra -> vacio .)


state 154

    (87) operador_logico -> AND .

    NOMBRE          reduce using rule 87 (operador_logico -> AND .)
    DOUBLE          reduce using rule 87 (operador_logico -> AND .)
    INT             reduce using rule 87 (operador_logico -> AND .)
    STRING          reduce using rule 87 (operador_logico -> AND .)
    FALSE           reduce using rule 87 (operador_logico -> AND .)
    TRUE            reduce using rule 87 (operador_logico -> AND .)
    TABULACION      reduce using rule 87 (operador_logico -> AND .)


state 155

    (88) operador_logico -> OR .

    NOMBRE          reduce using rule 88 (operador_logico -> OR .)
    DOUBLE          reduce using rule 88 (operador_logico -> OR .)
    INT             reduce using rule 88 (operador_logico -> OR .)
    STRING          reduce using rule 88 (operador_logico -> OR .)
    FALSE           reduce using rule 88 (operador_logico -> OR .)
    TRUE            reduce using rule 88 (operador_logico -> OR .)
    TABULACION      reduce using rule 88 (operador_logico -> OR .)


state 156

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA . condicion PUNTOYCOMA incdec PARDER
    (69) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    condicion                      shift and go to state 170
    tipo_variable                  shift and go to state 91
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 157

    (51) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 51 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)


state 158

    (53) dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 53 (dec_vector -> DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 159

    (52) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 52 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)


state 160

    (54) dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 54 (dec_vector -> DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 161

    (57) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 57 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)


state 162

    (59) asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 59 (asignacion_vector -> NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 163

    (58) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 58 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)


state 164

    (60) asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .
    (79) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 60 (asignacion_vector -> NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION tipo_variable .)
    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108

    operador_aritmetico            shift and go to state 104

state 165

    (80) op_aritmetica_extra -> operador_aritmetico tipo_variable . op_aritmetica_extra
    (80) op_aritmetica_extra -> . operador_aritmetico tipo_variable op_aritmetica_extra
    (81) op_aritmetica_extra -> . operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
    (82) op_aritmetica_extra -> . vacio
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV
    (89) vacio -> .

    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    NEWLINE         reduce using rule 89 (vacio -> .)
    PARDER          reduce using rule 89 (vacio -> .)

    operador_aritmetico            shift and go to state 146
    op_aritmetica_extra            shift and go to state 171
    vacio                          shift and go to state 148

state 166

    (81) op_aritmetica_extra -> operador_aritmetico PARIZQ . tipo_variable op_aritmetica_extra PARDER
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 172
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 167

    (12) parametro_extra -> COMA NOMBRE parametro_extra .

    PARDER          reduce using rule 12 (parametro_extra -> COMA NOMBRE parametro_extra .)


state 168

    (17) parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra .

    PARDER          reduce using rule 17 (parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra .)


state 169

    (70) condicion_extra -> operador_logico tipo_variable . operador_condicional tipo_variable condicion_extra
    (63) operador_condicional -> . DIFERENTE
    (64) operador_condicional -> . IGUAL
    (65) operador_condicional -> . MAYOR
    (66) operador_condicional -> . MAYORIGUAL
    (67) operador_condicional -> . MENOR
    (68) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 117
    IGUAL           shift and go to state 118
    MAYOR           shift and go to state 119
    MAYORIGUAL      shift and go to state 120
    MENOR           shift and go to state 121
    MENORIGUAL      shift and go to state 122

    operador_condicional           shift and go to state 173

state 170

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion . PUNTOYCOMA incdec PARDER

    PUNTOYCOMA      shift and go to state 174


state 171

    (80) op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra .

    NEWLINE         reduce using rule 80 (op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra .)
    PARDER          reduce using rule 80 (op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra .)


state 172

    (81) op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable . op_aritmetica_extra PARDER
    (80) op_aritmetica_extra -> . operador_aritmetico tipo_variable op_aritmetica_extra
    (81) op_aritmetica_extra -> . operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
    (82) op_aritmetica_extra -> . vacio
    (83) operador_aritmetico -> . SUMA
    (84) operador_aritmetico -> . RESTA
    (85) operador_aritmetico -> . MULT
    (86) operador_aritmetico -> . DIV
    (89) vacio -> .

    SUMA            shift and go to state 105
    RESTA           shift and go to state 106
    MULT            shift and go to state 107
    DIV             shift and go to state 108
    PARDER          reduce using rule 89 (vacio -> .)

    operador_aritmetico            shift and go to state 146
    op_aritmetica_extra            shift and go to state 175
    vacio                          shift and go to state 148

state 173

    (70) condicion_extra -> operador_logico tipo_variable operador_condicional . tipo_variable condicion_extra
    (72) tipo_variable -> . NOMBRE
    (73) tipo_variable -> . DOUBLE
    (74) tipo_variable -> . INT
    (75) tipo_variable -> . STRING
    (76) tipo_variable -> . FALSE
    (77) tipo_variable -> . TRUE
    (78) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (89) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 78
    DOUBLE          shift and go to state 79
    INT             shift and go to state 80
    STRING          shift and go to state 81
    FALSE           shift and go to state 82
    TRUE            shift and go to state 83
    TABULACION      shift and go to state 10

  ! NOMBRE          [ reduce using rule 89 (vacio -> .) ]

    tipo_variable                  shift and go to state 176
    llamado_funcion                shift and go to state 84
    indentacion                    shift and go to state 15
    vacio                          shift and go to state 43

state 174

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA . incdec PARDER
    (40) incdec -> . pre_incdec
    (41) incdec -> . post_incdec
    (42) pre_incdec -> . INCREMENTAR NOMBRE
    (43) pre_incdec -> . DECREMENTAR NOMBRE
    (44) post_incdec -> . NOMBRE INCREMENTAR
    (45) post_incdec -> . NOMBRE DECREMENTAR

    INCREMENTAR     shift and go to state 41
    DECREMENTAR     shift and go to state 42
    NOMBRE          shift and go to state 178

    incdec                         shift and go to state 177
    pre_incdec                     shift and go to state 38
    post_incdec                    shift and go to state 39

state 175

    (81) op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra . PARDER

    PARDER          shift and go to state 179


state 176

    (70) condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable . condicion_extra
    (70) condicion_extra -> . operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
    (71) condicion_extra -> . vacio
    (87) operador_logico -> . AND
    (88) operador_logico -> . OR
    (89) vacio -> .

    AND             shift and go to state 154
    OR              shift and go to state 155
    PARDER          reduce using rule 89 (vacio -> .)
    PUNTOYCOMA      reduce using rule 89 (vacio -> .)

    operador_logico                shift and go to state 152
    condicion_extra                shift and go to state 180
    vacio                          shift and go to state 153

state 177

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec . PARDER

    PARDER          shift and go to state 181


state 178

    (44) post_incdec -> NOMBRE . INCREMENTAR
    (45) post_incdec -> NOMBRE . DECREMENTAR

    INCREMENTAR     shift and go to state 74
    DECREMENTAR     shift and go to state 75


state 179

    (81) op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER .

    NEWLINE         reduce using rule 81 (op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER .)
    PARDER          reduce using rule 81 (op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER .)


state 180

    (70) condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .

    PARDER          reduce using rule 70 (condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .)
    PUNTOYCOMA      reduce using rule 70 (condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .)


state 181

    (39) ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER .

    NEWLINE         reduce using rule 39 (ciclo_for -> FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TABULACION in state 2 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 8 resolved as shift
WARNING: shift/reduce conflict for TABULACION in state 10 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 16 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 40 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 48 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 64 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 67 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 69 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 70 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 72 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 88 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 104 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 116 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 142 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 143 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 144 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 145 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 146 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 152 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 156 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 166 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 173 resolved as shift
