Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    ELSE
    IMPORT
    SWITCH

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> definicion_funcion instrucciones Niark NEWLINE
Rule 2     Niark -> vacio
Rule 3     indentacion -> TABULACION indentacion
Rule 4     indentacion -> vacio
Rule 5     definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER
Rule 6     dominio -> PRIVATE
Rule 7     dominio -> PUBLIC
Rule 8     return -> VOID
Rule 9     return -> FUNCTION
Rule 10    parametro -> vacio
Rule 11    parametro -> NOMBRE parametro_extra
Rule 12    parametro_extra -> COMA NOMBRE parametro_extra
Rule 13    parametro_extra -> vacio
Rule 14    llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER
Rule 15    parametro_llamado -> vacio
Rule 16    parametro_llamado -> tipo_variable parametro_llamado_extra
Rule 17    parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra
Rule 18    parametro_llamado_extra -> vacio
Rule 19    instrucciones -> if NEWLINE
Rule 20    instrucciones -> for NEWLINE
Rule 21    instrucciones -> while NEWLINE
Rule 22    instrucciones -> print NEWLINE
Rule 23    instrucciones -> read NEWLINE
Rule 24    instrucciones -> incdec NEWLINE
Rule 25    instrucciones -> dec_variable NEWLINE
Rule 26    instrucciones -> dec_vector NEWLINE
Rule 27    instrucciones -> asignacion NEWLINE
Rule 28    instrucciones -> asignacion_vector NEWLINE
Rule 29    instrucciones -> llamado_funcion NEWLINE
Rule 30    instrucciones -> retorno NEWLINE
Rule 31    instrucciones -> COMENTARIO NEWLINE
Rule 32    instrucciones -> vacio
Rule 33    if -> indentacion IF PARIZQ condicion PARDER
Rule 34    for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
Rule 35    incdec -> indentacion pre_incdec
Rule 36    incdec -> indentacion post_incdec
Rule 37    pre_incdec -> INCREMENTAR NOMBRE
Rule 38    pre_incdec -> DECREMENTAR NOMBRE
Rule 39    post_incdec -> NOMBRE INCREMENTAR
Rule 40    post_incdec -> NOMBRE DECREMENTAR
Rule 41    while -> indentacion WHILE PARIZQ condicion PARDER
Rule 42    print -> indentacion PRINT PARIZQ tipo_variable PARDER
Rule 43    read -> indentacion READ PARIZQ STRING PARDER
Rule 44    dec_variable -> indentacion DECVARIABLE ASIGNACION op_aritmetica
Rule 45    dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 46    dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 47    asignacion -> indentacion NOMBRE ASIGNACION op_aritmetica
Rule 48    asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
Rule 49    asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
Rule 50    retorno -> RETURN tipo_variable
Rule 51    retorno -> RETURN op_aritmetica
Rule 52    operador_condicional -> DIFERENTE
Rule 53    operador_condicional -> IGUAL
Rule 54    operador_condicional -> MAYOR
Rule 55    operador_condicional -> MAYORIGUAL
Rule 56    operador_condicional -> MENOR
Rule 57    operador_condicional -> MENORIGUAL
Rule 58    condicion -> tipo_variable operador_condicional tipo_variable condicion_extra
Rule 59    condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
Rule 60    condicion_extra -> vacio
Rule 61    tipo_variable -> NOMBRE
Rule 62    tipo_variable -> DOUBLE
Rule 63    tipo_variable -> INT
Rule 64    tipo_variable -> STRING
Rule 65    tipo_variable -> FALSE
Rule 66    tipo_variable -> TRUE
Rule 67    tipo_variable -> llamado_funcion
Rule 68    op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
Rule 69    op_aritmetica -> vacio
Rule 70    op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra
Rule 71    op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
Rule 72    op_aritmetica_extra -> vacio
Rule 73    operador_aritmetico -> SUMA
Rule 74    operador_aritmetico -> RESTA
Rule 75    operador_aritmetico -> MULT
Rule 76    operador_aritmetico -> DIV
Rule 77    operador_logico -> AND
Rule 78    operador_logico -> OR
Rule 79    vacio -> <empty>

Terminals, with rules where they appear

AND                  : 77
ASIGNACION           : 34 44 45 46 47 48 49
BREAK                : 
CASE                 : 
COMA                 : 12 17
COMENTARIO           : 31
CORCHETEDER          : 45 46 48 49
CORCHETEIZQ          : 45 46 48 49
DECREMENTAR          : 38 40
DECVARIABLE          : 34 44 45 46
DIFERENTE            : 52
DIV                  : 76
DOUBLE               : 62
ELSE                 : 
FALSE                : 65
FOR                  : 34
FUNCTION             : 9
IF                   : 33
IGUAL                : 53
IMPORT               : 
INCREMENTAR          : 37 39
INT                  : 34 46 49 63
MAYOR                : 54
MAYORIGUAL           : 55
MENOR                : 56
MENORIGUAL           : 57
MULT                 : 75
NEWLINE              : 1 19 20 21 22 23 24 25 26 27 28 29 30 31
NOMBRE               : 5 11 12 14 17 37 38 39 40 45 47 48 48 49 61
OR                   : 78
PARDER               : 5 14 33 34 41 42 43 71
PARIZQ               : 5 14 33 34 41 42 43 71
PRINT                : 42
PRIVATE              : 6
PUBLIC               : 7
PUNTOYCOMA           : 34 34
READ                 : 43
RESTA                : 74
RETURN               : 50 51
STRING               : 43 64
SUMA                 : 73
SWITCH               : 
TABULACION           : 3
TRUE                 : 66
VOID                 : 8
WHILE                : 41
error                : 

Nonterminals, with rules where they appear

Niark                : 1 0
asignacion           : 27
asignacion_vector    : 28
condicion            : 33 34 41
condicion_extra      : 58 59
dec_variable         : 25
dec_vector           : 26
definicion_funcion   : 1
dominio              : 5
for                  : 20
if                   : 19
incdec               : 24 34
indentacion          : 3 14 33 34 35 36 41 42 43 44 45 46 47 48 49
instrucciones        : 1
llamado_funcion      : 29 67
op_aritmetica        : 44 45 46 47 48 49 51
op_aritmetica_extra  : 68 70 71
operador_aritmetico  : 68 70 71
operador_condicional : 58 59
operador_logico      : 59
parametro            : 5
parametro_extra      : 11 12
parametro_llamado    : 14
parametro_llamado_extra : 16 17
post_incdec          : 36
pre_incdec           : 35
print                : 22
read                 : 23
retorno              : 30
return               : 5
tipo_variable        : 16 42 50 58 58 59 59 68 68 70 71
vacio                : 2 4 10 13 15 18 32 60 69 72
while                : 21

Parsing method: LALR

state 0

    (0) S' -> . Niark
    (1) Niark -> . definicion_funcion instrucciones Niark NEWLINE
    (2) Niark -> . vacio
    (5) definicion_funcion -> . dominio return NOMBRE PARIZQ parametro PARDER
    (79) vacio -> .
    (6) dominio -> . PRIVATE
    (7) dominio -> . PUBLIC

    $end            reduce using rule 79 (vacio -> .)
    PRIVATE         shift and go to state 5
    PUBLIC          shift and go to state 6

    Niark                          shift and go to state 1
    definicion_funcion             shift and go to state 2
    vacio                          shift and go to state 3
    dominio                        shift and go to state 4

state 1

    (0) S' -> Niark .



state 2

    (1) Niark -> definicion_funcion . instrucciones Niark NEWLINE
    (19) instrucciones -> . if NEWLINE
    (20) instrucciones -> . for NEWLINE
    (21) instrucciones -> . while NEWLINE
    (22) instrucciones -> . print NEWLINE
    (23) instrucciones -> . read NEWLINE
    (24) instrucciones -> . incdec NEWLINE
    (25) instrucciones -> . dec_variable NEWLINE
    (26) instrucciones -> . dec_vector NEWLINE
    (27) instrucciones -> . asignacion NEWLINE
    (28) instrucciones -> . asignacion_vector NEWLINE
    (29) instrucciones -> . llamado_funcion NEWLINE
    (30) instrucciones -> . retorno NEWLINE
    (31) instrucciones -> . COMENTARIO NEWLINE
    (32) instrucciones -> . vacio
    (33) if -> . indentacion IF PARIZQ condicion PARDER
    (34) for -> . indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
    (41) while -> . indentacion WHILE PARIZQ condicion PARDER
    (42) print -> . indentacion PRINT PARIZQ tipo_variable PARDER
    (43) read -> . indentacion READ PARIZQ STRING PARDER
    (35) incdec -> . indentacion pre_incdec
    (36) incdec -> . indentacion post_incdec
    (44) dec_variable -> . indentacion DECVARIABLE ASIGNACION op_aritmetica
    (45) dec_vector -> . indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (46) dec_vector -> . indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (47) asignacion -> . indentacion NOMBRE ASIGNACION op_aritmetica
    (48) asignacion_vector -> . indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (49) asignacion_vector -> . indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (50) retorno -> . RETURN tipo_variable
    (51) retorno -> . RETURN op_aritmetica
    (79) vacio -> .
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

    COMENTARIO      shift and go to state 20
    RETURN          shift and go to state 23
    PRIVATE         reduce using rule 79 (vacio -> .)
    PUBLIC          reduce using rule 79 (vacio -> .)
    NEWLINE         reduce using rule 79 (vacio -> .)
    IF              reduce using rule 79 (vacio -> .)
    FOR             reduce using rule 79 (vacio -> .)
    WHILE           reduce using rule 79 (vacio -> .)
    PRINT           reduce using rule 79 (vacio -> .)
    READ            reduce using rule 79 (vacio -> .)
    DECVARIABLE     reduce using rule 79 (vacio -> .)
    NOMBRE          reduce using rule 79 (vacio -> .)
    INCREMENTAR     reduce using rule 79 (vacio -> .)
    DECREMENTAR     reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

    instrucciones                  shift and go to state 7
    if                             shift and go to state 8
    for                            shift and go to state 9
    while                          shift and go to state 10
    print                          shift and go to state 11
    read                           shift and go to state 12
    incdec                         shift and go to state 13
    dec_variable                   shift and go to state 14
    dec_vector                     shift and go to state 15
    asignacion                     shift and go to state 16
    asignacion_vector              shift and go to state 17
    llamado_funcion                shift and go to state 18
    retorno                        shift and go to state 19
    vacio                          shift and go to state 21
    indentacion                    shift and go to state 22

state 3

    (2) Niark -> vacio .

    $end            reduce using rule 2 (Niark -> vacio .)
    NEWLINE         reduce using rule 2 (Niark -> vacio .)


state 4

    (5) definicion_funcion -> dominio . return NOMBRE PARIZQ parametro PARDER
    (8) return -> . VOID
    (9) return -> . FUNCTION

    VOID            shift and go to state 26
    FUNCTION        shift and go to state 27

    return                         shift and go to state 25

state 5

    (6) dominio -> PRIVATE .

    VOID            reduce using rule 6 (dominio -> PRIVATE .)
    FUNCTION        reduce using rule 6 (dominio -> PRIVATE .)


state 6

    (7) dominio -> PUBLIC .

    VOID            reduce using rule 7 (dominio -> PUBLIC .)
    FUNCTION        reduce using rule 7 (dominio -> PUBLIC .)


state 7

    (1) Niark -> definicion_funcion instrucciones . Niark NEWLINE
    (1) Niark -> . definicion_funcion instrucciones Niark NEWLINE
    (2) Niark -> . vacio
    (5) definicion_funcion -> . dominio return NOMBRE PARIZQ parametro PARDER
    (79) vacio -> .
    (6) dominio -> . PRIVATE
    (7) dominio -> . PUBLIC

    NEWLINE         reduce using rule 79 (vacio -> .)
    PRIVATE         shift and go to state 5
    PUBLIC          shift and go to state 6

    definicion_funcion             shift and go to state 2
    Niark                          shift and go to state 28
    vacio                          shift and go to state 3
    dominio                        shift and go to state 4

state 8

    (19) instrucciones -> if . NEWLINE

    NEWLINE         shift and go to state 29


state 9

    (20) instrucciones -> for . NEWLINE

    NEWLINE         shift and go to state 30


state 10

    (21) instrucciones -> while . NEWLINE

    NEWLINE         shift and go to state 31


state 11

    (22) instrucciones -> print . NEWLINE

    NEWLINE         shift and go to state 32


state 12

    (23) instrucciones -> read . NEWLINE

    NEWLINE         shift and go to state 33


state 13

    (24) instrucciones -> incdec . NEWLINE

    NEWLINE         shift and go to state 34


state 14

    (25) instrucciones -> dec_variable . NEWLINE

    NEWLINE         shift and go to state 35


state 15

    (26) instrucciones -> dec_vector . NEWLINE

    NEWLINE         shift and go to state 36


state 16

    (27) instrucciones -> asignacion . NEWLINE

    NEWLINE         shift and go to state 37


state 17

    (28) instrucciones -> asignacion_vector . NEWLINE

    NEWLINE         shift and go to state 38


state 18

    (29) instrucciones -> llamado_funcion . NEWLINE

    NEWLINE         shift and go to state 39


state 19

    (30) instrucciones -> retorno . NEWLINE

    NEWLINE         shift and go to state 40


state 20

    (31) instrucciones -> COMENTARIO . NEWLINE

    NEWLINE         shift and go to state 41


state 21

    (32) instrucciones -> vacio .
    (4) indentacion -> vacio .

    PRIVATE         reduce using rule 32 (instrucciones -> vacio .)
    PUBLIC          reduce using rule 32 (instrucciones -> vacio .)
    NEWLINE         reduce using rule 32 (instrucciones -> vacio .)
    IF              reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)


state 22

    (33) if -> indentacion . IF PARIZQ condicion PARDER
    (34) for -> indentacion . FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER
    (41) while -> indentacion . WHILE PARIZQ condicion PARDER
    (42) print -> indentacion . PRINT PARIZQ tipo_variable PARDER
    (43) read -> indentacion . READ PARIZQ STRING PARDER
    (35) incdec -> indentacion . pre_incdec
    (36) incdec -> indentacion . post_incdec
    (44) dec_variable -> indentacion . DECVARIABLE ASIGNACION op_aritmetica
    (45) dec_vector -> indentacion . DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (46) dec_vector -> indentacion . DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (47) asignacion -> indentacion . NOMBRE ASIGNACION op_aritmetica
    (48) asignacion_vector -> indentacion . NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (49) asignacion_vector -> indentacion . NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (14) llamado_funcion -> indentacion . NOMBRE PARIZQ parametro_llamado PARDER
    (37) pre_incdec -> . INCREMENTAR NOMBRE
    (38) pre_incdec -> . DECREMENTAR NOMBRE
    (39) post_incdec -> . NOMBRE INCREMENTAR
    (40) post_incdec -> . NOMBRE DECREMENTAR

    IF              shift and go to state 42
    FOR             shift and go to state 43
    WHILE           shift and go to state 45
    PRINT           shift and go to state 46
    READ            shift and go to state 47
    DECVARIABLE     shift and go to state 44
    NOMBRE          shift and go to state 50
    INCREMENTAR     shift and go to state 51
    DECREMENTAR     shift and go to state 52

    pre_incdec                     shift and go to state 48
    post_incdec                    shift and go to state 49

state 23

    (50) retorno -> RETURN . tipo_variable
    (51) retorno -> RETURN . op_aritmetica
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (79) vacio -> .
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 53
    op_aritmetica                  shift and go to state 54
    llamado_funcion                shift and go to state 61
    vacio                          shift and go to state 62
    indentacion                    shift and go to state 63

state 24

    (3) indentacion -> TABULACION . indentacion
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

    TABULACION      shift and go to state 24
    IF              reduce using rule 79 (vacio -> .)
    FOR             reduce using rule 79 (vacio -> .)
    WHILE           reduce using rule 79 (vacio -> .)
    PRINT           reduce using rule 79 (vacio -> .)
    READ            reduce using rule 79 (vacio -> .)
    DECVARIABLE     reduce using rule 79 (vacio -> .)
    NOMBRE          reduce using rule 79 (vacio -> .)
    INCREMENTAR     reduce using rule 79 (vacio -> .)
    DECREMENTAR     reduce using rule 79 (vacio -> .)

    indentacion                    shift and go to state 64
    vacio                          shift and go to state 65

state 25

    (5) definicion_funcion -> dominio return . NOMBRE PARIZQ parametro PARDER

    NOMBRE          shift and go to state 66


state 26

    (8) return -> VOID .

    NOMBRE          reduce using rule 8 (return -> VOID .)


state 27

    (9) return -> FUNCTION .

    NOMBRE          reduce using rule 9 (return -> FUNCTION .)


state 28

    (1) Niark -> definicion_funcion instrucciones Niark . NEWLINE

    NEWLINE         shift and go to state 67


state 29

    (19) instrucciones -> if NEWLINE .

    PRIVATE         reduce using rule 19 (instrucciones -> if NEWLINE .)
    PUBLIC          reduce using rule 19 (instrucciones -> if NEWLINE .)
    NEWLINE         reduce using rule 19 (instrucciones -> if NEWLINE .)


state 30

    (20) instrucciones -> for NEWLINE .

    PRIVATE         reduce using rule 20 (instrucciones -> for NEWLINE .)
    PUBLIC          reduce using rule 20 (instrucciones -> for NEWLINE .)
    NEWLINE         reduce using rule 20 (instrucciones -> for NEWLINE .)


state 31

    (21) instrucciones -> while NEWLINE .

    PRIVATE         reduce using rule 21 (instrucciones -> while NEWLINE .)
    PUBLIC          reduce using rule 21 (instrucciones -> while NEWLINE .)
    NEWLINE         reduce using rule 21 (instrucciones -> while NEWLINE .)


state 32

    (22) instrucciones -> print NEWLINE .

    PRIVATE         reduce using rule 22 (instrucciones -> print NEWLINE .)
    PUBLIC          reduce using rule 22 (instrucciones -> print NEWLINE .)
    NEWLINE         reduce using rule 22 (instrucciones -> print NEWLINE .)


state 33

    (23) instrucciones -> read NEWLINE .

    PRIVATE         reduce using rule 23 (instrucciones -> read NEWLINE .)
    PUBLIC          reduce using rule 23 (instrucciones -> read NEWLINE .)
    NEWLINE         reduce using rule 23 (instrucciones -> read NEWLINE .)


state 34

    (24) instrucciones -> incdec NEWLINE .

    PRIVATE         reduce using rule 24 (instrucciones -> incdec NEWLINE .)
    PUBLIC          reduce using rule 24 (instrucciones -> incdec NEWLINE .)
    NEWLINE         reduce using rule 24 (instrucciones -> incdec NEWLINE .)


state 35

    (25) instrucciones -> dec_variable NEWLINE .

    PRIVATE         reduce using rule 25 (instrucciones -> dec_variable NEWLINE .)
    PUBLIC          reduce using rule 25 (instrucciones -> dec_variable NEWLINE .)
    NEWLINE         reduce using rule 25 (instrucciones -> dec_variable NEWLINE .)


state 36

    (26) instrucciones -> dec_vector NEWLINE .

    PRIVATE         reduce using rule 26 (instrucciones -> dec_vector NEWLINE .)
    PUBLIC          reduce using rule 26 (instrucciones -> dec_vector NEWLINE .)
    NEWLINE         reduce using rule 26 (instrucciones -> dec_vector NEWLINE .)


state 37

    (27) instrucciones -> asignacion NEWLINE .

    PRIVATE         reduce using rule 27 (instrucciones -> asignacion NEWLINE .)
    PUBLIC          reduce using rule 27 (instrucciones -> asignacion NEWLINE .)
    NEWLINE         reduce using rule 27 (instrucciones -> asignacion NEWLINE .)


state 38

    (28) instrucciones -> asignacion_vector NEWLINE .

    PRIVATE         reduce using rule 28 (instrucciones -> asignacion_vector NEWLINE .)
    PUBLIC          reduce using rule 28 (instrucciones -> asignacion_vector NEWLINE .)
    NEWLINE         reduce using rule 28 (instrucciones -> asignacion_vector NEWLINE .)


state 39

    (29) instrucciones -> llamado_funcion NEWLINE .

    PRIVATE         reduce using rule 29 (instrucciones -> llamado_funcion NEWLINE .)
    PUBLIC          reduce using rule 29 (instrucciones -> llamado_funcion NEWLINE .)
    NEWLINE         reduce using rule 29 (instrucciones -> llamado_funcion NEWLINE .)


state 40

    (30) instrucciones -> retorno NEWLINE .

    PRIVATE         reduce using rule 30 (instrucciones -> retorno NEWLINE .)
    PUBLIC          reduce using rule 30 (instrucciones -> retorno NEWLINE .)
    NEWLINE         reduce using rule 30 (instrucciones -> retorno NEWLINE .)


state 41

    (31) instrucciones -> COMENTARIO NEWLINE .

    PRIVATE         reduce using rule 31 (instrucciones -> COMENTARIO NEWLINE .)
    PUBLIC          reduce using rule 31 (instrucciones -> COMENTARIO NEWLINE .)
    NEWLINE         reduce using rule 31 (instrucciones -> COMENTARIO NEWLINE .)


state 42

    (33) if -> indentacion IF . PARIZQ condicion PARDER

    PARIZQ          shift and go to state 68


state 43

    (34) for -> indentacion FOR . PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    PARIZQ          shift and go to state 69


state 44

    (44) dec_variable -> indentacion DECVARIABLE . ASIGNACION op_aritmetica
    (45) dec_vector -> indentacion DECVARIABLE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (46) dec_vector -> indentacion DECVARIABLE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica

    ASIGNACION      shift and go to state 70
    CORCHETEIZQ     shift and go to state 71


state 45

    (41) while -> indentacion WHILE . PARIZQ condicion PARDER

    PARIZQ          shift and go to state 72


state 46

    (42) print -> indentacion PRINT . PARIZQ tipo_variable PARDER

    PARIZQ          shift and go to state 73


state 47

    (43) read -> indentacion READ . PARIZQ STRING PARDER

    PARIZQ          shift and go to state 74


state 48

    (35) incdec -> indentacion pre_incdec .

    NEWLINE         reduce using rule 35 (incdec -> indentacion pre_incdec .)
    PARDER          reduce using rule 35 (incdec -> indentacion pre_incdec .)


state 49

    (36) incdec -> indentacion post_incdec .

    NEWLINE         reduce using rule 36 (incdec -> indentacion post_incdec .)
    PARDER          reduce using rule 36 (incdec -> indentacion post_incdec .)


state 50

    (47) asignacion -> indentacion NOMBRE . ASIGNACION op_aritmetica
    (48) asignacion_vector -> indentacion NOMBRE . CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (49) asignacion_vector -> indentacion NOMBRE . CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica
    (14) llamado_funcion -> indentacion NOMBRE . PARIZQ parametro_llamado PARDER
    (39) post_incdec -> NOMBRE . INCREMENTAR
    (40) post_incdec -> NOMBRE . DECREMENTAR

    ASIGNACION      shift and go to state 75
    CORCHETEIZQ     shift and go to state 76
    PARIZQ          shift and go to state 77
    INCREMENTAR     shift and go to state 78
    DECREMENTAR     shift and go to state 79


state 51

    (37) pre_incdec -> INCREMENTAR . NOMBRE

    NOMBRE          shift and go to state 80


state 52

    (38) pre_incdec -> DECREMENTAR . NOMBRE

    NOMBRE          shift and go to state 81


state 53

    (50) retorno -> RETURN tipo_variable .
    (68) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (73) operador_aritmetico -> . SUMA
    (74) operador_aritmetico -> . RESTA
    (75) operador_aritmetico -> . MULT
    (76) operador_aritmetico -> . DIV

    NEWLINE         reduce using rule 50 (retorno -> RETURN tipo_variable .)
    SUMA            shift and go to state 83
    RESTA           shift and go to state 84
    MULT            shift and go to state 85
    DIV             shift and go to state 86

    operador_aritmetico            shift and go to state 82

state 54

    (51) retorno -> RETURN op_aritmetica .

    NEWLINE         reduce using rule 51 (retorno -> RETURN op_aritmetica .)


state 55

    (61) tipo_variable -> NOMBRE .

    SUMA            reduce using rule 61 (tipo_variable -> NOMBRE .)
    RESTA           reduce using rule 61 (tipo_variable -> NOMBRE .)
    MULT            reduce using rule 61 (tipo_variable -> NOMBRE .)
    DIV             reduce using rule 61 (tipo_variable -> NOMBRE .)
    NEWLINE         reduce using rule 61 (tipo_variable -> NOMBRE .)
    DIFERENTE       reduce using rule 61 (tipo_variable -> NOMBRE .)
    IGUAL           reduce using rule 61 (tipo_variable -> NOMBRE .)
    MAYOR           reduce using rule 61 (tipo_variable -> NOMBRE .)
    MAYORIGUAL      reduce using rule 61 (tipo_variable -> NOMBRE .)
    MENOR           reduce using rule 61 (tipo_variable -> NOMBRE .)
    MENORIGUAL      reduce using rule 61 (tipo_variable -> NOMBRE .)
    PARDER          reduce using rule 61 (tipo_variable -> NOMBRE .)
    COMA            reduce using rule 61 (tipo_variable -> NOMBRE .)
    AND             reduce using rule 61 (tipo_variable -> NOMBRE .)
    OR              reduce using rule 61 (tipo_variable -> NOMBRE .)
    PUNTOYCOMA      reduce using rule 61 (tipo_variable -> NOMBRE .)


state 56

    (62) tipo_variable -> DOUBLE .

    SUMA            reduce using rule 62 (tipo_variable -> DOUBLE .)
    RESTA           reduce using rule 62 (tipo_variable -> DOUBLE .)
    MULT            reduce using rule 62 (tipo_variable -> DOUBLE .)
    DIV             reduce using rule 62 (tipo_variable -> DOUBLE .)
    NEWLINE         reduce using rule 62 (tipo_variable -> DOUBLE .)
    DIFERENTE       reduce using rule 62 (tipo_variable -> DOUBLE .)
    IGUAL           reduce using rule 62 (tipo_variable -> DOUBLE .)
    MAYOR           reduce using rule 62 (tipo_variable -> DOUBLE .)
    MAYORIGUAL      reduce using rule 62 (tipo_variable -> DOUBLE .)
    MENOR           reduce using rule 62 (tipo_variable -> DOUBLE .)
    MENORIGUAL      reduce using rule 62 (tipo_variable -> DOUBLE .)
    PARDER          reduce using rule 62 (tipo_variable -> DOUBLE .)
    COMA            reduce using rule 62 (tipo_variable -> DOUBLE .)
    AND             reduce using rule 62 (tipo_variable -> DOUBLE .)
    OR              reduce using rule 62 (tipo_variable -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 62 (tipo_variable -> DOUBLE .)


state 57

    (63) tipo_variable -> INT .

    SUMA            reduce using rule 63 (tipo_variable -> INT .)
    RESTA           reduce using rule 63 (tipo_variable -> INT .)
    MULT            reduce using rule 63 (tipo_variable -> INT .)
    DIV             reduce using rule 63 (tipo_variable -> INT .)
    NEWLINE         reduce using rule 63 (tipo_variable -> INT .)
    DIFERENTE       reduce using rule 63 (tipo_variable -> INT .)
    IGUAL           reduce using rule 63 (tipo_variable -> INT .)
    MAYOR           reduce using rule 63 (tipo_variable -> INT .)
    MAYORIGUAL      reduce using rule 63 (tipo_variable -> INT .)
    MENOR           reduce using rule 63 (tipo_variable -> INT .)
    MENORIGUAL      reduce using rule 63 (tipo_variable -> INT .)
    PARDER          reduce using rule 63 (tipo_variable -> INT .)
    COMA            reduce using rule 63 (tipo_variable -> INT .)
    AND             reduce using rule 63 (tipo_variable -> INT .)
    OR              reduce using rule 63 (tipo_variable -> INT .)
    PUNTOYCOMA      reduce using rule 63 (tipo_variable -> INT .)


state 58

    (64) tipo_variable -> STRING .

    SUMA            reduce using rule 64 (tipo_variable -> STRING .)
    RESTA           reduce using rule 64 (tipo_variable -> STRING .)
    MULT            reduce using rule 64 (tipo_variable -> STRING .)
    DIV             reduce using rule 64 (tipo_variable -> STRING .)
    NEWLINE         reduce using rule 64 (tipo_variable -> STRING .)
    DIFERENTE       reduce using rule 64 (tipo_variable -> STRING .)
    IGUAL           reduce using rule 64 (tipo_variable -> STRING .)
    MAYOR           reduce using rule 64 (tipo_variable -> STRING .)
    MAYORIGUAL      reduce using rule 64 (tipo_variable -> STRING .)
    MENOR           reduce using rule 64 (tipo_variable -> STRING .)
    MENORIGUAL      reduce using rule 64 (tipo_variable -> STRING .)
    PARDER          reduce using rule 64 (tipo_variable -> STRING .)
    COMA            reduce using rule 64 (tipo_variable -> STRING .)
    AND             reduce using rule 64 (tipo_variable -> STRING .)
    OR              reduce using rule 64 (tipo_variable -> STRING .)
    PUNTOYCOMA      reduce using rule 64 (tipo_variable -> STRING .)


state 59

    (65) tipo_variable -> FALSE .

    SUMA            reduce using rule 65 (tipo_variable -> FALSE .)
    RESTA           reduce using rule 65 (tipo_variable -> FALSE .)
    MULT            reduce using rule 65 (tipo_variable -> FALSE .)
    DIV             reduce using rule 65 (tipo_variable -> FALSE .)
    NEWLINE         reduce using rule 65 (tipo_variable -> FALSE .)
    DIFERENTE       reduce using rule 65 (tipo_variable -> FALSE .)
    IGUAL           reduce using rule 65 (tipo_variable -> FALSE .)
    MAYOR           reduce using rule 65 (tipo_variable -> FALSE .)
    MAYORIGUAL      reduce using rule 65 (tipo_variable -> FALSE .)
    MENOR           reduce using rule 65 (tipo_variable -> FALSE .)
    MENORIGUAL      reduce using rule 65 (tipo_variable -> FALSE .)
    PARDER          reduce using rule 65 (tipo_variable -> FALSE .)
    COMA            reduce using rule 65 (tipo_variable -> FALSE .)
    AND             reduce using rule 65 (tipo_variable -> FALSE .)
    OR              reduce using rule 65 (tipo_variable -> FALSE .)
    PUNTOYCOMA      reduce using rule 65 (tipo_variable -> FALSE .)


state 60

    (66) tipo_variable -> TRUE .

    SUMA            reduce using rule 66 (tipo_variable -> TRUE .)
    RESTA           reduce using rule 66 (tipo_variable -> TRUE .)
    MULT            reduce using rule 66 (tipo_variable -> TRUE .)
    DIV             reduce using rule 66 (tipo_variable -> TRUE .)
    NEWLINE         reduce using rule 66 (tipo_variable -> TRUE .)
    DIFERENTE       reduce using rule 66 (tipo_variable -> TRUE .)
    IGUAL           reduce using rule 66 (tipo_variable -> TRUE .)
    MAYOR           reduce using rule 66 (tipo_variable -> TRUE .)
    MAYORIGUAL      reduce using rule 66 (tipo_variable -> TRUE .)
    MENOR           reduce using rule 66 (tipo_variable -> TRUE .)
    MENORIGUAL      reduce using rule 66 (tipo_variable -> TRUE .)
    PARDER          reduce using rule 66 (tipo_variable -> TRUE .)
    COMA            reduce using rule 66 (tipo_variable -> TRUE .)
    AND             reduce using rule 66 (tipo_variable -> TRUE .)
    OR              reduce using rule 66 (tipo_variable -> TRUE .)
    PUNTOYCOMA      reduce using rule 66 (tipo_variable -> TRUE .)


state 61

    (67) tipo_variable -> llamado_funcion .

    SUMA            reduce using rule 67 (tipo_variable -> llamado_funcion .)
    RESTA           reduce using rule 67 (tipo_variable -> llamado_funcion .)
    MULT            reduce using rule 67 (tipo_variable -> llamado_funcion .)
    DIV             reduce using rule 67 (tipo_variable -> llamado_funcion .)
    NEWLINE         reduce using rule 67 (tipo_variable -> llamado_funcion .)
    DIFERENTE       reduce using rule 67 (tipo_variable -> llamado_funcion .)
    IGUAL           reduce using rule 67 (tipo_variable -> llamado_funcion .)
    MAYOR           reduce using rule 67 (tipo_variable -> llamado_funcion .)
    MAYORIGUAL      reduce using rule 67 (tipo_variable -> llamado_funcion .)
    MENOR           reduce using rule 67 (tipo_variable -> llamado_funcion .)
    MENORIGUAL      reduce using rule 67 (tipo_variable -> llamado_funcion .)
    PARDER          reduce using rule 67 (tipo_variable -> llamado_funcion .)
    COMA            reduce using rule 67 (tipo_variable -> llamado_funcion .)
    AND             reduce using rule 67 (tipo_variable -> llamado_funcion .)
    OR              reduce using rule 67 (tipo_variable -> llamado_funcion .)
    PUNTOYCOMA      reduce using rule 67 (tipo_variable -> llamado_funcion .)


state 62

    (69) op_aritmetica -> vacio .
    (4) indentacion -> vacio .

    NEWLINE         reduce using rule 69 (op_aritmetica -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)


state 63

    (14) llamado_funcion -> indentacion . NOMBRE PARIZQ parametro_llamado PARDER

    NOMBRE          shift and go to state 87


state 64

    (3) indentacion -> TABULACION indentacion .

    IF              reduce using rule 3 (indentacion -> TABULACION indentacion .)
    FOR             reduce using rule 3 (indentacion -> TABULACION indentacion .)
    WHILE           reduce using rule 3 (indentacion -> TABULACION indentacion .)
    PRINT           reduce using rule 3 (indentacion -> TABULACION indentacion .)
    READ            reduce using rule 3 (indentacion -> TABULACION indentacion .)
    DECVARIABLE     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    NOMBRE          reduce using rule 3 (indentacion -> TABULACION indentacion .)
    INCREMENTAR     reduce using rule 3 (indentacion -> TABULACION indentacion .)
    DECREMENTAR     reduce using rule 3 (indentacion -> TABULACION indentacion .)


state 65

    (4) indentacion -> vacio .

    IF              reduce using rule 4 (indentacion -> vacio .)
    FOR             reduce using rule 4 (indentacion -> vacio .)
    WHILE           reduce using rule 4 (indentacion -> vacio .)
    PRINT           reduce using rule 4 (indentacion -> vacio .)
    READ            reduce using rule 4 (indentacion -> vacio .)
    DECVARIABLE     reduce using rule 4 (indentacion -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)
    INCREMENTAR     reduce using rule 4 (indentacion -> vacio .)
    DECREMENTAR     reduce using rule 4 (indentacion -> vacio .)


state 66

    (5) definicion_funcion -> dominio return NOMBRE . PARIZQ parametro PARDER

    PARIZQ          shift and go to state 88


state 67

    (1) Niark -> definicion_funcion instrucciones Niark NEWLINE .

    $end            reduce using rule 1 (Niark -> definicion_funcion instrucciones Niark NEWLINE .)
    NEWLINE         reduce using rule 1 (Niark -> definicion_funcion instrucciones Niark NEWLINE .)


state 68

    (33) if -> indentacion IF PARIZQ . condicion PARDER
    (58) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    condicion                      shift and go to state 89
    tipo_variable                  shift and go to state 90
    llamado_funcion                shift and go to state 61
    vacio                          shift and go to state 65

state 69

    (34) for -> indentacion FOR PARIZQ . DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    DECVARIABLE     shift and go to state 91


state 70

    (44) dec_variable -> indentacion DECVARIABLE ASIGNACION . op_aritmetica
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (79) vacio -> .
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    op_aritmetica                  shift and go to state 92
    tipo_variable                  shift and go to state 93
    vacio                          shift and go to state 62
    llamado_funcion                shift and go to state 61

state 71

    (45) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (46) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica

    NOMBRE          shift and go to state 94
    INT             shift and go to state 95


state 72

    (41) while -> indentacion WHILE PARIZQ . condicion PARDER
    (58) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    condicion                      shift and go to state 96
    tipo_variable                  shift and go to state 90
    llamado_funcion                shift and go to state 61
    vacio                          shift and go to state 65

state 73

    (42) print -> indentacion PRINT PARIZQ . tipo_variable PARDER
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    tipo_variable                  shift and go to state 97
    llamado_funcion                shift and go to state 61
    vacio                          shift and go to state 65

state 74

    (43) read -> indentacion READ PARIZQ . STRING PARDER

    STRING          shift and go to state 98


state 75

    (47) asignacion -> indentacion NOMBRE ASIGNACION . op_aritmetica
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (79) vacio -> .
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    op_aritmetica                  shift and go to state 99
    tipo_variable                  shift and go to state 93
    vacio                          shift and go to state 62
    llamado_funcion                shift and go to state 61

state 76

    (48) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ . NOMBRE CORCHETEDER ASIGNACION op_aritmetica
    (49) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ . INT CORCHETEDER ASIGNACION op_aritmetica

    NOMBRE          shift and go to state 100
    INT             shift and go to state 101


state 77

    (14) llamado_funcion -> indentacion NOMBRE PARIZQ . parametro_llamado PARDER
    (15) parametro_llamado -> . vacio
    (16) parametro_llamado -> . tipo_variable parametro_llamado_extra
    (79) vacio -> .
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    PARDER          reduce using rule 79 (vacio -> .)
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    parametro_llamado              shift and go to state 102
    vacio                          shift and go to state 103
    tipo_variable                  shift and go to state 104
    llamado_funcion                shift and go to state 61

state 78

    (39) post_incdec -> NOMBRE INCREMENTAR .

    NEWLINE         reduce using rule 39 (post_incdec -> NOMBRE INCREMENTAR .)
    PARDER          reduce using rule 39 (post_incdec -> NOMBRE INCREMENTAR .)


state 79

    (40) post_incdec -> NOMBRE DECREMENTAR .

    NEWLINE         reduce using rule 40 (post_incdec -> NOMBRE DECREMENTAR .)
    PARDER          reduce using rule 40 (post_incdec -> NOMBRE DECREMENTAR .)


state 80

    (37) pre_incdec -> INCREMENTAR NOMBRE .

    NEWLINE         reduce using rule 37 (pre_incdec -> INCREMENTAR NOMBRE .)
    PARDER          reduce using rule 37 (pre_incdec -> INCREMENTAR NOMBRE .)


state 81

    (38) pre_incdec -> DECREMENTAR NOMBRE .

    NEWLINE         reduce using rule 38 (pre_incdec -> DECREMENTAR NOMBRE .)
    PARDER          reduce using rule 38 (pre_incdec -> DECREMENTAR NOMBRE .)


state 82

    (68) op_aritmetica -> tipo_variable operador_aritmetico . tipo_variable op_aritmetica_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 105
    llamado_funcion                shift and go to state 61
    indentacion                    shift and go to state 63
    vacio                          shift and go to state 65

state 83

    (73) operador_aritmetico -> SUMA .

    NOMBRE          reduce using rule 73 (operador_aritmetico -> SUMA .)
    DOUBLE          reduce using rule 73 (operador_aritmetico -> SUMA .)
    INT             reduce using rule 73 (operador_aritmetico -> SUMA .)
    STRING          reduce using rule 73 (operador_aritmetico -> SUMA .)
    FALSE           reduce using rule 73 (operador_aritmetico -> SUMA .)
    TRUE            reduce using rule 73 (operador_aritmetico -> SUMA .)
    TABULACION      reduce using rule 73 (operador_aritmetico -> SUMA .)
    PARIZQ          reduce using rule 73 (operador_aritmetico -> SUMA .)


state 84

    (74) operador_aritmetico -> RESTA .

    NOMBRE          reduce using rule 74 (operador_aritmetico -> RESTA .)
    DOUBLE          reduce using rule 74 (operador_aritmetico -> RESTA .)
    INT             reduce using rule 74 (operador_aritmetico -> RESTA .)
    STRING          reduce using rule 74 (operador_aritmetico -> RESTA .)
    FALSE           reduce using rule 74 (operador_aritmetico -> RESTA .)
    TRUE            reduce using rule 74 (operador_aritmetico -> RESTA .)
    TABULACION      reduce using rule 74 (operador_aritmetico -> RESTA .)
    PARIZQ          reduce using rule 74 (operador_aritmetico -> RESTA .)


state 85

    (75) operador_aritmetico -> MULT .

    NOMBRE          reduce using rule 75 (operador_aritmetico -> MULT .)
    DOUBLE          reduce using rule 75 (operador_aritmetico -> MULT .)
    INT             reduce using rule 75 (operador_aritmetico -> MULT .)
    STRING          reduce using rule 75 (operador_aritmetico -> MULT .)
    FALSE           reduce using rule 75 (operador_aritmetico -> MULT .)
    TRUE            reduce using rule 75 (operador_aritmetico -> MULT .)
    TABULACION      reduce using rule 75 (operador_aritmetico -> MULT .)
    PARIZQ          reduce using rule 75 (operador_aritmetico -> MULT .)


state 86

    (76) operador_aritmetico -> DIV .

    NOMBRE          reduce using rule 76 (operador_aritmetico -> DIV .)
    DOUBLE          reduce using rule 76 (operador_aritmetico -> DIV .)
    INT             reduce using rule 76 (operador_aritmetico -> DIV .)
    STRING          reduce using rule 76 (operador_aritmetico -> DIV .)
    FALSE           reduce using rule 76 (operador_aritmetico -> DIV .)
    TRUE            reduce using rule 76 (operador_aritmetico -> DIV .)
    TABULACION      reduce using rule 76 (operador_aritmetico -> DIV .)
    PARIZQ          reduce using rule 76 (operador_aritmetico -> DIV .)


state 87

    (14) llamado_funcion -> indentacion NOMBRE . PARIZQ parametro_llamado PARDER

    PARIZQ          shift and go to state 77


state 88

    (5) definicion_funcion -> dominio return NOMBRE PARIZQ . parametro PARDER
    (10) parametro -> . vacio
    (11) parametro -> . NOMBRE parametro_extra
    (79) vacio -> .

    NOMBRE          shift and go to state 106
    PARDER          reduce using rule 79 (vacio -> .)

    parametro                      shift and go to state 107
    vacio                          shift and go to state 108

state 89

    (33) if -> indentacion IF PARIZQ condicion . PARDER

    PARDER          shift and go to state 109


state 90

    (58) condicion -> tipo_variable . operador_condicional tipo_variable condicion_extra
    (52) operador_condicional -> . DIFERENTE
    (53) operador_condicional -> . IGUAL
    (54) operador_condicional -> . MAYOR
    (55) operador_condicional -> . MAYORIGUAL
    (56) operador_condicional -> . MENOR
    (57) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 111
    IGUAL           shift and go to state 112
    MAYOR           shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENOR           shift and go to state 115
    MENORIGUAL      shift and go to state 116

    operador_condicional           shift and go to state 110

state 91

    (34) for -> indentacion FOR PARIZQ DECVARIABLE . ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    ASIGNACION      shift and go to state 117


state 92

    (44) dec_variable -> indentacion DECVARIABLE ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 44 (dec_variable -> indentacion DECVARIABLE ASIGNACION op_aritmetica .)


state 93

    (68) op_aritmetica -> tipo_variable . operador_aritmetico tipo_variable op_aritmetica_extra
    (73) operador_aritmetico -> . SUMA
    (74) operador_aritmetico -> . RESTA
    (75) operador_aritmetico -> . MULT
    (76) operador_aritmetico -> . DIV

    SUMA            shift and go to state 83
    RESTA           shift and go to state 84
    MULT            shift and go to state 85
    DIV             shift and go to state 86

    operador_aritmetico            shift and go to state 82

state 94

    (45) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica

    CORCHETEDER     shift and go to state 118


state 95

    (46) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica

    CORCHETEDER     shift and go to state 119


state 96

    (41) while -> indentacion WHILE PARIZQ condicion . PARDER

    PARDER          shift and go to state 120


state 97

    (42) print -> indentacion PRINT PARIZQ tipo_variable . PARDER

    PARDER          shift and go to state 121


state 98

    (43) read -> indentacion READ PARIZQ STRING . PARDER

    PARDER          shift and go to state 122


state 99

    (47) asignacion -> indentacion NOMBRE ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 47 (asignacion -> indentacion NOMBRE ASIGNACION op_aritmetica .)


state 100

    (48) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE . CORCHETEDER ASIGNACION op_aritmetica

    CORCHETEDER     shift and go to state 123


state 101

    (49) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT . CORCHETEDER ASIGNACION op_aritmetica

    CORCHETEDER     shift and go to state 124


state 102

    (14) llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado . PARDER

    PARDER          shift and go to state 125


state 103

    (15) parametro_llamado -> vacio .
    (4) indentacion -> vacio .

    PARDER          reduce using rule 15 (parametro_llamado -> vacio .)
    NOMBRE          reduce using rule 4 (indentacion -> vacio .)


state 104

    (16) parametro_llamado -> tipo_variable . parametro_llamado_extra
    (17) parametro_llamado_extra -> . COMA NOMBRE parametro_llamado_extra
    (18) parametro_llamado_extra -> . vacio
    (79) vacio -> .

    COMA            shift and go to state 127
    PARDER          reduce using rule 79 (vacio -> .)

    parametro_llamado_extra        shift and go to state 126
    vacio                          shift and go to state 128

state 105

    (68) op_aritmetica -> tipo_variable operador_aritmetico tipo_variable . op_aritmetica_extra
    (70) op_aritmetica_extra -> . operador_aritmetico tipo_variable op_aritmetica_extra
    (71) op_aritmetica_extra -> . operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
    (72) op_aritmetica_extra -> . vacio
    (73) operador_aritmetico -> . SUMA
    (74) operador_aritmetico -> . RESTA
    (75) operador_aritmetico -> . MULT
    (76) operador_aritmetico -> . DIV
    (79) vacio -> .

    SUMA            shift and go to state 83
    RESTA           shift and go to state 84
    MULT            shift and go to state 85
    DIV             shift and go to state 86
    NEWLINE         reduce using rule 79 (vacio -> .)

    operador_aritmetico            shift and go to state 129
    op_aritmetica_extra            shift and go to state 130
    vacio                          shift and go to state 131

state 106

    (11) parametro -> NOMBRE . parametro_extra
    (12) parametro_extra -> . COMA NOMBRE parametro_extra
    (13) parametro_extra -> . vacio
    (79) vacio -> .

    COMA            shift and go to state 133
    PARDER          reduce using rule 79 (vacio -> .)

    parametro_extra                shift and go to state 132
    vacio                          shift and go to state 134

state 107

    (5) definicion_funcion -> dominio return NOMBRE PARIZQ parametro . PARDER

    PARDER          shift and go to state 135


state 108

    (10) parametro -> vacio .

    PARDER          reduce using rule 10 (parametro -> vacio .)


state 109

    (33) if -> indentacion IF PARIZQ condicion PARDER .

    NEWLINE         reduce using rule 33 (if -> indentacion IF PARIZQ condicion PARDER .)


state 110

    (58) condicion -> tipo_variable operador_condicional . tipo_variable condicion_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 136
    llamado_funcion                shift and go to state 61
    indentacion                    shift and go to state 63
    vacio                          shift and go to state 65

state 111

    (52) operador_condicional -> DIFERENTE .

    NOMBRE          reduce using rule 52 (operador_condicional -> DIFERENTE .)
    DOUBLE          reduce using rule 52 (operador_condicional -> DIFERENTE .)
    INT             reduce using rule 52 (operador_condicional -> DIFERENTE .)
    STRING          reduce using rule 52 (operador_condicional -> DIFERENTE .)
    FALSE           reduce using rule 52 (operador_condicional -> DIFERENTE .)
    TRUE            reduce using rule 52 (operador_condicional -> DIFERENTE .)
    TABULACION      reduce using rule 52 (operador_condicional -> DIFERENTE .)


state 112

    (53) operador_condicional -> IGUAL .

    NOMBRE          reduce using rule 53 (operador_condicional -> IGUAL .)
    DOUBLE          reduce using rule 53 (operador_condicional -> IGUAL .)
    INT             reduce using rule 53 (operador_condicional -> IGUAL .)
    STRING          reduce using rule 53 (operador_condicional -> IGUAL .)
    FALSE           reduce using rule 53 (operador_condicional -> IGUAL .)
    TRUE            reduce using rule 53 (operador_condicional -> IGUAL .)
    TABULACION      reduce using rule 53 (operador_condicional -> IGUAL .)


state 113

    (54) operador_condicional -> MAYOR .

    NOMBRE          reduce using rule 54 (operador_condicional -> MAYOR .)
    DOUBLE          reduce using rule 54 (operador_condicional -> MAYOR .)
    INT             reduce using rule 54 (operador_condicional -> MAYOR .)
    STRING          reduce using rule 54 (operador_condicional -> MAYOR .)
    FALSE           reduce using rule 54 (operador_condicional -> MAYOR .)
    TRUE            reduce using rule 54 (operador_condicional -> MAYOR .)
    TABULACION      reduce using rule 54 (operador_condicional -> MAYOR .)


state 114

    (55) operador_condicional -> MAYORIGUAL .

    NOMBRE          reduce using rule 55 (operador_condicional -> MAYORIGUAL .)
    DOUBLE          reduce using rule 55 (operador_condicional -> MAYORIGUAL .)
    INT             reduce using rule 55 (operador_condicional -> MAYORIGUAL .)
    STRING          reduce using rule 55 (operador_condicional -> MAYORIGUAL .)
    FALSE           reduce using rule 55 (operador_condicional -> MAYORIGUAL .)
    TRUE            reduce using rule 55 (operador_condicional -> MAYORIGUAL .)
    TABULACION      reduce using rule 55 (operador_condicional -> MAYORIGUAL .)


state 115

    (56) operador_condicional -> MENOR .

    NOMBRE          reduce using rule 56 (operador_condicional -> MENOR .)
    DOUBLE          reduce using rule 56 (operador_condicional -> MENOR .)
    INT             reduce using rule 56 (operador_condicional -> MENOR .)
    STRING          reduce using rule 56 (operador_condicional -> MENOR .)
    FALSE           reduce using rule 56 (operador_condicional -> MENOR .)
    TRUE            reduce using rule 56 (operador_condicional -> MENOR .)
    TABULACION      reduce using rule 56 (operador_condicional -> MENOR .)


state 116

    (57) operador_condicional -> MENORIGUAL .

    NOMBRE          reduce using rule 57 (operador_condicional -> MENORIGUAL .)
    DOUBLE          reduce using rule 57 (operador_condicional -> MENORIGUAL .)
    INT             reduce using rule 57 (operador_condicional -> MENORIGUAL .)
    STRING          reduce using rule 57 (operador_condicional -> MENORIGUAL .)
    FALSE           reduce using rule 57 (operador_condicional -> MENORIGUAL .)
    TRUE            reduce using rule 57 (operador_condicional -> MENORIGUAL .)
    TABULACION      reduce using rule 57 (operador_condicional -> MENORIGUAL .)


state 117

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION . INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    INT             shift and go to state 137


state 118

    (45) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica

    ASIGNACION      shift and go to state 138


state 119

    (46) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica

    ASIGNACION      shift and go to state 139


state 120

    (41) while -> indentacion WHILE PARIZQ condicion PARDER .

    NEWLINE         reduce using rule 41 (while -> indentacion WHILE PARIZQ condicion PARDER .)


state 121

    (42) print -> indentacion PRINT PARIZQ tipo_variable PARDER .

    NEWLINE         reduce using rule 42 (print -> indentacion PRINT PARIZQ tipo_variable PARDER .)


state 122

    (43) read -> indentacion READ PARIZQ STRING PARDER .

    NEWLINE         reduce using rule 43 (read -> indentacion READ PARIZQ STRING PARDER .)


state 123

    (48) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER . ASIGNACION op_aritmetica

    ASIGNACION      shift and go to state 140


state 124

    (49) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER . ASIGNACION op_aritmetica

    ASIGNACION      shift and go to state 141


state 125

    (14) llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .

    NEWLINE         reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    SUMA            reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    RESTA           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MULT            reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    DIV             reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    DIFERENTE       reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    IGUAL           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYOR           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MAYORIGUAL      reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MENOR           reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    MENORIGUAL      reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    PARDER          reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    COMA            reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    AND             reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    OR              reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)
    PUNTOYCOMA      reduce using rule 14 (llamado_funcion -> indentacion NOMBRE PARIZQ parametro_llamado PARDER .)


state 126

    (16) parametro_llamado -> tipo_variable parametro_llamado_extra .

    PARDER          reduce using rule 16 (parametro_llamado -> tipo_variable parametro_llamado_extra .)


state 127

    (17) parametro_llamado_extra -> COMA . NOMBRE parametro_llamado_extra

    NOMBRE          shift and go to state 142


state 128

    (18) parametro_llamado_extra -> vacio .

    PARDER          reduce using rule 18 (parametro_llamado_extra -> vacio .)


state 129

    (70) op_aritmetica_extra -> operador_aritmetico . tipo_variable op_aritmetica_extra
    (71) op_aritmetica_extra -> operador_aritmetico . PARIZQ tipo_variable op_aritmetica_extra PARDER
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    PARIZQ          shift and go to state 144
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 143
    llamado_funcion                shift and go to state 61
    indentacion                    shift and go to state 63
    vacio                          shift and go to state 65

state 130

    (68) op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra .

    NEWLINE         reduce using rule 68 (op_aritmetica -> tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra .)


state 131

    (72) op_aritmetica_extra -> vacio .

    NEWLINE         reduce using rule 72 (op_aritmetica_extra -> vacio .)
    PARDER          reduce using rule 72 (op_aritmetica_extra -> vacio .)


state 132

    (11) parametro -> NOMBRE parametro_extra .

    PARDER          reduce using rule 11 (parametro -> NOMBRE parametro_extra .)


state 133

    (12) parametro_extra -> COMA . NOMBRE parametro_extra

    NOMBRE          shift and go to state 145


state 134

    (13) parametro_extra -> vacio .

    PARDER          reduce using rule 13 (parametro_extra -> vacio .)


state 135

    (5) definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .

    COMENTARIO      reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    RETURN          reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    TABULACION      reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    PRIVATE         reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    PUBLIC          reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    NEWLINE         reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    IF              reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    FOR             reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    WHILE           reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    PRINT           reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    READ            reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    DECVARIABLE     reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    NOMBRE          reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    INCREMENTAR     reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)
    DECREMENTAR     reduce using rule 5 (definicion_funcion -> dominio return NOMBRE PARIZQ parametro PARDER .)


state 136

    (58) condicion -> tipo_variable operador_condicional tipo_variable . condicion_extra
    (59) condicion_extra -> . operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
    (60) condicion_extra -> . vacio
    (77) operador_logico -> . AND
    (78) operador_logico -> . OR
    (79) vacio -> .

    AND             shift and go to state 149
    OR              shift and go to state 150
    PARDER          reduce using rule 79 (vacio -> .)
    PUNTOYCOMA      reduce using rule 79 (vacio -> .)

    condicion_extra                shift and go to state 146
    operador_logico                shift and go to state 147
    vacio                          shift and go to state 148

state 137

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT . PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER

    PUNTOYCOMA      shift and go to state 151


state 138

    (45) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (79) vacio -> .
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    op_aritmetica                  shift and go to state 152
    tipo_variable                  shift and go to state 93
    vacio                          shift and go to state 62
    llamado_funcion                shift and go to state 61

state 139

    (46) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (79) vacio -> .
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    op_aritmetica                  shift and go to state 153
    tipo_variable                  shift and go to state 93
    vacio                          shift and go to state 62
    llamado_funcion                shift and go to state 61

state 140

    (48) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION . op_aritmetica
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (79) vacio -> .
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    op_aritmetica                  shift and go to state 154
    tipo_variable                  shift and go to state 93
    vacio                          shift and go to state 62
    llamado_funcion                shift and go to state 61

state 141

    (49) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION . op_aritmetica
    (68) op_aritmetica -> . tipo_variable operador_aritmetico tipo_variable op_aritmetica_extra
    (69) op_aritmetica -> . vacio
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (79) vacio -> .
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    NEWLINE         reduce using rule 79 (vacio -> .)
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    op_aritmetica                  shift and go to state 155
    tipo_variable                  shift and go to state 93
    vacio                          shift and go to state 62
    llamado_funcion                shift and go to state 61

state 142

    (17) parametro_llamado_extra -> COMA NOMBRE . parametro_llamado_extra
    (17) parametro_llamado_extra -> . COMA NOMBRE parametro_llamado_extra
    (18) parametro_llamado_extra -> . vacio
    (79) vacio -> .

    COMA            shift and go to state 127
    PARDER          reduce using rule 79 (vacio -> .)

    parametro_llamado_extra        shift and go to state 156
    vacio                          shift and go to state 128

state 143

    (70) op_aritmetica_extra -> operador_aritmetico tipo_variable . op_aritmetica_extra
    (70) op_aritmetica_extra -> . operador_aritmetico tipo_variable op_aritmetica_extra
    (71) op_aritmetica_extra -> . operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
    (72) op_aritmetica_extra -> . vacio
    (73) operador_aritmetico -> . SUMA
    (74) operador_aritmetico -> . RESTA
    (75) operador_aritmetico -> . MULT
    (76) operador_aritmetico -> . DIV
    (79) vacio -> .

    SUMA            shift and go to state 83
    RESTA           shift and go to state 84
    MULT            shift and go to state 85
    DIV             shift and go to state 86
    NEWLINE         reduce using rule 79 (vacio -> .)
    PARDER          reduce using rule 79 (vacio -> .)

    operador_aritmetico            shift and go to state 129
    op_aritmetica_extra            shift and go to state 157
    vacio                          shift and go to state 131

state 144

    (71) op_aritmetica_extra -> operador_aritmetico PARIZQ . tipo_variable op_aritmetica_extra PARDER
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 158
    llamado_funcion                shift and go to state 61
    indentacion                    shift and go to state 63
    vacio                          shift and go to state 65

state 145

    (12) parametro_extra -> COMA NOMBRE . parametro_extra
    (12) parametro_extra -> . COMA NOMBRE parametro_extra
    (13) parametro_extra -> . vacio
    (79) vacio -> .

    COMA            shift and go to state 133
    PARDER          reduce using rule 79 (vacio -> .)

    parametro_extra                shift and go to state 159
    vacio                          shift and go to state 134

state 146

    (58) condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .

    PARDER          reduce using rule 58 (condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .)
    PUNTOYCOMA      reduce using rule 58 (condicion -> tipo_variable operador_condicional tipo_variable condicion_extra .)


state 147

    (59) condicion_extra -> operador_logico . tipo_variable operador_condicional tipo_variable condicion_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 160
    llamado_funcion                shift and go to state 61
    indentacion                    shift and go to state 63
    vacio                          shift and go to state 65

state 148

    (60) condicion_extra -> vacio .

    PARDER          reduce using rule 60 (condicion_extra -> vacio .)
    PUNTOYCOMA      reduce using rule 60 (condicion_extra -> vacio .)


state 149

    (77) operador_logico -> AND .

    NOMBRE          reduce using rule 77 (operador_logico -> AND .)
    DOUBLE          reduce using rule 77 (operador_logico -> AND .)
    INT             reduce using rule 77 (operador_logico -> AND .)
    STRING          reduce using rule 77 (operador_logico -> AND .)
    FALSE           reduce using rule 77 (operador_logico -> AND .)
    TRUE            reduce using rule 77 (operador_logico -> AND .)
    TABULACION      reduce using rule 77 (operador_logico -> AND .)


state 150

    (78) operador_logico -> OR .

    NOMBRE          reduce using rule 78 (operador_logico -> OR .)
    DOUBLE          reduce using rule 78 (operador_logico -> OR .)
    INT             reduce using rule 78 (operador_logico -> OR .)
    STRING          reduce using rule 78 (operador_logico -> OR .)
    FALSE           reduce using rule 78 (operador_logico -> OR .)
    TRUE            reduce using rule 78 (operador_logico -> OR .)
    TABULACION      reduce using rule 78 (operador_logico -> OR .)


state 151

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA . condicion PUNTOYCOMA incdec PARDER
    (58) condicion -> . tipo_variable operador_condicional tipo_variable condicion_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    indentacion                    shift and go to state 63
    condicion                      shift and go to state 161
    tipo_variable                  shift and go to state 90
    llamado_funcion                shift and go to state 61
    vacio                          shift and go to state 65

state 152

    (45) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 45 (dec_vector -> indentacion DECVARIABLE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)


state 153

    (46) dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 46 (dec_vector -> indentacion DECVARIABLE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)


state 154

    (48) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 48 (asignacion_vector -> indentacion NOMBRE CORCHETEIZQ NOMBRE CORCHETEDER ASIGNACION op_aritmetica .)


state 155

    (49) asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .

    NEWLINE         reduce using rule 49 (asignacion_vector -> indentacion NOMBRE CORCHETEIZQ INT CORCHETEDER ASIGNACION op_aritmetica .)


state 156

    (17) parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra .

    PARDER          reduce using rule 17 (parametro_llamado_extra -> COMA NOMBRE parametro_llamado_extra .)


state 157

    (70) op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra .

    NEWLINE         reduce using rule 70 (op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra .)
    PARDER          reduce using rule 70 (op_aritmetica_extra -> operador_aritmetico tipo_variable op_aritmetica_extra .)


state 158

    (71) op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable . op_aritmetica_extra PARDER
    (70) op_aritmetica_extra -> . operador_aritmetico tipo_variable op_aritmetica_extra
    (71) op_aritmetica_extra -> . operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER
    (72) op_aritmetica_extra -> . vacio
    (73) operador_aritmetico -> . SUMA
    (74) operador_aritmetico -> . RESTA
    (75) operador_aritmetico -> . MULT
    (76) operador_aritmetico -> . DIV
    (79) vacio -> .

    SUMA            shift and go to state 83
    RESTA           shift and go to state 84
    MULT            shift and go to state 85
    DIV             shift and go to state 86
    PARDER          reduce using rule 79 (vacio -> .)

    operador_aritmetico            shift and go to state 129
    op_aritmetica_extra            shift and go to state 162
    vacio                          shift and go to state 131

state 159

    (12) parametro_extra -> COMA NOMBRE parametro_extra .

    PARDER          reduce using rule 12 (parametro_extra -> COMA NOMBRE parametro_extra .)


state 160

    (59) condicion_extra -> operador_logico tipo_variable . operador_condicional tipo_variable condicion_extra
    (52) operador_condicional -> . DIFERENTE
    (53) operador_condicional -> . IGUAL
    (54) operador_condicional -> . MAYOR
    (55) operador_condicional -> . MAYORIGUAL
    (56) operador_condicional -> . MENOR
    (57) operador_condicional -> . MENORIGUAL

    DIFERENTE       shift and go to state 111
    IGUAL           shift and go to state 112
    MAYOR           shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENOR           shift and go to state 115
    MENORIGUAL      shift and go to state 116

    operador_condicional           shift and go to state 163

state 161

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion . PUNTOYCOMA incdec PARDER

    PUNTOYCOMA      shift and go to state 164


state 162

    (71) op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra . PARDER

    PARDER          shift and go to state 165


state 163

    (59) condicion_extra -> operador_logico tipo_variable operador_condicional . tipo_variable condicion_extra
    (61) tipo_variable -> . NOMBRE
    (62) tipo_variable -> . DOUBLE
    (63) tipo_variable -> . INT
    (64) tipo_variable -> . STRING
    (65) tipo_variable -> . FALSE
    (66) tipo_variable -> . TRUE
    (67) tipo_variable -> . llamado_funcion
    (14) llamado_funcion -> . indentacion NOMBRE PARIZQ parametro_llamado PARDER
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

  ! shift/reduce conflict for NOMBRE resolved as shift
    NOMBRE          shift and go to state 55
    DOUBLE          shift and go to state 56
    INT             shift and go to state 57
    STRING          shift and go to state 58
    FALSE           shift and go to state 59
    TRUE            shift and go to state 60
    TABULACION      shift and go to state 24

  ! NOMBRE          [ reduce using rule 79 (vacio -> .) ]

    tipo_variable                  shift and go to state 166
    llamado_funcion                shift and go to state 61
    indentacion                    shift and go to state 63
    vacio                          shift and go to state 65

state 164

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA . incdec PARDER
    (35) incdec -> . indentacion pre_incdec
    (36) incdec -> . indentacion post_incdec
    (3) indentacion -> . TABULACION indentacion
    (4) indentacion -> . vacio
    (79) vacio -> .

    TABULACION      shift and go to state 24
    INCREMENTAR     reduce using rule 79 (vacio -> .)
    DECREMENTAR     reduce using rule 79 (vacio -> .)
    NOMBRE          reduce using rule 79 (vacio -> .)

    indentacion                    shift and go to state 167
    incdec                         shift and go to state 168
    vacio                          shift and go to state 65

state 165

    (71) op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER .

    NEWLINE         reduce using rule 71 (op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER .)
    PARDER          reduce using rule 71 (op_aritmetica_extra -> operador_aritmetico PARIZQ tipo_variable op_aritmetica_extra PARDER .)


state 166

    (59) condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable . condicion_extra
    (59) condicion_extra -> . operador_logico tipo_variable operador_condicional tipo_variable condicion_extra
    (60) condicion_extra -> . vacio
    (77) operador_logico -> . AND
    (78) operador_logico -> . OR
    (79) vacio -> .

    AND             shift and go to state 149
    OR              shift and go to state 150
    PARDER          reduce using rule 79 (vacio -> .)
    PUNTOYCOMA      reduce using rule 79 (vacio -> .)

    operador_logico                shift and go to state 147
    condicion_extra                shift and go to state 169
    vacio                          shift and go to state 148

state 167

    (35) incdec -> indentacion . pre_incdec
    (36) incdec -> indentacion . post_incdec
    (37) pre_incdec -> . INCREMENTAR NOMBRE
    (38) pre_incdec -> . DECREMENTAR NOMBRE
    (39) post_incdec -> . NOMBRE INCREMENTAR
    (40) post_incdec -> . NOMBRE DECREMENTAR

    INCREMENTAR     shift and go to state 51
    DECREMENTAR     shift and go to state 52
    NOMBRE          shift and go to state 170

    pre_incdec                     shift and go to state 48
    post_incdec                    shift and go to state 49

state 168

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec . PARDER

    PARDER          shift and go to state 171


state 169

    (59) condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .

    PARDER          reduce using rule 59 (condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .)
    PUNTOYCOMA      reduce using rule 59 (condicion_extra -> operador_logico tipo_variable operador_condicional tipo_variable condicion_extra .)


state 170

    (39) post_incdec -> NOMBRE . INCREMENTAR
    (40) post_incdec -> NOMBRE . DECREMENTAR

    INCREMENTAR     shift and go to state 78
    DECREMENTAR     shift and go to state 79


state 171

    (34) for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER .

    NEWLINE         reduce using rule 34 (for -> indentacion FOR PARIZQ DECVARIABLE ASIGNACION INT PUNTOYCOMA condicion PUNTOYCOMA incdec PARDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NOMBRE in state 23 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 68 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 70 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 72 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 73 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 75 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 77 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 82 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 110 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 129 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 138 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 139 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 140 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 141 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 144 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 147 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 151 resolved as shift
WARNING: shift/reduce conflict for NOMBRE in state 163 resolved as shift
