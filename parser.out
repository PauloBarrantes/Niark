Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    COMMENT
    DIFFERENT
    IMPORT
    RETURN
    SWITCH
    TABULATION

Grammar

Rule 0     S' -> Niark
Rule 1     Niark -> methodDefinition newlines Niark
Rule 2     Niark -> instruction newlines Niark
Rule 3     Niark -> methodDefinition
Rule 4     Niark -> instruction
Rule 5     methodDefinition -> domain methodType NAME LEFTPAR parameters RIGHTPAR LEFTKEY newlines instructions RIGHTKEY
Rule 6     methodDefinition -> domain methodType NAME LEFTPAR RIGHTPAR LEFTKEY newlines instructions RIGHTKEY
Rule 7     instructions -> instruction newlines instructions
Rule 8     instruction -> simple
Rule 9     instruction -> complex
Rule 10    simple -> asignation
Rule 11    simple -> declaration
Rule 12    simple -> read
Rule 13    simple -> print
Rule 14    simple -> functionCall
Rule 15    asignation -> NAME ASIGNATION arithmetic
Rule 16    asignation -> NAME ASIGNATION variable
Rule 17    asignation -> NAME LEFTBRACKET variable RIGHTBRACKET ASIGNATION arithmetic
Rule 18    asignation -> NAME LEFTBRACKET variable RIGHTBRACKET ASIGNATION variable
Rule 19    asignation -> NAME LEFTBRACKET arithmetic RIGHTBRACKET ASIGNATION arithmetic
Rule 20    declaration -> VARDECLARATION
Rule 21    declaration -> VARDECLARATION ASIGNATION arithmetic
Rule 22    declaration -> VARDECLARATION ASIGNATION variable
Rule 23    declaration -> VARDECLARATION LEFTBRACKET variable RIGHTBRACKET
Rule 24    declaration -> VARDECLARATION LEFTBRACKET arithmetic RIGHTBRACKET
Rule 25    declaration -> VARDECLARATION LEFTBRACKET variable RIGHTBRACKET ASIGNATION arithmetic
Rule 26    declaration -> VARDECLARATION LEFTBRACKET variable RIGHTBRACKET ASIGNATION variable
Rule 27    declaration -> VARDECLARATION LEFTBRACKET arithmetic RIGHTBRACKET ASIGNATION arithmetic
Rule 28    read -> READ LEFTPAR NAME RIGHTPAR
Rule 29    read -> READ LEFTPAR VARDECLARATION RIGHTPAR
Rule 30    print -> PRINT LEFTPAR variables RIGHTPAR
Rule 31    functionCall -> NAME LEFTPAR variables RIGHTPAR
Rule 32    functionCall -> NAME LEFTPAR empty RIGHTPAR
Rule 33    complex -> ifCondition
Rule 34    complex -> forCondition
Rule 35    complex -> whileCondition
Rule 36    ifCondition -> IF LEFTPAR conditionals RIGHTPAR LEFTKEY ignore instructions RIGHTKEY
Rule 37    ifCondition -> IF LEFTPAR conditionals RIGHTPAR LEFTKEY ignore instructions RIGHTKEY ignore ELSE LEFTKEY ignore instructions RIGHTKEY
Rule 38    ifCondition -> IF LEFTPAR conditionals RIGHTPAR LEFTKEY ignore instructions RIGHTKEY ignore ELSE ignore ifCondition
Rule 39    forCondition -> FOR LEFTPAR declaration SEMICOLON conditionals SEMICOLON incdec RIGHTPAR LEFTKEY ignore instructions RIGHTKEY
Rule 40    whileCondition -> WHILE LEFTPAR conditionals RIGHTPAR LEFTKEY ignore instructions RIGHTKEY
Rule 41    conditionals -> condition
Rule 42    conditionals -> condition conditionalOp conditionals
Rule 43    conditionals -> LEFTPAR condition RIGHTPAR conditionalOp conditionals
Rule 44    conditionals -> LEFTPAR condition RIGHTPAR
Rule 45    condition -> variable conditionOp variable
Rule 46    condition -> variable conditionOp variableType
Rule 47    condition -> variableType conditionOp variable
Rule 48    condition -> variableType conditionOp variableType
Rule 49    incdec -> preIncdec
Rule 50    incdec -> postIncdec
Rule 51    preIncdec -> INCREASE variable
Rule 52    preIncdec -> DECREASE variable
Rule 53    postIncdec -> variable INCREASE
Rule 54    postIncdec -> variable DECREASE
Rule 55    conditionalOp -> AND
Rule 56    conditionalOp -> OR
Rule 57    conditionOp -> EQUALS
Rule 58    conditionOp -> LESSER
Rule 59    conditionOp -> GREATER
Rule 60    conditionOp -> LESSEREQUAL
Rule 61    conditionOp -> GREATEREQUAL
Rule 62    domain -> PUBLIC
Rule 63    domain -> PRIVATE
Rule 64    methodType -> VOID
Rule 65    methodType -> FUNCTION
Rule 66    parameters -> NAME COMMA parameters
Rule 67    parameters -> NAME
Rule 68    variables -> variable COMMA variables
Rule 69    variables -> variable
Rule 70    variable -> NAME
Rule 71    variable -> vectorVariable
Rule 72    vectorVariable -> NAME LEFTBRACKET arithmetic RIGHTBRACKET
Rule 73    vectorVariable -> NAME LEFTBRACKET INT RIGHTBRACKET
Rule 74    vectorVariable -> NAME LEFTBRACKET variable RIGHTBRACKET
Rule 75    variableType -> numberType
Rule 76    variableType -> stringType
Rule 77    variableType -> booleanType
Rule 78    numberType -> INT
Rule 79    numberType -> DOUBLE
Rule 80    stringType -> STRING
Rule 81    booleanType -> FALSE
Rule 82    booleanType -> TRUE
Rule 83    arithmetic -> numberType arithmeticOp moreArithmetic
Rule 84    arithmetic -> LEFTPAR arithmetic RIGHTPAR
Rule 85    arithmetic -> LEFTPAR arithmetic RIGHTPAR arithmeticOp moreArithmetic
Rule 86    moreArithmetic -> numberType
Rule 87    moreArithmetic -> atithmetic
Rule 88    arithmeticOp -> SUM
Rule 89    arithmeticOp -> SUBSTRACTION
Rule 90    arithmeticOp -> MULTIPLICATION
Rule 91    arithmeticOp -> DIVISION
Rule 92    newlines -> NEWLINE ignore
Rule 93    ignore -> empty
Rule 94    empty -> <empty>

Terminals, with rules where they appear

AND                  : 55
ASIGNATION           : 15 16 17 18 19 21 22 25 26 27
BREAK                : 
CASE                 : 
COMMA                : 66 68
COMMENT              : 
DECREASE             : 52 54
DIFFERENT            : 
DIVISION             : 91
DOUBLE               : 79
ELSE                 : 37 38
EQUALS               : 57
FALSE                : 81
FOR                  : 39
FUNCTION             : 65
GREATER              : 59
GREATEREQUAL         : 61
IF                   : 36 37 38
IMPORT               : 
INCREASE             : 51 53
INT                  : 73 78
LEFTBRACKET          : 17 18 19 23 24 25 26 27 72 73 74
LEFTKEY              : 5 6 36 37 37 38 39 40
LEFTPAR              : 5 6 28 29 30 31 32 36 37 38 39 40 43 44 84 85
LESSER               : 58
LESSEREQUAL          : 60
MULTIPLICATION       : 90
NAME                 : 5 6 15 16 17 18 19 28 31 32 66 67 70 72 73 74
NEWLINE              : 92
OR                   : 56
PRINT                : 30
PRIVATE              : 63
PUBLIC               : 62
READ                 : 28 29
RETURN               : 
RIGHTBRACKET         : 17 18 19 23 24 25 26 27 72 73 74
RIGHTKEY             : 5 6 36 37 37 38 39 40
RIGHTPAR             : 5 6 28 29 30 31 32 36 37 38 39 40 43 44 84 85
SEMICOLON            : 39 39
STRING               : 80
SUBSTRACTION         : 89
SUM                  : 88
SWITCH               : 
TABULATION           : 
TRUE                 : 82
VARDECLARATION       : 20 21 22 23 24 25 26 27 29
VOID                 : 64
WHILE                : 40
error                : 

Nonterminals, with rules where they appear

Niark                : 1 2 0
arithmetic           : 15 17 19 19 21 24 25 27 27 72 84 85
arithmeticOp         : 83 85
asignation           : 10
atithmetic           : 87
booleanType          : 77
complex              : 9
condition            : 41 42 43 44
conditionOp          : 45 46 47 48
conditionalOp        : 42 43
conditionals         : 36 37 38 39 40 42 43
declaration          : 11 39
domain               : 5 6
empty                : 32 93
forCondition         : 34
functionCall         : 14
ifCondition          : 33 38
ignore               : 36 37 37 37 38 38 38 39 40 92
incdec               : 39
instruction          : 2 4 7
instructions         : 5 6 7 36 37 37 38 39 40
methodDefinition     : 1 3
methodType           : 5 6
moreArithmetic       : 83 85
newlines             : 1 2 5 6 7
numberType           : 75 83 86
parameters           : 5 66
postIncdec           : 50
preIncdec            : 49
print                : 13
read                 : 12
simple               : 8
stringType           : 76
variable             : 16 17 18 18 22 23 25 26 26 45 45 46 47 51 52 53 54 68 69 74
variableType         : 46 47 48 48
variables            : 30 31 68
vectorVariable       : 71
whileCondition       : 35

